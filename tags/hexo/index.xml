<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hexo on weearc 的个人博客</title>
    <link>https://blog.weearc.top/tags/hexo/</link>
    <description>Recent content in hexo on weearc 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.weearc.top/tags/hexo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>定制hugo主题模板</title>
      <link>https://blog.weearc.top/posts/469339652/</link>
      <pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.weearc.top/posts/469339652/</guid>
      <description>更换到 hugo 也有段时间了，之前使用的好歹还是个类似 next 之于 hexo 的 PaperMod 主题作为切换到 hugo 的第一个主题。但是毕竟自己魔改了一大堆东西，然后全部是用 js 操作各种 dom ，虽然看上去挺炫酷的，但是代价是 iOS 支持直接没做。 以及稀烂的可维护性。这时候想起来 Maupassant 的好了，hexo 虽然核心程序一坨，但是主题足够轻快，自己定义维护修改了好些年也可用度相当高。那没办法，心一横自己重新写好了。&#xA;但至于怎么写，和怎么设计，这次也没多考虑，换 hugo 以前用什么理论上照着写就行，毕竟都是模板，css 也比较好迁移，只要 css 库不用太奇葩的都能应对。但缺点是没用到比如 hugo 的 og （opengraph） 部分，还是用一些老办法，可能过于守旧，而且不利于再以后的一些迁移工作。不过话又说回来能完成需求的代码就是好代码，过去的代码就足够稳健，能用就行，既然是博客，除了应该是技术的 playground 还应该出产内容才对，不应该只关注技术更新忽略内容产出。&#xA;结构研究 hugo 文件目录结构 关于 hexo 的部分可以参考以前的文章。hugo 虽然默认模块有点反直觉，但是其实还是老一套的东西。直接先生成一套模板：&#xA;1 hugo new theme &amp;#34;&amp;lt;theme-name&amp;gt;&amp;#34; 然后就会在 themes/&amp;lt;theme-name&amp;gt; 生成对应内容模板。如果这时候去查看一下目录下的文件：&#xA;1 2 ❯ ls archetypes/ assets/ content/ data/ hugo.toml i18n/ layouts/ LICENSE README.md static/ theme.toml 很容易就发现其实就是个 hugo site 的结构。那么如果发现了这点，就很容易联想到 hugo 本身当使用三方主题时候的一些技巧。就是当三方主题被 git clone 或者作为 mod 引入时候，如果需要更改则不需要更改主题本身的文件，由于 hugo 的查找顺序是优先匹配，大概的查找顺序如下，比如针对 layout/test.</description>
    </item>
    <item>
      <title>hexo 主题模板改造记录 2</title>
      <link>https://blog.weearc.top/posts/60875/</link>
      <pubDate>Fri, 19 Feb 2021 17:17:28 +0000</pubDate>
      <guid>https://blog.weearc.top/posts/60875/</guid>
      <description>第一篇： hexo主题迁移and折腾记&#xA;第二篇：hexo主题模版改造记录&#xA;本来在第二篇的时间就打算把剪贴板这件事搞定的，但是一拖拖了好久。&#xA;起因 要知道很多 Hexo 模版都提供剪贴板功能，以及备案号展示功能，但是我这模版太早期了，要是用最新版本的那么自己的代码部分又要全部重新弄，我是非常不愿意这么做。那就不如自己来实现了。然后搜了很久以后我看到这么一篇文章：在 Hexo 主題內新增程式碼片段複製功能 这就很好啊，很符合我的要求。于是动工。&#xA;思路 如果直接修改模版的话似乎也不是不行，但是那样的话可能会极大降低灵活度，另外我在翻看页面文件的时候也并未发现指定代码框的部分，因此还是直接用 JS 操作 DOM Tree 吧。&#xA;如图我们基本可以看到实际上应该一个 highlight 下面俩子节点一个 code 一个 gutter ，这样的话其实如果按照上面链接内文章操作的话是在这段的顶部套一个 DIV 然后插入按钮什么的进去，但是这样似乎对我的这个模板来说不是很友好，所以最后我会选择插入这么个玩意儿：&#xA;1 2 3 4 5 6 7 &amp;lt;div id=&amp;#34;codeblock-titlebar&amp;#34;&amp;gt; &amp;lt;span id=&amp;#34;lang-title&amp;#34; style=&amp;#34;font-size: 5px&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;button class=&amp;#34;codecopy-btn tooltipped tooltipped-sw&amp;#34; aria-label=&amp;#34;Copy to clipboard&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;fa fa-copy&amp;#34; aria-hidden=&amp;#34;true&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; click to copy &amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; 这样就好多了，也不需要担心顶层按钮后面放不了东西背景空一块出来。&#xA;操作 但是其实只要观察过就会知道，整个代码框的部分全部是动态的，也就是说我们无法根据元素进行定位，只能使用 hexo 给定的父级对象操作，然后针对每个对象都如此操作才能在每个代码框中都插入按钮。因此代码如下：&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 var snippets = document.</description>
    </item>
    <item>
      <title>使用 github actions 部署博客到腾讯云</title>
      <link>https://blog.weearc.top/posts/4529/</link>
      <pubDate>Fri, 21 Aug 2020 17:31:23 +0000</pubDate>
      <guid>https://blog.weearc.top/posts/4529/</guid>
      <description>&lt;p&gt;因为我本人也不是那么熟悉 GITHUB Actions 这玩意儿所以这篇文章仅仅针对性的告诉你怎样配置单单这个自动化部署而已。咕咕咕了很久也是时候应该把这篇补上了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hexo主题模版改造记录</title>
      <link>https://blog.weearc.top/posts/31380/</link>
      <pubDate>Mon, 05 Aug 2019 23:37:27 +0000</pubDate>
      <guid>https://blog.weearc.top/posts/31380/</guid>
      <description>&lt;p&gt;有时候就是心血来潮才想搞一些好玩的，假期一旦懒下来人就待完了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hexo主题迁移and折腾记</title>
      <link>https://blog.weearc.top/posts/6009/</link>
      <pubDate>Sat, 06 Apr 2019 15:25:05 +0000</pubDate>
      <guid>https://blog.weearc.top/posts/6009/</guid>
      <description>&lt;p&gt;老实说，其实为什么突然又开始折腾折腾主题了呢&amp;hellip;&amp;hellip;.因为&lt;em&gt;&lt;strong&gt;用NexT的人实在太多了&lt;/strong&gt;&lt;/em&gt;。而我又不想让别人打开发现“和某个某个人的很像”。那样就失去了折腾的必要。因此我决定切换主题。另：本文在调整的相对安逸之前会持续更新。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
