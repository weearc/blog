<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018-06-09</title>
    <url>/posts/50563.html</url>
    <content><![CDATA[<p>天气炎热，本来说好的义诊人一共没来几个。微型网友见面会了解一下，虽然还是很舒服的。</p>
]]></content>
      <tags>
        <tag>杂记</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo主题迁移and折腾记</title>
    <url>/posts/6009.html</url>
    <content><![CDATA[<p>老实说，其实为什么突然又开始折腾折腾主题了呢…….因为<strong><em>用NexT的人实在太多了</em></strong>。而我又不想让别人打开发现“和某个某个人的很像”。那样就失去了折腾的必要。因此我决定切换主题。另：本文在调整的相对安逸之前会持续更新。</p>
<a id="more"></a>
<p>这个目标主题<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">Maupassant</a>，也是早就看上的，但是考虑到next实在太方便了才没能有勇气换过去。直到最近假期才敢小小的折腾一下。在这里感谢一下将这个主题移植到<a href="https://hexo.io" target="_blank" rel="noopener">hexo</a>博客系统的大大。如果有机会的话我要尝试把它移植到<a href="https://gohugo.io" target="_blank" rel="noopener">HUGO</a>上看看。稍微小小的看了一下，虽然用的人很多。但是因为结构不算复杂，而且pug格式也方便和纯HTML进行转换，因此可以随时随地添加自己喜欢的插件，把博客改造成自己中意的样子。接下来尽可能简单的并详细的介绍下改造以及部署流程。</p>
<h1 id="主体部分"><a href="#主体部分" class="headerlink" title="主体部分"></a>主体部分</h1><h2 id="hexo部署"><a href="#hexo部署" class="headerlink" title="hexo部署"></a>hexo部署</h2><p>这个我想既然会看这篇文章的话至少说明回去读<a href="https://hexo.io/docs/" target="_blank" rel="noopener">hexo的文档</a>吧！但是以防万一还是从基础开始。</p>
<p>首先配置好nodejs环境，这个绝对不会再写了，无论是哪个平台教程都多得很。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yarn add hexo-cli</span><br></pre></td></tr></table></figure>
<p>这样就部署完成了hexo本体。像我一样做过系统迁移的人，可能需要直接在博客工程文件文件夹内执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>然后参考文档建立初始站点，此时应该是使用了landscape主题。那么接下来填写好hexo的_config.yml相关内容。这部分的各个参数请直接参考hexo官方介绍。因为几乎都是自然语言，因此并不难处理。</p>
<h2 id="Maupassant主题部署"><a href="#Maupassant主题部署" class="headerlink" title="Maupassant主题部署"></a>Maupassant主题部署</h2><p>和大多数hexo引擎的主题采用swig格式的模版不同，Maupassant使用的是pug格式的模版，这个之前也说过了。这种格式并没有比起原生HTML来的更有什么优势。但是可以单独罗列各个部分组件可以更方便的互相拼凑。</p>
<p>按照README，执行一下命令进行部署（我权当此时你仍在工程文件的根目录下）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">$ yarn add hexo-renderer-pug</span><br><span class="line">$ yarn add hexo-renderer-sass</span><br></pre></td></tr></table></figure>
<p>此时hexo应该有能力渲染pug模版的页面了。</p>
<p>接下来仍然是根据自己需求修改_config.yml文件。这部分也没什么好说的。</p>
<h1 id="开始魔改"><a href="#开始魔改" class="headerlink" title="开始魔改"></a>开始魔改</h1><p>为什么说是魔改，因为都是只涉及到前端所需要的代码，相对容易修改和调试，只要稍花点心思就可以调整成自己想要的样子。</p>
<h2 id="修改永久链接-amp-添加评论"><a href="#修改永久链接-amp-添加评论" class="headerlink" title="修改永久链接&amp;添加评论"></a>修改永久链接&amp;添加评论</h2><p>首先是修改评论系统。之前已知使用Disqus!作为评论系统的，但是由于众所周知的原因，这货并没想象的那么棒，那么需要一个相对折中的方案。最开始想选择更为流行的Gitment，但是作者服务器到期了，因此更换为GitTalk。如果只是简单的添加评论系统的话并不能称得上是魔改。如果各位仔细观察的话会发现hexo的文章链接形式都是<strong>时间+文章名</strong>，这样就难免出现比如中文标题的文章不能初始化评论的问题。</p>
<p>因此这时候需要用到这款插件：hexo-abbrlink。主要作用是将原本非常长的文章链接修改成比较短的、数字加字母的随机生成的链接。</p>
<p>执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yarn add hexo-abbrlink</span><br></pre></td></tr></table></figure>
<p>添加该插件。然后修改站点的_config.yml：</p>
<p>添加内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#abbrlink</span></span><br><span class="line"><span class="attr">abbrink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span></span><br></pre></td></tr></table></figure>
<p>并修改永久链接样式：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure>
<p>这时候重新生成饮下会发现所有文章链接变成了相对短的链接。而且这款插件会在生成新post时候自动添加选项。非常方便。如果不放心的话可以修改post模版文件。</p>
<h3 id="修改文章文件名"><a href="#修改文章文件名" class="headerlink" title="修改文章文件名"></a>修改文章文件名</h3><p>为什么要单列出来这个，因为我们有了addrlink这个好东西。但是无论是用什么来管理文章的话，如果全部是带有下划线或者短杠的文件名的话并不利于管理。因此修改站点配置文件_config.yml：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br></pre></td></tr></table></figure>
<h2 id="添加进度条效果"><a href="#添加进度条效果" class="headerlink" title="添加进度条效果"></a>添加进度条效果</h2><p>这个其实应该是不算难的。因为只涉及到修改CSS部分以及引入pace.js。</p>
<blockquote>
<p> 注：以下全部都涉及到主题模版的修改，请全部在主题文件夹进行</p>
</blockquote>
<p>修改head.pug：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> //- 插入进度条</span><br><span class="line"> script(src='//cdn.bootcss.com/pace/1.0.2/pace.min.js')</span><br><span class="line"> link(href='//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css', rel='stylesheet')</span><br><span class="line"> style.</span><br><span class="line">   .pace .pace-progress &#123;</span><br><span class="line">   background: #1abc9c;</span><br><span class="line">   height: 3px;</span><br><span class="line">   &#125;</span><br><span class="line">   .pace .pace-progress-inner &#123;</span><br><span class="line">   box-shadow: 0 0 10px #1abc9c, 0 0 5px     #1abc9c;</span><br><span class="line">   &#125;</span><br><span class="line">   .pace .pace-activity &#123;</span><br><span class="line">   border-top-color: #1abc9c; </span><br><span class="line">   border-left-color: #1abc9c; </span><br><span class="line">   &#125;</span><br><span class="line">//- 插入进度掉end</span><br></pre></td></tr></table></figure>
<p>如果实在是无法手写pug的话可以先考虑写成HTML再用转换工具进行转换。</p>
<h2 id="添加点击的烟花效果"><a href="#添加点击的烟花效果" class="headerlink" title="添加点击的烟花效果"></a>添加点击的烟花效果</h2><p>同样修改head.pug，添加如下行：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//- 烟花点击效果</span><br><span class="line">    if theme.fireworks</span><br><span class="line">      canvas.fireworks(style='position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;')</span><br><span class="line">        script(type='text/javascript', src='//cdn.bootcss.com/animejs/2.2.0/anime.min.js')</span><br><span class="line">        script(type='text/javascript', src='/js/fireworks.js')</span><br><span class="line">//- 烟花点击效果end</span><br></pre></td></tr></table></figure>
<p>在source/js/下添加fireworks.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>,</span><br><span class="line">        a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">        n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a; <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill() &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span> &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125;</span><br><span class="line">    anime.timeline().add(&#123; <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.x &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.y &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule &#125;).add(&#123; <span class="attr">targets</span>: a, <span class="attr">radius</span>: anime.random(<span class="number">80</span>, <span class="number">160</span>), <span class="attr">lineWidth</span>: <span class="number">0</span>, <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule, <span class="attr">offset</span>: <span class="number">0</span> &#125;) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> n = <span class="keyword">this</span>,</span><br><span class="line">            i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; e.apply(n, i) &#125;, t) &#125; &#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123; <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        numberOfParticules = <span class="number">30</span>,</span><br><span class="line">        pointerX = <span class="number">0</span>,</span><br><span class="line">        pointerY = <span class="number">0</span>,</span><br><span class="line">        tap = <span class="string">"mousedown"</span>,</span><br><span class="line">        colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>],</span><br><span class="line">        setCanvasSize = debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>) &#125;, <span class="number">500</span>),</span><br><span class="line">        render = anime(&#123; <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height) &#125; &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>) &#125;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123; pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>,</span><br><span class="line">        a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">        n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a; <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill() &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span> &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125;</span><br><span class="line">    anime.timeline().add(&#123; <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.x &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.y &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule &#125;).add(&#123; <span class="attr">targets</span>: a, <span class="attr">radius</span>: anime.random(<span class="number">80</span>, <span class="number">160</span>), <span class="attr">lineWidth</span>: <span class="number">0</span>, <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule, <span class="attr">offset</span>: <span class="number">0</span> &#125;) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> n = <span class="keyword">this</span>,</span><br><span class="line">            i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; e.apply(n, i) &#125;, t) &#125; &#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        numberOfParticules = <span class="number">30</span>,</span><br><span class="line">        pointerX = <span class="number">0</span>,</span><br><span class="line">        pointerY = <span class="number">0</span>,</span><br><span class="line">        tap = <span class="string">"mousedown"</span>,</span><br><span class="line">        colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>],</span><br><span class="line">        setCanvasSize = debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>) &#125;, <span class="number">500</span>),</span><br><span class="line">        render = anime(&#123; <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height) &#125; &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>这个部分可以自己按照洗好做一定的修改，会有不一样的效果。</p>
<h2 id="添加不蒜子站点浏览数"><a href="#添加不蒜子站点浏览数" class="headerlink" title="添加不蒜子站点浏览数"></a>添加不蒜子站点浏览数</h2><p>修改footer.pug，并添加如下行：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">script(async='', src='https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js')</span><br><span class="line">  span<span class="meta">#busuanzi_container_site_pv</span></span><br><span class="line">    i.fa.fa-eye</span><br><span class="line">    <span class="string">| 访问量</span></span><br><span class="line">    span<span class="meta">#busuanzi_value_site_pv</span></span><br><span class="line">    <span class="string">| 次 |  </span></span><br><span class="line">  span<span class="meta">#busuanzi_container_site_uv</span></span><br><span class="line">    i.fa.fa-user-md</span><br><span class="line">    <span class="string">| 访客数</span></span><br><span class="line">    span<span class="meta">#busuanzi_value_site_uv</span></span><br><span class="line">    <span class="string">| 人</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure>
<p>由于pug对空格敏感，因此空格多少可以相对容易的调整。</p>
<h2 id="添加clipboard-js"><a href="#添加clipboard-js" class="headerlink" title="添加clipboard.js"></a>添加clipboard.js</h2><p>(待完成)</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用nodejs+shellscript实现github-webhook</title>
    <url>/posts/41471.html</url>
    <content><![CDATA[<a id="more"></a>]]></content>
      <tags>
        <tag>webhook</tag>
        <tag>nodejs</tag>
        <tag>自动化流程</tag>
      </tags>
  </entry>
  <entry>
    <title>archlinux安装配置(3)</title>
    <url>/posts/12422.html</url>
    <content><![CDATA[<p>距离第一篇博文时隔快两年的更新。由于本次配置文件有问题，KDE直接罢工。修补无果于是决定重装。</p>
<a id="more"></a>
<p>前文：</p>
<ul>
<li><a href="https://blog.weearc.top/posts/7521.html">基础系统安装</a></li>
<li><a href="https://blog.weearc.top/posts/60769.html">基础系统配置</a></li>
</ul>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文将会涉及到的内容：</p>
<ul>
<li>相当个人级别的系统配置</li>
<li>可能非常不符合常理的做法</li>
<li>可能涉及到的错误</li>
</ul>
<p>如果是第一次或者还没安装的话可以先按照正经的步骤进行安装以避免误导。</p>
<h1 id="chroot下的变更"><a href="#chroot下的变更" class="headerlink" title="chroot下的变更"></a>chroot下的变更</h1><p>在正常的安装流程下，我增加安装了几个包：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">pacman -S fish iw <span class="keyword">dialog </span>dhcp wpa_supplicant vim sudo <span class="keyword">screenfetch </span>htop</span><br></pre></td></tr></table></figure>
<p>将其分为几类：</p>
<ul>
<li>shell: fish(开箱即用的强大shell)</li>
<li>network: iw dialog wpa_supplicant dhcp(保证进入新系统有网)</li>
<li>editor: vim(个人非常喜欢的编辑器，更改sudoer会强制使用)</li>
<li>tools: htop sudo screenfetch(强大的进程管理器、提权工具、基础信息查看)</li>
</ul>
<p>这样的话进入新系统会节省一部分时间。</p>
<h1 id="新系统下的更改"><a href="#新系统下的更改" class="headerlink" title="新系统下的更改"></a>新系统下的更改</h1><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>由于我是重新安装系统，因此<code>/home</code>还在，因此没必要按照常规的在新建用户时候添加<code>-m</code>选项：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">useradd username</span></span><br></pre></td></tr></table></figure>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">passwd username</span></span><br></pre></td></tr></table></figure>
<p>这样的话就完成了用户建立（并且使用旧的<code>/home</code>）。</p>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>因为之前配置完了大部分的内容，因此进入系统的第二件事是先联网。这里使用的是<code>netctl</code>,稍后再更换为<code>NetworkManager</code>。</p>
<p>因为是wifi链接，所以执行：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wifi-menu</span></span><br></pre></td></tr></table></figure>
<p>然后连接到自己需要的网络。由于个人的路由器是限制设备ip的，因此需要在设备上填入固定IP才能正常联网。虽然上一步执行后失败，但是此时<code>netctl</code>已经有了需要的配置文件。形如：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/netctl/wlp2s0-wifi</span></span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">Description='Automatically generated profile by wifi-menu'</span><br><span class="line">Interface=wlp2s0</span><br><span class="line">Connection=wireless</span><br><span class="line">Security=wpa</span><br><span class="line">ESSID= <span class="comment">#WiFi名称</span></span><br><span class="line">IP=static</span><br><span class="line">Address=() <span class="comment">#指定的IP</span></span><br><span class="line">Gateway= <span class="comment">#网关，不知道怎么确定的就填写192.168.1.0一般没问题</span></span><br><span class="line">Key= <span class="comment">#密码</span></span><br></pre></td></tr></table></figure>
<p>当然这个是修改过的，然后执行：</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">netctl <span class="literal">start</span> wlp2s0-wifi</span><br></pre></td></tr></table></figure>
<p>来连接到这个Wifi，并使用：</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">netctl <span class="keyword">status</span> wlp2s0-wifi</span><br></pre></td></tr></table></figure>
<p>查看连接状况。</p>
<p>这样的话应该是有网络了。</p>
<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>按照个人喜好，我比较习惯把包管理的颜色打开，便于区分包。</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># /etc/pacman.conf</span></span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line"><span class="meta"># Misc options部分</span></span><br><span class="line"><span class="meta">#UseSyslog</span></span><br><span class="line">Color #取消注释</span><br><span class="line"><span class="meta">#TotalDownload</span></span><br><span class="line">CheckSpace</span><br><span class="line">VerbosePkgLists #取消注释，更新时可看到变动信息</span><br><span class="line"></span><br><span class="line"><span class="meta"># 32位的东西有时候不可避免，为了不必要的麻烦需要打开</span></span><br><span class="line">[multilib]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加ArchlinuxCN仓库</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = TrustedOnly</span><br><span class="line">Server = http:<span class="comment">//mirrors.cqu.edu.cn/archlinuxcn/$arch</span></span><br></pre></td></tr></table></figure>
<p>之后需要执行：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman</span> -Syy  <span class="comment">#更新本地包管理的数据库</span></span><br><span class="line">pacman -S archlinuxcn-keyring <span class="comment">#添加archlinuxCN的签名，主要是为了安全，大概</span></span><br></pre></td></tr></table></figure>
<h2 id="桌面环境安装"><a href="#桌面环境安装" class="headerlink" title="桌面环境安装"></a>桌面环境安装</h2><p>一般来讲选KDE还是选gnome这个确实看眼缘。由于gnome上个版本的内存泄露太邪门了，虽然目前已经修好但是我还是用KDE吧。</p>
<p>安装KDE的话一般可能会推荐安装整个Plasma套件，但是好多东西其实用不到，因此也没必要装。我还是决定从最基础的plasma desktop 开始像搭积木一样配置好。</p>
<p>先安装最基础的桌面环境：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -S plasma-desktop</span></span><br></pre></td></tr></table></figure>
<p>然后我们装一下驱动，我是intel核显加上A卡独显，不怎么麻烦，并且A卡先不打算用，入门级性能弱的要死也没办法用：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman</span> -S xf86-video-intel</span><br></pre></td></tr></table></figure>
<p>一般这样的话 I 卡就可以正常工作了。然后安装桌面管理器<code>SDDM</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S sddm</span><br><span class="line">systemctl <span class="built_in">enable</span> sddm <span class="comment">#添加sddm开机启动</span></span><br></pre></td></tr></table></figure>
<p>因为我们进入桌面环境以后还需要进行配置，因此终端以及文件管理器是必须的：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -S konsole dolphin</span></span><br></pre></td></tr></table></figure>
<p>然后重启进入KDE。</p>
<h2 id="剩余桌面环境配置"><a href="#剩余桌面环境配置" class="headerlink" title="剩余桌面环境配置"></a>剩余桌面环境配置</h2><p>进入桌面环境以后就都属于比较常规的配置了，依照个人喜好进行配置就好。</p>
<h3 id="仍然是系统组件部分"><a href="#仍然是系统组件部分" class="headerlink" title="仍然是系统组件部分"></a>仍然是系统组件部分</h3><p>一般来讲的话我们的桌面目前已经可以使用了，但是为了一些更加方便的调整我们需要安装一些KDE设置中心的插件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Ss kcm</span><br></pre></td></tr></table></figure>
<p>不出意外的话应该得到如下结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">extra/kcmutils 5.60.0-1 (kf5) </span><br><span class="line">    Utilities <span class="keyword">for</span> interacting with KCModules</span><br><span class="line">extra/sddm-kcm 5.16.3-1 (plasma) </span><br><span class="line">    KDE Config Module <span class="keyword">for</span> SDDM</span><br><span class="line">extra/telepathy-kde-accounts-kcm 19.04.3-1 (kde-applications kdenetwork telepathy-kde)</span><br><span class="line">    KCM Module <span class="keyword">for</span> configuring Telepathy Instant Messaging Accounts</span><br><span class="line">community/kcm-fcitx 0.5.5-2 </span><br><span class="line">    KDE Config Module <span class="keyword">for</span> Fcitx</span><br><span class="line">community/kcm-wacomtablet 1:3.1.1-1</span><br><span class="line">    KDE GUI <span class="keyword">for</span> the Wacom Linux Drivers</span><br><span class="line">archlinuxcn/kcm-colorful-git 1.0.1.r0.g2cb0524-1 </span><br><span class="line">    Make your KDE plasma colorful</span><br><span class="line">archlinuxcn/kcm-fcitx5-git r240.62e087f-2</span><br><span class="line">    KDE Config Module <span class="keyword">for</span> Fcitx5</span><br><span class="line">archlinuxcn/nx-firewall-git 0.1.r70.gdf134bd-1 </span><br><span class="line">    Firewall KCM: Plasma 5 Firewall KCM.</span><br><span class="line">archlinuxcn/systemd-kcm 1.2.1-4 </span><br><span class="line">    Systemd control module <span class="keyword">for</span> KDE</span><br></pre></td></tr></table></figure>
<p>挑选我们喜欢的组件安装即可。</p>
<p>另外，由于对于显示部分以及触控板都有额外组件可以用，参照ArchLinux的wiki来一个个安装就可以了，比如相当常用的两个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kscreen   libinput</span><br></pre></td></tr></table></figure>
<p>这部分完全是各取所需，另外比如<code>axel</code>等命令行工具也是可以根据需求安装的。</p>
<h3 id="美化部分"><a href="#美化部分" class="headerlink" title="美化部分"></a>美化部分</h3>]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
        <tag>完全配置</tag>
      </tags>
  </entry>
  <entry>
    <title>使用zenity+xclip实现文字复制粘贴</title>
    <url>/posts/5960.html</url>
    <content><![CDATA[<p>都多久了我也不太记得，网易云下竟然由于qt的某个问题不能使用fcitx输入中文了！WTF！不过我们可以曲线救国。</p>
<a id="more"></a>
<p>就算直接不能输入中文我们也有办法暂时解决这个问题。那就是使用zenity+xclip制作一个可输入中文的带有 <strong>GUI</strong> 的一个脚本。</p>
<blockquote>
<p>xclip是Unix以及类Unix系统下非常强大的剪贴板交互程序</p>
</blockquote>
<p>我们可以简单看一下xclip的help输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: xclip [OPTION] [FILE]...</span><br><span class="line">Access an X server selection <span class="keyword">for</span> reading or writing.</span><br><span class="line"></span><br><span class="line">  -i, -<span class="keyword">in</span>          <span class="built_in">read</span> text into X selection from standard input or files</span><br><span class="line">                   (default)</span><br><span class="line">  -o, -out         prints the selection to standard out (generally <span class="keyword">for</span></span><br><span class="line">                   piping to a file or program)</span><br><span class="line">  -l, -loops       number of selection requests to <span class="built_in">wait</span> <span class="keyword">for</span> before exiting</span><br><span class="line">  -d, -display     X display to connect to (eg localhost:0<span class="string">")</span></span><br><span class="line"><span class="string">  -h, -help        usage information</span></span><br><span class="line"><span class="string">      -selection   selection to access ("</span>primary<span class="string">", "</span>secondary<span class="string">", "</span>clipboard<span class="string">" or "</span>buffer-cut<span class="string">")</span></span><br><span class="line"><span class="string">      -noutf8      don't treat text as utf-8, use old unicode</span></span><br><span class="line"><span class="string">      -target      use the given target atom</span></span><br><span class="line"><span class="string">      -rmlastnl    remove the last newline charater if present</span></span><br><span class="line"><span class="string">      -version     version information</span></span><br><span class="line"><span class="string">      -silent      errors only, run in background (default)</span></span><br><span class="line"><span class="string">      -quiet       run in foreground, show what's happening</span></span><br><span class="line"><span class="string">      -verbose     running commentary</span></span><br></pre></td></tr></table></figure>
<p>按照功能，我们需要：</p>
<ol>
<li>输入文字</li>
<li>将文字输入到剪贴板</li>
<li>将文字传给clipboard程序</li>
</ol>
<p>非常简单的三个部分。输入文字部分由zenity负责，同时将输入的文字存入变量中，之后用管道传给xclip程序。</p>
<p>那么需要用到的xclip选项应该就很容易选择了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># xclip option</span></span><br><span class="line">xclip -i  <span class="comment"># read text into X selection from standard input or files</span></span><br><span class="line">xclip --selectron clipboard <span class="comment"># copy input to clipboard for output</span></span><br></pre></td></tr></table></figure>
<p>思路明确了以后就非常容易办了，我们再看一下zenity <code>entry</code>部分的帮助说明：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用法：</span><br><span class="line">  zenity [OPTION…]</span><br><span class="line"></span><br><span class="line">文字输入选项</span><br><span class="line">  --entry                                显示文本输入对话框</span><br><span class="line">  --text=文字                            设置对话框文字</span><br><span class="line">  --entry-text=文字                      设置输入文字</span><br><span class="line">  --hide-text                            隐藏输入文字</span><br></pre></td></tr></table></figure>
<p>也就是说我们只需要使用 <code>--entry</code> 选项显示输入框即可，在尝试中发现，bash下执行zenity –entry后会将输入打印到终端，也就是说我们需要将其存为变量才可以使用。因此完整代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">words_to_copy=$(zenity --entry)</span><br><span class="line"><span class="comment"># Use zenity to display a GUI information message.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$words_to_copy</span> | xclip -i </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$words_to_copy</span> | xclip -sel c</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>zenity</tag>
        <tag>xclip</tag>
        <tag>去他妈的网易云</tag>
      </tags>
  </entry>
  <entry>
    <title>使用pandoc撰写论文</title>
    <url>/posts/1448.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>谁又说不可以呢？</p>
<a id="more"></a>
<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>一般论文写作等会有如下痛点，包含：</p>
<ul>
<li>数学公式</li>
<li>图片处理</li>
<li>交叉引用、脚注、尾注</li>
<li>参考文献的文献库处理</li>
</ul>
<p>当然大名鼎鼎的Microsoft Office当然能处理这些问题，但是与其说是能处理，不如说是处理的不当就会变得麻烦起来。在这些方面处理的最好的应该是LaTeX，但是由于其语法学习曲线非常陡峭，那么支持部分LaTeX特性的Markdown将是比较好的选择，处理得当时将包含如下特性：</p>
<ul>
<li>基于自然语言的数学公式处理</li>
<li>HTML支持，意味着markdown的写作可以很灵活多变</li>
<li>插件扩展的的流程图、甘特图、美人鱼图支持</li>
<li>交叉引用、脚注、尾注、文献自动插入</li>
<li>目录自动生成</li>
</ul>
<p>那么本文将简要的介绍下如何使用markdown来进行基本的写作。</p>
<p>注：本文内容相对较多，但是请相信看完之后收获会是巨大的。</p>
<h1 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h1><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><blockquote>
<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。[^2][@noauthor_markdown__nodate]</p>
</blockquote>
<p>看到这里很懵是不是？但是如果换种说法：DOC格式和markdown本是同根生，是不是就容易多了？DOC所有关键信息等均使用XML格式，而这个格式和markdown其实本质类似。区别是：</p>
<p>（图片）</p>
<p>哪个易读性更好一看便知。用markdown你能做什么？</p>
<ul>
<li>记笔记</li>
<li>写网页</li>
<li>其他</li>
</ul>
<h3 id="markdown编辑器推荐"><a href="#markdown编辑器推荐" class="headerlink" title="markdown编辑器推荐"></a>markdown编辑器推荐</h3><h4 id="Typora（全平台）"><a href="#Typora（全平台）" class="headerlink" title="Typora（全平台）"></a>Typora（全平台）</h4><p>所见即所得，只有用过的才知道多好用。功能最全。但是不能进行扩展。其实已有的功能已经非常够用了。</p>
<h4 id="Mu（Mac-OS）"><a href="#Mu（Mac-OS）" class="headerlink" title="Mu（Mac OS）"></a>Mu（Mac OS）</h4><p>同样所见即所得，但是功能性比Typora弱。</p>
<h4 id="Atom-或者-Visual-Studio-Code（全平台）"><a href="#Atom-或者-Visual-Studio-Code（全平台）" class="headerlink" title="Atom 或者 Visual Studio Code（全平台）"></a>Atom 或者 Visual Studio Code（全平台）</h4><p>伪装成IDE的文本编辑器，一般程序员以及编程爱好者无人不知，有巨量的插件扩展。能玩游戏看B站听歌聊QQ微信微博。摸鱼神器。</p>
<h2 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h2><blockquote>
<p>Pandoc是由John MacFarlane开发的标记语言转换工具，可实现不同标记语言间的格式转换，堪称该领域中的“瑞士军刀”。Pandoc使用Haskell语言编写，以命令行形式实现与用户的交互，可支持多种操作系统。[^3][@noauthor_pandoc_2017]</p>
</blockquote>
<p>那么它能处理的格式到底有多少种：</p>
<p>（图片）</p>
<p>图片上一个节点代表它能处理的一种格式。</p>
<h2 id="富文本"><a href="#富文本" class="headerlink" title="富文本"></a>富文本</h2><blockquote>
<p>富文本格式（Rich Text Format, 一般简称为RTF）是由微软公司开发的跨平台文档格式。一般的格式设置，比如字体和段落设置，页面设置等等信息都可以存在RTF格式中。[^1][@noauthor___nodate]</p>
</blockquote>
<p>这是狭义上的富文本，那么广义上的富文本是什么呢？就是所谓的当你编辑时所见即所得。没有谁希望编辑一个文件时还需要像二十年前一样还需要修修改源代码的吧？因此富文本及富文本编辑器的发明是非常重要的革新。但是这是不是意味着纯文本会消失呢？并不。富文本有着富文本的易用，纯文本有着纯文本的轻便。至少来讲，我可不希望在写作前写作后还需要花费大量时间插入参考资料或者调整文本的排版字体大小还是怎样。尤其在写作中如果遇到需要处理的图片，大部分人应该是相当头痛的——既需要照顾排版又不不希望切断思路。那么对于大多数只用到了Microsoft Office Word以及OneNote基础功能的人来说无论使用什么来编辑文档其实都差不了多少。</p>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="Markdown基础"><a href="#Markdown基础" class="headerlink" title="Markdown基础"></a>Markdown基础</h2><p>请不要把markdown视为非常可怕的东西。其实它非常容易掌握，而且对于使用者很友好——因为你在写作时的思路不会被打断，所有格式使用的语法非常简洁并全部可以通过一些文本实现。</p>
<p>在使用之前，为了方便书写请确保你的输入法是处于半角状态（搜狗上是月牙和圆点，月牙为半角；微软拼音在设置里调整），使用半角输入会将你的输入速度无论是在是用什么都会提高一个等级。</p>
<h3 id="标题类"><a href="#标题类" class="headerlink" title="标题类"></a>标题类</h3><p>Markdown的标题很容易表示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这时二级标题</span><br><span class="line">### 这是三级标题</span><br></pre></td></tr></table></figure>
<p>每多一级标题就可以增加一个“#”。具体支持到哪级目录需要看渲染工具的支持，理论上无限。</p>
<p><strong>注意：为了使格式生效请在“#”后记得加个空格</strong></p>
<h3 id="标注类"><a href="#标注类" class="headerlink" title="标注类"></a>标注类</h3><h4 id="文本上的标注"><a href="#文本上的标注" class="headerlink" title="文本上的标注"></a>文本上的标注</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span>			</span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"><span class="strong">***加粗的斜体**</span>*</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>当然你也可以使用下划线替换“*”，效果是一样的。</p>
<h4 id="文内引用"><a href="#文内引用" class="headerlink" title="文内引用"></a>文内引用</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">代码：</span><br><span class="line">​<span class="code">```</span>你的代码语言</span><br><span class="line">echo helloworld;</span><br><span class="line">​</span><br></pre></td></tr></table></figure>
<p>脚注：<br>这是一段实例文字。[^1]<br>[^1]: 这是实例文字的脚注，在生成的Word文档中会自动放置</p>
<p>尾注：<br>这是一段实例文字。[@example P33 Weearc]<br>Reference:<br>(自动生成，不需要动它)</p>
<p>下标：<br>~下标~</p>
<p>段落引用：</p>
<blockquote>
<p>你要引用的段落</p>
</blockquote>
<p>说明：引用完成时请多加一个回车（换行符），引用时尖括号后需要空格<br><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">以上是Markdown的基础语法部分，和普通六级专八词汇相比应该是简单的不是一星半点吧。</span><br><span class="line"></span><br><span class="line">### 链接类</span><br><span class="line"></span><br><span class="line">#### 图片</span><br><span class="line"></span><br><span class="line">```markdown</span><br><span class="line">![图片的说明](图片位置)</span><br></pre></td></tr></table></figure></p>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">链接的说明文字</span>](<span class="link">链接</span>)</span><br></pre></td></tr></table></figure>
<h2 id="markdown进阶"><a href="#markdown进阶" class="headerlink" title="markdown进阶"></a>markdown进阶</h2><h3 id="表格类"><a href="#表格类" class="headerlink" title="表格类"></a>表格类</h3><h5 id="基本表格（不含单元格合并）"><a href="#基本表格（不含单元格合并）" class="headerlink" title="基本表格（不含单元格合并）"></a>基本表格（不含单元格合并）</h5><p>基本的一个三乘三表格</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|title1|title2|title3|</span><br><span class="line">|:-----|:----:|-----:|</span><br><span class="line">|左侧对齐|居中|右侧对齐|</span><br><span class="line">|x|y|z|</span><br></pre></td></tr></table></figure>
<p>生成效果如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">title1</th>
<th style="text-align:center">title2</th>
<th style="text-align:right">title3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">左侧对齐</td>
<td style="text-align:center">居中</td>
<td style="text-align:right">右侧对齐</td>
</tr>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:center">y</td>
<td style="text-align:right">z</td>
</tr>
</tbody>
</table>
<h5 id="HTML表格（包含单元格合并的）"><a href="#HTML表格（包含单元格合并的）" class="headerlink" title="HTML表格（包含单元格合并的）"></a>HTML表格（包含单元格合并的）</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列一<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>合并行<span class="tag">&lt;/<span class="name">td</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列一<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>合并列<span class="tag">&lt;/<span class="name">td</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span>行二列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span>行三列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果：</p>
<table><br>    <tr><br>        <td>列一</td><br>        <td>列二</td><br>   </tr><br>   <tr><br>        <td colspan="2">合并行</td><br>   </tr><br>   <tr><br>        <td>列一</td><br>        <td>列二</td><br>   </tr><br>    <tr><br>        <td rowspan="2">合并列</td><br>        <td>行二列二</td><br>    </tr><br>    <tr><br>        <td>行三列二</td><br>    </tr><br></table>

<h3 id="公式类"><a href="#公式类" class="headerlink" title="公式类"></a>公式类</h3><p>此节主要包含数学公式，使用LaTeX数学公式语法。</p>
<h5 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$</span><br><span class="line">x^n</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p>生成为：$x^n$</p>
<h5 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$</span><br><span class="line">C^2_3</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p>选择数： $C^2_3$</p>
<h5 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h5><p>一个不包含tag的多项式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$</span><br><span class="line">T(n)=\begin&#123;cases&#125;</span><br><span class="line">\Theta(1)\quad n=1\\</span><br><span class="line">T(n-q)+\Theta(n) \quad n&gt;1</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p>那么生成的公式如下：</p>
<p>$T(n)=\begin{cases}<br>\Theta(1)\quad n=1\<br>T(n-q)+\Theta(n) \quad n&gt;1<br>\end{cases}$</p>
<h5 id="矩阵及行列式"><a href="#矩阵及行列式" class="headerlink" title="矩阵及行列式"></a>矩阵及行列式</h5><p>一个包含tag的矩阵[@noauthor_markdown_nodate-1]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$</span><br><span class="line"> \begin&#123;bmatrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;bmatrix&#125; \tag&#123;1&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p>$$<br>\begin{bmatrix}<br>   1 &amp; 2 &amp; 3 \<br>   4 &amp; 5 &amp; 6 \<br>   7 &amp; 8 &amp; 9 \<br>  \end{bmatrix} \tag{1}<br>$$</p>
<h5 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$</span><br><span class="line">J(\theta) = \frac&#123;1&#125;&#123;2m&#125;\sum_&#123;i=0&#125;^m(y^i - h_\theta(x^i))^2</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p>生成的均方差公式为：</p>
<p>$J(\theta) = \frac{1}{2m}\sum_{i=0}^m(y^i - h_\theta(x^i))^2$</p>
<h5 id="还有很多…"><a href="#还有很多…" class="headerlink" title="还有很多…"></a>还有很多…</h5><p>LaTeX的数学公式异常灵活，其余语法可以自行查阅。</p>
<h3 id="信息类"><a href="#信息类" class="headerlink" title="信息类"></a>信息类</h3><h4 id="YAML样式的信息"><a href="#YAML样式的信息" class="headerlink" title="YAML样式的信息"></a>YAML样式的信息</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 这是一个标题</span><br><span class="line">time: 2019</span><br><span class="line">TOC: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>那么将生成自动目录以及包含时间信息的文章标题部分。</p>
<h4 id="XML样式信息"><a href="#XML样式信息" class="headerlink" title="XML样式信息"></a>XML样式信息</h4><p>如果你更熟悉XML，直接上吧骚年！</p>
<h3 id="导图类"><a href="#导图类" class="headerlink" title="导图类"></a>导图类</h3><p>使用markdown可以通过公式方式扩展来写流程图等。[@noauthor_typora__nodate]</p>
<h4 id="甘特图-时序图"><a href="#甘特图-时序图" class="headerlink" title="甘特图(时序图)"></a>甘特图(时序图)</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">  sequenceDiagram</span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```mermaid</span><br><span class="line"></span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line"></span><br><span class="line">  sequenceDiagram</span><br><span class="line"></span><br><span class="line">    participant 张三</span><br><span class="line"></span><br><span class="line">    participant 李四</span><br><span class="line"></span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line"></span><br><span class="line">    loop 健康检查</span><br><span class="line"></span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line"></span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line"></span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line"></span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line"></span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure>
<h4 id="美人鱼图"><a href="#美人鱼图" class="headerlink" title="美人鱼图"></a>美人鱼图</h4><p>一个示例的美人鱼图：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">graph TD</span><br><span class="line">client1--&gt;|read / write|SVN((SVN server))</span><br><span class="line">client2--&gt;|read only|SVN</span><br><span class="line">client3--&gt;|read / write|SVN</span><br><span class="line">client4--&gt;|read only|SVN</span><br><span class="line">client5(...)--&gt;SVN</span><br><span class="line">SVN---|store the data|sharedrive</span><br><span class="line">​</span><br></pre></td></tr></table></figure>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```mermaid</span><br><span class="line">graph TD</span><br><span class="line">client1--&gt;|<span class="type">read</span> / write|<span class="type">SVN</span>((SVN server))</span><br><span class="line">client2--&gt;|<span class="type">read</span> only|<span class="type">SVN</span></span><br><span class="line">client3--&gt;|<span class="type">read</span> / write|<span class="type">SVN</span></span><br><span class="line">client4--&gt;|<span class="type">read</span> only|<span class="type">SVN</span></span><br><span class="line">client5(...)--&gt;SVN</span><br><span class="line">SVN---|<span class="type">store</span> the data|<span class="type">sharedrive</span></span><br></pre></td></tr></table></figure>
<p>此处参考</p>
<h1 id="与文献管理工具互动"><a href="#与文献管理工具互动" class="headerlink" title="与文献管理工具互动"></a>与文献管理工具互动</h1><p>为什么不推荐使用word自带的文献管理器，因为Zotero以及Mandelay等文献管理器更加强大而且易用，包含比如PDF阅读、文献检索、文献关联设置、关键词等。</p>
<p>这里只对zotero文献管理器与markdown论文撰写的互动进行说明。</p>
<h2 id="Zotero"><a href="#Zotero" class="headerlink" title="Zotero"></a>Zotero</h2><p>首先到Zotero官网下载软件本体进行安装，然后按照提示安装浏览器插件。使用如下图：</p>
<p>（gif）</p>
<p>之后你可以在Zotero导出参考文献。导出时请选择Bibtex格式。需要生成参考文献时直接将导出的文件用文本编辑器打开并进行如下操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#一个实例的bib文件内容</span><br><span class="line">@misc&#123;noauthor_britains_nodate,</span><br><span class="line">        title = &#123;Britain’s imperial fantasies have given us &#123;Brexit&#125; &#123;\textbar&#125; &#123;Gary&#125; &#123;Younge&#125; &#123;\textbar&#125; &#123;Opinion&#125; &#123;\textbar&#125; &#123;The&#125; &#123;Guardian&#125;&#125;,</span><br><span class="line">        url = &#123;https://www.theguardian.com/commentisfree/2018/feb/03/imperial-fantasies-brexit-theresa-may&#125;,</span><br><span class="line">        urldate = &#123;2019-04-29&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这里引用了参考[@noauthor<span class="emphasis">_britains_</span>nodate]</span><br></pre></td></tr></table></figure>
<p>即将包含“@misc”行行首大括号后内容前加“@”用中括号“[]”包裹放在需要引用的位置。生成文件时会自动在文末添加参考文献。[@noauthor_markdown_nodate]</p>
<h1 id="使用pandoc生成（最后一步了）"><a href="#使用pandoc生成（最后一步了）" class="headerlink" title="使用pandoc生成（最后一步了）"></a>使用pandoc生成（最后一步了）</h1><h2 id="pandoc安装"><a href="#pandoc安装" class="headerlink" title="pandoc安装"></a>pandoc安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Windows用户可以再官网下载EXE文件进行安装，并安装Python3使用pip安装pandoc的其他扩展。</p>
<h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>Mac用户可以使用brew来安装pandoc，并使用pip来添加扩展</p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>重点说一下Linux，以证明使用Linux同样可以撰写论文。</p>
<p>大多数Linux发行版的仓库内包含pandoc，并默认有pip。使用pip可安装扩展。</p>
<h4 id="对于Arch-Linux"><a href="#对于Arch-Linux" class="headerlink" title="对于Arch Linux"></a>对于Arch Linux</h4><p>Arch Linux仓库中为pandoc以及LaTeX全部扩展进行了打包，直接安装，舒适便捷。</p>
<h2 id="生成方式"><a href="#生成方式" class="headerlink" title="生成方式"></a>生成方式</h2><p>在此文中，我们需要使用的插件为：pandoc-citeproc。</p>
<p>那么使用如下指令生成：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pandoc --filter pandoc-citeproc --bibliography=你的文献库.bib --csl=chinese-gb7714-2005-numeric.csl  你的markdown文件.md -o  你的生成文件.docx</span><br></pre></td></tr></table></figure>
<p>其中“–csl”选项为需要生成参考文献的具体格式标准。</p>
<p>如果你单单只使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pandoc  markdown文件.md -o  生成的文件</span><br></pre></td></tr></table></figure>
<p>将只进行最基础的文件渲染，比如转换为PDF格式。</p>
<h1 id="参考文献（示例）"><a href="#参考文献（示例）" class="headerlink" title="参考文献（示例）"></a>参考文献（示例）</h1><p>[^1]: <a href="https://baike.baidu.com/item/%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/1017816?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/1017816?fr=aladdin</a> 富文本格式<br>[^2]: <a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/markdown/3245829?fr=aladdin</a> markdown<br>[^3]: <a href="https://zh.wikipedia.org/wiki/Pandoc" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Pandoc</a> Pandoc</p>
]]></content>
      <categories>
        <category>实用工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>pandoc</tag>
        <tag>zotero</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈</title>
    <url>/posts/12326.html</url>
    <content><![CDATA[<p>人大多数时候选择去做一件事，也许并不是为了获得什么，而是单纯的害怕空虚。</p>
<a id="more"></a>
<p>近两年的个人状态可以说是非常奇怪了。总结下来也无非是开头那句话。正因为害怕空虚所以去做各种事情，将自己的时间填满。不过，就算空着的时间都填满了，难道就会感到满足了吗？我不以为意。反而感觉更加的空虚。说白了，这种因为空虚所以选择让自己看起来很忙的行为无异于饮鸩止渴，逞一时之快后患无穷。究其原因还是因为少了方向感。</p>
<p>高考前之所以能稳住拼尽全力，也无非是因为只需要考虑怎么答题就对了，脑子里什么都不需要想。拼命学了三年需要有一个突破口，一个来发泄的点。然后进入了大学，不再如同高中，可以考虑可以尝试的东西极大丰富，本来就患有选择困难的我人生第一次感到如此迷茫。专业不是我喜欢的、但是成绩又不是最好的、喜欢的东西在侵占我的时间、但是不喜欢的东西却本需要大把时间。越是想逃离就越是逃不掉，最后深陷其中。坦然接受现状虽然是最佳选择，不过，我又浪费掉了一年。确实可以有很多，但是似乎在前途面前都是苍白无力。每次回家看到父母日渐衰老，家事变化也不由得暗自落泪。</p>
<p>家人倒也不像是其他人说的那样对我寄予厚望，到时自己越是给说一般般平平常常就可以越是感到压力倍增。正因为看到了家人的辛苦之处，才想变得更强将来可以保护家人；越是想变得更强越是对现状不满，对自己不满；越是对自己不满就越是急切的想找到目标。然而我没有目标。因此愈发感到无比空虚。因此就尝试做很多事情，又因为本身学习能力并不差所以就学会很多事情，以此可以更好地消磨时间。</p>
<p>我急切的需要摆脱这种现状，那么最好的办法我希望不再是定下长远的目标，而是短时间内先从眼前的事情做好。以前到时很瞧不起做计划之类的，总觉得“到时候总会有办法”，不过现在看前人的经验真的是正确无比，所谓摸着石头过河也是需要摸到下一个石头的位置，更长远的目标就是“对岸”。重新来过的这一年，我仍不希望自己空虚，那么就尝试换成另外一种方法填满自己算了。</p>
]]></content>
      <categories>
        <category>随笔</category>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>杂记</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo主题模版改造记录</title>
    <url>/posts/31380.html</url>
    <content><![CDATA[<p>有时候就是心血来潮才想搞一些好玩的，假期一旦懒下来人就待完了。</p>
<a id="more"></a>
<p>上一篇: <a href="https://blog.weearc.top/posts/6009.html">hexo主题迁移and折腾记</a></p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>之前一直是抱着小小改造一下将就用就行了的心态来改造博客主题，直到又一个朋友也开始建立博客。于是一直懒着不愿意写的友链以及关于的独立页面也不得不提上日程，就连之前想加入的 clipboard.js 这次也想一股气做好。说起来容易，实际开始读 layout 部分代码才发现自己并不是很懂整个 pug 模版的渲染流程以及构架。整个博文是对于改造过程的记录，如果嫌烦可以跳过我思考的那一部分。</p>
<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>最初搜索一番，仍然发现大多数就是简单的建立一个友链的 page 然后直接 md 堆上去就完事了。当然我之前也这么做过。但是实际效果并不尽如人意。于是不得不进行主题拆解。</p>
<p>然后花费了相当长一段时间发现并没有搞懂主题的布局…Orz。这就产生了一个问题，在寻找了非常多 HEXO 主题开发相关的博文时候，发现不管是用脚手架来搭建还是怎样，一个主题一定是先有布局再往里面填肉，虽然日常自己写点东西是这个思想却没想到用这个思想来解构，有点呆。</p>
<h1 id="解构主题"><a href="#解构主题" class="headerlink" title="解构主题"></a>解构主题</h1><p>所以，整体布局确实如下图，从代码中也多少能看出点倪端：</p>
<p><img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2019.08.06/base.png" alt></p>
<p>那么看下整体文件的解构：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">themes/maupassant/layout/</span><br><span class="line">----------------------------------</span><br><span class="line">├── archive.pug</span><br><span class="line">├── base.pug</span><br><span class="line">├── index.pug</span><br><span class="line">├── page.pug</span><br><span class="line">├── post.pug</span><br><span class="line">├── single-column.pug</span><br><span class="line">├── timeline.pug</span><br><span class="line">├── _partial</span><br><span class="line">     ├── after_footer.pug</span><br><span class="line">     ├── comments.pug</span><br><span class="line">     ├── footer.pug</span><br><span class="line">     ├── head.pug</span><br><span class="line">     ├── helpers.pug</span><br><span class="line">     ├── mathjax2.pug</span><br><span class="line">     ├── mathjax.pug</span><br><span class="line">     ├── paginator.pug</span><br><span class="line">     ├── post_nav.pug</span><br><span class="line">     ├── tag.pug</span><br><span class="line">     ├── totop.pug</span><br><span class="line">     └── wordcount.pug</span><br><span class="line">|── _widget</span><br><span class="line">    ├── category.pug</span><br><span class="line">    ├── links.pug</span><br><span class="line">    ├── recent_comments.pug</span><br><span class="line">    ├── recent_posts.pug</span><br><span class="line">    ├── search.pug</span><br><span class="line">    ├── tag.pug</span><br><span class="line">    └── toc.pug</span><br></pre></td></tr></table></figure>
<p>如果是仔细阅读过主题配置文件，就会发现其中下面列出的这一部分就属于我们说的“单独的页面”：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">├── index.pug</span><br><span class="line">├── timeline.pug</span><br><span class="line">├── post.pug</span><br><span class="line">├── archive.pug</span><br></pre></td></tr></table></figure>
<p>这些是主题中最最基础的几个独立页面：文章、时间线、主页、文章归档。</p>
<p>其中都会有那么句：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">extends base</span><br><span class="line">...</span><br><span class="line">include _partial/BALABALA.pug</span><br></pre></td></tr></table></figure>
<p>如果是对编程相对熟悉的同学可能一下子就发现了这不是典型的引入么，前面是以 <code>base.pug</code> 作为“母版”，后面在上面加东西。前面尝试着 copy 过别人的代码尝试添加一个侧边栏的 TOC（以失败告终），但是并没有好好阅读代码，所以这次吃了大苦头。所以，就连其他全部页面都是在 base 基础上扩展来的，因此提供了一个思路：要想添加自己的独立页面，就需要仿照其他的从 base 为基础进行扩展。</p>
<p>那么我们来看一下，比如这个 archive:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">archive.pug</span><br><span class="line">-------------------</span><br><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">  if page.category</span><br><span class="line">     title= page.category + ' | ' + config.title</span><br><span class="line">  if page.tag</span><br><span class="line">     title= page.tag + ' | ' + config.title</span><br><span class="line">  if page.archive</span><br><span class="line">     title= __('archive') + ' | ' + config.title</span><br><span class="line">block content</span><br><span class="line">  if page.category || page.tag</span><br><span class="line">      h1.label-title=  __('reading_label', page.category || page.tag)</span><br><span class="line">  .post</span><br><span class="line">    .post-archive</span><br><span class="line">        //Use lodash to classify posts. See https://lodash.com/docs#groupBy</span><br><span class="line">        each posts, year in _.groupBy(page.posts.toArray(), function(p)&#123;return -p.date.format('YYYY')&#125;)</span><br><span class="line">          h2= -year</span><br><span class="line">          ul.listing</span><br><span class="line">            for post in posts</span><br><span class="line">              li</span><br><span class="line">                span.date= post.date.format(config.date_format)</span><br><span class="line">                a(href=url_for(post.path), title=post.title)</span><br><span class="line">                  +title(post)</span><br><span class="line">  include _partial/paginator.pug</span><br></pre></td></tr></table></figure>
<p>可以发现整个结构如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">..........</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">........</span><br></pre></td></tr></table></figure>
<p>正好也符合整个页面的布局。那么，友链那么多条是不是要自己一条条加上去呢？傻子才全手写。</p>
<p><code>_widget/links.pug</code> 中就很好的提到了一个思路，当然也非常常用：用 for 循环</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">- for (var i in theme.links)</span><br><span class="line">    ul</span><br><span class="line">    a(href=theme.links[i].url title=theme.links[i].title target='_blank') #&#123;theme.links[i].title&#125;</span><br></pre></td></tr></table></figure>
<p>不过可以发现少了一些东西，头像呢？描述呢？其实这些东西自己加上就好，这里不赘述 YAML 的语法，整个过程相当是从<code>themes/_config.yml</code> 中取出 <code>links</code>部分的值，然后找寻每个 links 部分的的子项，这是个很好的思路。</p>
<h1 id="动工"><a href="#动工" class="headerlink" title="动工"></a>动工</h1><p>首先现在<code>themes/_config.yml</code>填入所需值，然后编写独立页面：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">layout/single-link-page.pug</span><br><span class="line">-------------------------------------</span><br><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">    title= page.title + ' | ' + config.title</span><br><span class="line"></span><br><span class="line">block  content</span><br><span class="line">    - for (var i in theme.links)</span><br><span class="line">        p</span><br><span class="line">            a.friendurl(target='_blank', href=theme.links[i].url, title=theme.links[i].title)</span><br><span class="line">        a.friendurl(target='_blank', href=theme.links[i].url, title=theme.links[i].title)</span><br><span class="line">            .frienddiv</span><br><span class="line">                a.frienddivleft(target='_blank', href=theme.links[i].url)</span><br><span class="line">                    img.myfriend(src=theme.links[i].src)  // 头像部分</span><br><span class="line">                .frienddivright</span><br><span class="line">                    |  #&#123;theme.links[i].title&#125;</span><br><span class="line">                    br</span><br><span class="line">                    br</span><br><span class="line">                    |  #&#123;theme.links[i].dec&#125;  // 描述</span><br></pre></td></tr></table></figure>
<p>样式网上有非常多，不愿意写可以找一找抄一抄（虽然有无脑抄完回来给我留言说编译失败的….）。有点前端基础自己写就好，这种东西不怎么依赖定位倒也是好写。</p>
<p>然后出现一个问题：侧边栏影响美观程度。解决方法是仿照 base 写一个无侧边栏的即可（其实就是把 sidebar 对应部分注释掉），相对的，开头 extends 的部分也要进行修改。</p>
<p>（未完待续）</p>
<p><a href="http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/" target="_blank" rel="noopener">http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/</a></p>
<p><a href="https://hqcfly.github.io/2016/06/19/hexo-theme-guide/" target="_blank" rel="noopener">https://hqcfly.github.io/2016/06/19/hexo-theme-guide/</a></p>
<p><a href="https://molunerfinn.com/make-a-hexo-theme/" target="_blank" rel="noopener">https://molunerfinn.com/make-a-hexo-theme/</a></p>
<p><a href="http://huanyouchen.github.io/2019/03/22/add-tags-pages-to-hexo-maupassant-theme/" target="_blank" rel="noopener">http://huanyouchen.github.io/2019/03/22/add-tags-pages-to-hexo-maupassant-theme/</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>模版</tag>
        <tag>响应式</tag>
      </tags>
  </entry>
  <entry>
    <title>fcitx5尝鲜(另付fcitx5输入法皮肤摸索)</title>
    <url>/posts/14466.html</url>
    <content><![CDATA[<p>原本搜狗输入法确实是真香的，但是架不住它总不更新问题一大堆。</p>
<a id="more"></a>
<p>作为非英语作为母语的计算机使用者，尤其是 GNU/Linux 用户，输入法确实是非常大的一个硬伤。如果说 QQ 微信 网易云 还可以勉强要么通过 wine 的方式要么通过虚拟机 就多多少少都还能解决，输入法如果没有原生可用的那就非常痛苦了。因此国内最厉害的中文输入法 搜狗输入法 在推出 Linux 版本的时候为什么那么多人感到异常兴奋也就多多少少能够理解。你用或者不用，都无法否认搜狗在输入法上做的贡献之大。</p>
<p>但是距离上一次更新也过去许久，依旧构建于 QT4 的搜狗拼音已经渐渐暴露出很多问题，并且看来短时间内没法迁移到 QT5。并且搜狗造的轮子 <code>sogou-qimpanel</code> 还会和 fcitx 的 <code>kimpanel</code> 产生冲突。但是说实在的如果不是搜狗的词库异常强大咱也就不会就算一直被恶心也要坚持使用下去了。</p>
<p>不过，其实很早我们可能就有了另外一个非常棒的选择，也就是 fcitx5 。</p>
<p>有关 fcitx5 的详细配置过程可以参考 Arch Linux Wiki ， 网上也有诸多 Archer 来写，就不加赘述。也可以参考<a href="https://github.com/weearc/fcitx5-skin-simple-blue" target="_blank" rel="noopener">我的这个仓库</a>之中的 readme 。</p>
<p>今天主要是讲讲看、研究一下 fcitx 的皮肤绘制。</p>
<p>fcitx5 的皮肤最基础的部分由以下几个文件构成：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- panel.png</span></span><br><span class="line">  |- hightlight.png</span><br><span class="line">  <span class="comment">-- theme.conf</span></span><br></pre></td></tr></table></figure>
<p>正如文件命名，panel 指输入法候选词位置的样式， highlight 为候选词高亮背景。简单的说如果我们拿到一个皮肤的样版，对面板和高亮进行更改的话就能够调整输入法皮肤样式。</p>
<p>（剩下的内容有时间再详细查查相关内容补全）</p>
]]></content>
      <categories>
        <category>archlinux</category>
        <category>输入法</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>fcitx</tag>
        <tag>fcitx5</tag>
      </tags>
  </entry>
  <entry>
    <title>ArchLinux + Windows10 双系统固态硬盘迁移</title>
    <url>/posts/25676.html</url>
    <content><![CDATA[<p>盼星星盼月亮终于拿到了心心念念的固态硬盘，终于能够有畅快淋漓的体验了。</p>
<a id="more"></a>
<p>既然固态硬盘体验这么好，那为啥以前非要买那么写机械？因为我是仓鼠症患者，买的硬盘全部拿去存电影了…….</p>
<p>那到固态以后其实就没什么好说的，之前光驱位以及主硬盘位都有机械硬盘，光驱位上的盘作为纯粹的数据盘挂载在 Arch 下面。所以就算单独拿下来去给 NAS 挂着也没什么大问题。那么最终就还是主硬盘位的机械硬盘去了光驱位，新买的固态上了主硬盘位。</p>
<p>其实在迁移前我很纠结要不要重装windows，本意上是不想重新安装的，一大堆专业软件和自己配置的环境重新弄起来费时费力而且真的要命。那么就还是决定使用软件做系统迁移。先把最麻烦的windows的部分解决。Linux 反而是一向最容易迁移的了。</p>
<h2 id="迁移windows10"><a href="#迁移windows10" class="headerlink" title="迁移windows10"></a>迁移windows10</h2><p>下载 aomei 无损分区助手PE版本，配合wepe做好系统迁移，这个时候会一并把esp分区迁移过来，所以 linux 下就不需要重建了。有的电脑可能会遇到说是内存不足，那就老老实实重装吧。</p>
<h2 id="迁移ArchLinux"><a href="#迁移ArchLinux" class="headerlink" title="迁移ArchLinux"></a>迁移ArchLinux</h2><p>在windows下面如果没有了 Aomei这样的工具，那么迁移起来说实在说的是极其痛苦的，尤其现在ghost还不能用。Arch就要轻松很多。只需要用到 <code>rsync</code> 即可。</p>
<p>在旧的Arch下面给新硬盘剩余空间分好区，然后直接把新的根分区挂载在 <code>/mnt</code> 其余比如 <code>/home</code> <code>/boo/efi</code> 也依次挂载好。终端中执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -aAXv /* /mnt/. --exclude=&#123;/dev/*,/proc/*,/sys/*,/tmp/*,/var/tmp/*,/run/*,/mnt/*,/home/*,/media/*,/lost+found,/boot/*&#125;</span><br></pre></td></tr></table></figure>
<p>命令参数详情请参阅 <code>rsync</code> 的手册部分。然后排除掉 “运行态”的部分，对所有目录进行重建，文件按照归档进行迁移。执行以后大功告成一半。</p>
<p>由于我需要将原来的根分区删掉分给 home , 因此进入 Livecd 对旧分区进行删除操作，然后将分区移动到空间头部。完成后执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure>
<p>参照当初安装 Arch 的步骤进行，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot/efi/ --recheck</span><br></pre></td></tr></table></figure>
<p>重新安装grub。并配置grub：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>
<p>在此之前记得删除掉旧的esp分区。至此基本大功告成。最后记得检查一下 <code>/etc/fstab</code> 以免启动时出现问题。</p>
<p>耗时4个小时两个系统迁移完毕，windows用了三个多小时，Arch用了40分钟不到。</p>
]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>系统迁移</tag>
      </tags>
  </entry>
  <entry>
    <title>一言 20200319</title>
    <url>/posts/3498.html</url>
    <content><![CDATA[<p>人完全可以为自己的愤怒而感到庆幸，因为它维系了自己的价值观。</p>
]]></content>
      <categories>
        <category>一言</category>
      </categories>
      <tags>
        <tag>一言</tag>
      </tags>
  </entry>
  <entry>
    <title>有失公允？ 红米AC2100路由器体验</title>
    <url>/posts/32494.html</url>
    <content><![CDATA[<p>往年这个时间就已经回到学校了，今年算是个例外也正好给家里换一下老旧设备。</p>
<a id="more"></a>
<p>本着勤俭节约的美德，一个物品确实是应该用到彻底罢工才能换的。本来想着这次也如此 —— 但是架不住网络提速，原本家里的普联某超旧型号的路由器在 20m 升级到 50m 的时候就已经不能跑满带宽了，更何况是现在百兆直接升级千兆网。因此也有了一个很好的理由说服父母允许咱更换路由器。</p>
<p>那么问题就来了，是按照惯例再挑选一个普联的新产品？还是选水星家的 D191g ？还是买 Newifi？Newifi 在学校寝室使用后我初步得出的结果是：同时接驳多个设备后负载非常大，承载能力太低。并且一些功能鲁棒性测试无法通过。虽然可以通过刷入 Openwrt 提升素质，但是对于需要非常稳定使用的家庭使用场景还是不太适合，因此不再做考虑。至于其他产品倒也是让人纠结不知如何下手。</p>
<p>在纠结了好一段之后突然想起朋友说过 Redmi 新出的那个路由器风评也相当不错，既然普联水星没法考虑，那就都不考虑吧，遂在看了一些测评后决定购买 <strong>Redmi AC2100</strong> 。</p>
<h3 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h3><p>疫情期间小米之家发货速度一般，顺丰也因为管制绕了本省一大圈才送进来。<img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2020.03.05/IMG_20200305_142359.jpg" alt="外包装"></p>
<p>外包装倒是相当突出产品本体，内层使用纸模</p>
<p><img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2020.03.05/IMG_20200305_142546.jpg" alt="内层"></p>
<p>产品本体为白色，使用了磨砂材质的塑料，气孔较多可能需要做防灰处理。另外看了一下天线等地方，包括充电器本体都出现了水口未处理干净或者飞边，考虑到同价位的水星做工都没出现这种问题还是要批评下。<img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2020.03.05/IMG_20200305_142801.jpg" alt="分模线">（看到了吗…天线下部的那个分模线……）作为胶佬得时刻提醒自己这个是摆在那放着的不是模型……</p>
<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>连接相比之前了解到的倒是简单了很多，不需要先用电脑来初始化。只要路由器上电，连接到网络以后就算通过手机也能轻松的进行设置。另外初始化时提供了包括中继的设置，这点好评。</p>
<h3 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h3><p>相比 speedtest 这种枯燥无味的测试，我觉得找一些相对极限的场景进行测试更有代表性，比如找一个穿墙次数相当多的地方下载文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> ddqi &gt; ~ &gt; aria2c -x 16 http://mirrors.cqu.edu.cn/UbuntuKylin_release/ubuntukylin-19.10-enhanced-amd64.iso</span><br><span class="line">03/05 16:43:55 [NOTICE] Downloading 1 item(s)</span><br><span class="line"> *** Download Progress Summary as of Thu Mar  5 16:44:55 2020 ***                                                                     </span><br><span class="line">===================================================================</span><br><span class="line">[<span class="comment">#a89ecf 441MiB/2.5GiB(17%) CN:5 DL:7.0MiB ETA:5m3s]</span></span><br><span class="line">FILE: /home/ddqi/ubuntukylin-19.10-enhanced-amd64.iso</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
<p>2.4 GHz 下穿墙效果一般都比 5GHz 要好上不少，但是在用网小高峰时候还隔着墙进行测试都能有这种成绩还是能说明一些问题的，至少从结果上讲这款路由器一般家用场景应该是完全应付得了，甚至可以说绰绰有余。（不要小看老旧小区所谓的“全楼共享带宽”带来的网络问题啊喂！）</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>既然本着家用场景，那就不需要再做其他专业性质的测试。目前使用情况来看完全是物有所值，是一款具有性价比的产品。至于是不是“有失公允”还有待测试，但是至少从风评上看确实是相比小米旧款路由器的评价好了不少，小米路由器团队做出的努力也确实让人看到了。卢十瓦吹得再神，这也是一款面向实用场景的产品，是一款有诚意的产品。</p>
]]></content>
      <categories>
        <category>玩赏</category>
      </categories>
      <tags>
        <tag>路由器</tag>
        <tag>Redmi</tag>
        <tag>小米</tag>
      </tags>
  </entry>
  <entry>
    <title>[冷门向] 使用 mpv 打造专属播放器</title>
    <url>/posts/162.html</url>
    <content><![CDATA[<p>全文已发布至重庆大学蓝盟微信公众号往期内容内，博客上的版本待修改完善。</p>
<a id="more"></a>
<p>作为一个影音爱好者，我需要利器去使电影播放效果更加出色。作为技术向玩家，既然目前已有的工具都不怎么好用，那我们就来改造它让它更好用。</p>
<p>这就是我们今天要介绍的主角：mpv。</p>
<p><img src="/home/ddqi/推文/mpv-logo-128-0baae5aa.png" alt="mpv-logo-128-0baae5aa"></p>
<blockquote>
<p>MPV 是基于 MPlayer 和 MPlayer2 的开源软件。具有卓越的性能以及跨平台兼容性。</p>
<p>— 维基百科</p>
</blockquote>
<p>说到 MPV ， 大部分日常使用 Windows 的同志可能都没有听说过。但是 Linux 和 Mac OS 用户可能大部分人还是接触过的，即便是使用了 MPV 的变种（比如： bomi，或者是 Mac 下拥有精美 GUI 界面的IINA）他们都和 MPV 同宗同源。在大部分情况下，使用已经功能足够完善的带 GUI 的 MPV 虽然已经足够，但是就个人而言，却远远不够，这个影音大杀器只有在我们的完全自定义中才能最强大的力量。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>MPV 的安装极其简单：</p>
<ul>
<li><p>Windows： 访问 mpv.io 并下载 mingw-w64-mpv </p>
</li>
<li><p>Mac：Mac OS 用户可以通过 Brew 安装 MPV：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">brew install mpv</span><br></pre></td></tr></table></figure>
</li>
<li><p>Linux：一般的 Linux 仓库都会包含 MPV，部分发行版预装了 MPV，想要独立安装请使用以下指令</p>
<p>Ubuntu / Debian ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install mpv</span><br></pre></td></tr></table></figure>
<p>OpenSUSE ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo zypper <span class="keyword">in</span> mpv</span><br></pre></td></tr></table></figure>
<p>Fedora：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf install mpv</span><br></pre></td></tr></table></figure>
<p>Arch Linux：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S mpv</span><br></pre></td></tr></table></figure>
</li>
<li><p>当然你也可以从源代码编译 MPV ，可以从 MPV 的 GITHUB 仓库获取源代码并修改编译参数，包含 / 去除 某些特性</p>
</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>如果你成功的克服了心里上的恐惧，成功“安装”了MPV，那么这一步将是你能够愉快使用与否的关键。</p>
<p>在大部分情况下（尤其是 Mac 和 Linux 用户），已经将编解码器作为依赖安装到了操作系统中，而 Windows 用户可能需要手动安装 FFmpeg 作为编解码工具。由于没有编解码器的播放器只是一个“睁眼瞎”，只有在编解码器的存在下它才能发挥其真正的作用。那么在安装结束后，你可以使用 MPV 的默认设置进行视频播放了。</p>
<p><img src="/home/ddqi/推文/image-20200329212708064.png" alt="image-20200329212708064"></p>
<p>通常来讲直接运行 MPV 应该是这个样子，相比于其他完全基于命令行的播放器，MPV 还有个 GUI（虽然没什么用）。</p>
<p><img src="/home/ddqi/推文/深度截图_选择区域_20200329212939.png" alt="深度截图_选择区域_20200329212939"></p>
<p>播放视频的时候是这个样子，功能全部集中于下部的控制栏上，好像也还够用（其实确实够用了）。这个是小编配置完的 MPV ，但是因为懒 GUI 部分就不打算动了，这样也挺好的。</p>
<p>MPV 之所以看上去很简单（应该叫简陋），是因为它和大多数的高自定义化的工具一样，许多功能只有在探索之后才会被发现，另外支持丰富的扩展，可以找别人已经写好了的插件，也可以自己学着写一些插件。与其让开发者动手去满足用户（还不一定都会满足），不如自己动手丰衣足食。如果使用默认配置就能够让你满足那确实是最好不过，但是我们完全可以给它加上一些更有趣的功能。</p>
<h2 id="缩略图"><a href="#缩略图" class="headerlink" title="缩略图"></a>缩略图</h2><p>这个是一般开箱即用的播放器都会有的功能。</p>
<p>地址：<a href="https://github.com/TheAMM/mpv_thumbnail_script" target="_blank" rel="noopener">https://github.com/TheAMM/mpv_thumbnail_script</a></p>
<p>这是一个非常棒的查看进度条上缩略图的脚本，基于 Lua ，并具有一定的自定义功能<img src="/home/ddqi/推文/深度录屏_选择区域_20200329214106.gif" alt="深度录屏_选择区域_20200329214106"></p>
<p>安装：将脚本放于以下位置</p>
<p>Windows: <code>%APPDATA%\mpv\scripts\mpv_thumbnail_script_server.lua</code> &amp; <code>%APPDATA%\mpv\scripts\mpv_thumbnail_script_client_osc.lua</code></p>
<p>Linux/Unix/Mac: ~/.config/mpv/scripts/mpv_thumbnail_script_server.lua &amp; ~/.config/mpv/scripts/mpv_thumbnail_script_client_osc.lua</p>
<p>注：如果目录不存在则需要手动创建，具体可以参照 GITHUB 上的说明</p>
<h2 id="文本菜单"><a href="#文本菜单" class="headerlink" title="文本菜单"></a>文本菜单</h2><p>如果觉得部分基于命令行的功能不太适应的话，不妨试一下图形菜单。</p>
<p>地址： <a href="https://github.com/carmanaught/mpvcontextmenu" target="_blank" rel="noopener">https://github.com/carmanaught/mpvcontextmenu</a></p>
<p><img src="/home/ddqi/推文/687474703a2f2f692e696d6775722e636f6d2f446a7053546f6d2e706e67.png" alt="687474703a2f2f692e696d6775722e636f6d2f446a7053546f6d2e706e67"></p>
<p>这里只给出了作者展示的样式，可以通过自己修改样式表获得更加美观并且好用的菜单。图形部分通过 TK 或 GTK 实现。部分功能需要自己书写一定配置。</p>
<h2 id="kdialog-open-files"><a href="#kdialog-open-files" class="headerlink" title="kdialog open files"></a>kdialog open files</h2><p>此方法仅适用于 Linux （KDE）。</p>
<p>作为一名 KDE 用户，在 Linux 桌面环境上 GTK 和 QT 程序体验上的割裂极其难受，别的都可以忍，但是 GTK 反人类的会话样式不能忍。幸好有人开源了这个调用 Kdialog 打开文件的脚本，打开 MPV 以后，使用快捷键即可开启打开文件的窗口。<img src="/home/ddqi/推文/深度录屏_选择区域_20200329215427.gif" alt="深度录屏_选择区域_20200329215427"></p>
<h2 id="Play-with-mpv"><a href="#Play-with-mpv" class="headerlink" title="Play with mpv"></a>Play with mpv</h2><p>这是一个相当好用的浏览器插件。在看视频的时候希望不看到浏览器上花花绿绿的列表 / 广告？还是单纯的就只想在本地播放器上播放网页视频？这个插件都可以满足你。该插件需要配合一个 Python 脚本实现网页视频本地化播放，通过调用 youtube-dl 解析播放地址，实测支持大部分主流的视频网站，配合弹幕插件可以本地愉快的看番，不用“关弹幕保智商”了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>MPV 是一个相当好玩并且强大的工具。如果你期待的是开箱即用，那么它可能确实是开箱即用（虽然看上去不好用），如果你希望的是它生来强大，那么它也确实是生来强大，丰富的自定义选项以及插件可以使得它变成任何你想要的样子。</p>
<p>如果你和我一样对现有的工具并不满意，又有一定的“折腾的勇气”，那为什么不试试看这个工具呢？期待你的尝试！更多的插件部分可以参阅 MPV 仓库 文档：<a href="https://github.com/mpv-player/mpv/wiki/User-Scripts" target="_blank" rel="noopener">https://github.com/mpv-player/mpv/wiki/User-Scripts</a></p>
]]></content>
      <tags>
        <tag>待修改</tag>
      </tags>
  </entry>
  <entry>
    <title>夜食食谱</title>
    <url>/posts/1552.html</url>
    <content><![CDATA[<p>最近晚上很容易饿，就自己摸索了一点简单的食谱出来。</p>
<a id="more"></a>
<p>可能是北方最近结束供暖的缘故，地气很凉，然后为了保持体温之前供暖那段时间的不大的饭量转化为热可能就没剩下多少了。有时候夜里也爱到处寻找食物，但是 … 毕竟宵夜不能总吃而且对身体不好，晚饭在家里又只有我一个人吃，那就不如晚饭做一点容易暖和起来的更容易有饱腹感的食物。(在家不吃肉，所以肉是不存在的.jpg)</p>
<p>大概参考了日式杂烩饭的做法，稍稍改造了一下，食谱如下：</p>
<blockquote>
<p>原料： 大米（看量杯就可以，一般一小杯是一人一碗半的量）、胡萝卜、生姜。如果有吃剩下的蘑菇也可以加一点进去</p>
<p>调料：酱油、白酒、砂糖</p>
</blockquote>
<p>没了，就这么简单。煮个大米饭也没什么要点。无非是控制好水不要太多，把手指插入米中差不多水面比大米高出一个指关节高度。然后酱油用生抽就好，如果能买到日式酱油当然更棒，酒 + 砂糖这个组合是为了替代味淋（本来早打算再买一点，但是卖这些的店这几天才重新开起来了），砂糖不用很多，刚好似有似无甜味的程度就可以了，得自己慢慢试着来。整个饭的亮点感觉在于生姜，给饭增添了非常棒的风味。如果是用南方的籼米做的话可以在出国后少淋一点芝麻油，当然东北大米就不需要了，油水很足，干吃都非常香。</p>
<p>以前也试着用咖喱粉+鸡蛋简单调一个蛋糊做调味饭，但是还是觉得自己更喜欢偏向日餐韩餐的风味，贴近锅边的地方会有一点点锅巴，很让人满足。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>食谱</tag>
      </tags>
  </entry>
  <entry>
    <title>redmi K30 Pro 简评</title>
    <url>/posts/155.html</url>
    <content><![CDATA[<p>今年换手机这个时间节点卡的非常不好，早一点有最末代 4G 旗舰机纷纷大降价，晚一点可能还有 5G 手机集体跳水。但是买了就买了。鄙人第三部纯小米家搭载 MIUI 的设备。</p>
<a id="more"></a>
<p>我的上一部设备：HTC U Ultra，HTC U系列的开山之作，也可能说是 U 系列最失败的作品。你问我当时后不后悔在 18 年年初买了一款 17 年初的产品，我的回答是不后悔：放在今天依然不为过时的机身设计、2K LCD 屏幕、强悍的双扬声器、主动降噪耳机以及 HIFI 都带来了非常极致的视觉听觉盛宴，当时最为彪悍的影像系统也使得这部设备在服役期间让我体会到了它的强大。可惜就可惜在这么看起来很强大的设备搭载的是高通有着火龙之称的 SOC 821，而且还是阉割版。如果是放在17年年初这款设备的运存性能什么的也都够用，但是一跨入19年立刻体现出了短板，并且仅仅3000毫安时外加极为激进的调度让我不得不时时刻刻准备着充电宝，但是仍有可能在剩余百分之十几电量时突然自动关机。</p>
<p>上学期好信儿测了一个月电池损耗，两年使用时间实际损耗不到百分之10倒是体现了 HTC 到底还是在用料上花了钱，遂换了块电池觉得能够继续服役。但是没能料到年后续航直接从刚换电池那会儿近乎腰斩，外加4GB 运行内存不怎么够用，所以还是准备更换手机。</p>
<p>要知道今年可以更换的手机真的是选择少之又少，尤其是 5G 手机，各家纷纷将高刷新率作为卖点的同时外加物料人工成本疯狂上涨，价格是直接翻了一番。因为考虑到后期可能需要使用 GMS（我对GMS重度依赖，没办法，从13年开始自己选择的），华为系手机不得已全部不能选择，很可惜。 那么能够选择的只剩下小米、OPPO、VIVO、Realme、一加这几个选项。俗话说得好：一朝被蛇咬十年怕井绳，看了大量网友的评测以后决定放弃续航稍差的 Realme X50 Pro，OPPO的机器因为价格也不得不放弃，一加在考虑了售后以后放弃，VIVO 因为系统原因放弃。只剩下小米10和 Redmi K30 Pro 这两个选项。不买中端机的原因也很简单，旗舰的配置可以在某种程度上将使用年限拉长并且体验更好。最终还是考虑了续航的情况下选择了红米 K30 Pro。</p>
<p>说了这么多，这台机器有什么卖点？是续航，还是所谓真全面屏？在我看来这些都不能算是卖点，高通 865 一套打包拿来就是那么些东西，各家标配。没有的高刷新率的屏幕虽然本身不错但是今年却意外的成为了各路网友疯狂吐槽的地方。于我个人而言，这台机器总体体验对比 U Ultra 是升级的，要不换手机是换了个什么呢？但是总体体验依旧降级：</p>
<ul>
<li>1080p 屏幕，等效330 ppi。对比 U Ultra 的“标准”2560×1440的屏幕 ppi 440（虽然米10等效ppi也很低）</li>
<li>单扬声器。从双扬声器缓过来不是不能适应，但是还是觉得并不舒服。</li>
<li>Type-C 接口数字信号音频输出功率小。自带 DAC 的转接线几乎就是推不动。</li>
<li>重量。重量来到了228g，用一年下来应该就成麒麟臂了，带壳贴膜妥妥“米半斤”</li>
</ul>
<p>那么也有一定的优势：</p>
<ul>
<li>续航。变态级别的续航，轻松日用亮屏10小时以上，充一次电使用时间20小时起步（前提是自己改一改省电策略）</li>
<li>还算不错的屏幕色彩。虽然 PPI 大打折扣但是屏幕色彩确实还可以。</li>
<li>还算不错的影像系统。虽然是打包出售的 imx686，但是体验下来整体体验确实不错。</li>
</ul>
<p>一个优点顶十个缺点。最起码换机的原因之一：续航这个痛点是完美解决了。</p>
<p>（未完待续）</p>
]]></content>
      <categories>
        <category>玩赏</category>
      </categories>
      <tags>
        <tag>小米</tag>
        <tag>redmi</tag>
        <tag>红米 k30 pro</tag>
        <tag>电量焦虑</tag>
      </tags>
  </entry>
  <entry>
    <title>[划水文] 给NAS的Ubuntu Server升级</title>
    <url>/posts/60365.html</url>
    <content><![CDATA[<p>在给 NAS 升级系统之前我是很忐忑的,毕竟以前有过 Ubuntu 升级滚挂的经历(桌面版)，稍微查了一下似乎没有给 Ubuntu Server 升级的，那我就自己水一篇算了，过程比桌面版稳定很多也不容易出现什么问题。</p>
<a id="more"></a>
<p>首先你可能需要确定一下现在的 Ubuntu 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/os-release</span><br></pre></td></tr></table></figure>
<p>大多数 Linux 发行版都可以通过这个方式确定版本号和具体发行版。比如以下三个（我的 NAS、笔记本和救援系统）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># os-relase examples</span></span><br><span class="line"><span class="comment"># Ubuntu Server 20.04 LTS</span></span><br><span class="line">NAME=<span class="string">"Ubuntu"</span></span><br><span class="line">VERSION=<span class="string">"20.04 LTS (Focal Fossa)"</span></span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">PRETTY_NAME=<span class="string">"Ubuntu 20.04 LTS"</span></span><br><span class="line">VERSION_ID=<span class="string">"20.04"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.ubuntu.com/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://help.ubuntu.com/"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.launchpad.net/ubuntu/"</span></span><br><span class="line">PRIVACY_POLICY_URL=<span class="string">"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"</span></span><br><span class="line">VERSION_CODENAME=focal</span><br><span class="line">UBUNTU_CODENAME=focal</span><br><span class="line"><span class="comment"># Arch Linux Rolling</span></span><br><span class="line">NAME=<span class="string">"Arch Linux"</span></span><br><span class="line">PRETTY_NAME=<span class="string">"Arch Linux"</span></span><br><span class="line">ID=arch</span><br><span class="line">BUILD_ID=rolling</span><br><span class="line">ANSI_COLOR=<span class="string">"38;2;23;147;209"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.archlinux.org/"</span></span><br><span class="line">DOCUMENTATION_URL=<span class="string">"https://wiki.archlinux.org/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://bbs.archlinux.org/"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.archlinux.org/"</span></span><br><span class="line">LOGO=archlinux</span><br><span class="line"><span class="comment"># OpenSUSE Tumbleweed</span></span><br><span class="line">NAME=<span class="string">"openSUSE Tumbleweed"</span></span><br><span class="line">VERSION=<span class="string">"20200528"</span></span><br><span class="line">ID=<span class="string">"opensuse-tumbleweed"</span></span><br><span class="line">ID_LIKE=<span class="string">"opensuse suse"</span></span><br><span class="line">VERSION_ID=<span class="string">"20200528"</span></span><br><span class="line">PRETTY_NAME=<span class="string">"openSUSE Tumbleweed"</span></span><br><span class="line">ANSI_COLOR=<span class="string">"0;32"</span></span><br><span class="line">CPE_NAME=<span class="string">"cpe:/o:opensuse:tumbleweed:20200528"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.opensuse.org"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.opensuse.org/"</span></span><br><span class="line">LOGO=<span class="string">"distributor-logo"</span></span><br></pre></td></tr></table></figure>
<p>看到 <code>VERSION</code> 那行了吗？括号里那个是 Ubuntu 的版本号和发行代号。记住这个，很重要。然后我们前往 <a href="https://wiki.ubuntu.com/Releases" target="_blank" rel="noopener">Ubuntu Wiki</a> 查看一下可选升级的发行代号，虽然怎么升级都差不太多，但是最好还是从 LTS 到 LTS 版本比较好，毕竟服务器系统稳定是第一位的。</p>
<p>接下来和升级 Debian Stable 一样，我们要查看一下现在的 <code>apt sourceslist</code> :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/apt/sources.list</span><br><span class="line">-------------------------</span><br><span class="line"><span class="comment"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span></span><br><span class="line"><span class="comment"># newer versions of the distribution.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic main restricted</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Major bug fix updates produced after the final release of the</span></span><br><span class="line"><span class="comment">## distribution.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-updates main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-updates main restricted</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span><br><span class="line"><span class="comment">## team. Also, please note that software in universe WILL NOT receive any</span></span><br><span class="line"><span class="comment">## review or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic universe</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-updates universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-updates universe</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span><br><span class="line"><span class="comment">## team, and may not be under a free licence. Please satisfy yourself as to</span></span><br><span class="line"><span class="comment">## your rights to use the software. Also, please note that software in</span></span><br><span class="line"><span class="comment">## multiverse WILL NOT receive any review or updates from the Ubuntu</span></span><br><span class="line"><span class="comment">## security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic multiverse</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-updates multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-updates multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository may not have been tested as</span></span><br><span class="line"><span class="comment">## extensively as that contained in the main release, although it includes</span></span><br><span class="line"><span class="comment">## newer versions of some applications which may provide useful features.</span></span><br><span class="line"><span class="comment">## Also, please note that software in backports WILL NOT receive any review</span></span><br><span class="line"><span class="comment">## or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Uncomment the following two lines to add software from Canonical's</span></span><br><span class="line"><span class="comment">## 'partner' repository.</span></span><br><span class="line"><span class="comment">## This software is not part of Ubuntu, but is offered by Canonical and the</span></span><br><span class="line"><span class="comment">## respective vendors as a service to Ubuntu users.</span></span><br><span class="line"><span class="comment"># deb http://archive.canonical.com/ubuntu bionic partner</span></span><br><span class="line"><span class="comment"># deb-src http://archive.canonical.com/ubuntu bionic partner</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-security main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-security main restricted</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-security universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-security universe</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu bionic-security multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu bionic-security multiverse</span></span><br></pre></td></tr></table></figure>
<p>看到 <code>bionic</code> 了吗？那个是我们现在的代号，我选择升级的 <code>20.04 LTS</code> 发型代号为 <code>Focal Fossa</code> 所以直接用新的发行代号替换旧的就行。</p>
<p>操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份 sources.list</span></span><br><span class="line">cp /etc/apt/sources.list  /etc/apt/sources.list.bak</span><br><span class="line"><span class="comment"># 替换发行代号</span></span><br><span class="line">sed -i <span class="string">'s/bionic/focal/g'</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>可以再 <code>cat</code> 一下，此时文件内容变为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span></span><br><span class="line"><span class="comment"># newer versions of the distribution.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal main restricted</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Major bug fix updates produced after the final release of the</span></span><br><span class="line"><span class="comment">## distribution.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-updates main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-updates main restricted</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span><br><span class="line"><span class="comment">## team. Also, please note that software in universe WILL NOT receive any</span></span><br><span class="line"><span class="comment">## review or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal universe</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-updates universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-updates universe</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span><br><span class="line"><span class="comment">## team, and may not be under a free licence. Please satisfy yourself as to</span></span><br><span class="line"><span class="comment">## your rights to use the software. Also, please note that software in</span></span><br><span class="line"><span class="comment">## multiverse WILL NOT receive any review or updates from the Ubuntu</span></span><br><span class="line"><span class="comment">## security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal multiverse</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-updates multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-updates multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository may not have been tested as</span></span><br><span class="line"><span class="comment">## extensively as that contained in the main release, although it includes</span></span><br><span class="line"><span class="comment">## newer versions of some applications which may provide useful features.</span></span><br><span class="line"><span class="comment">## Also, please note that software in backports WILL NOT receive any review</span></span><br><span class="line"><span class="comment">## or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Uncomment the following two lines to add software from Canonical's</span></span><br><span class="line"><span class="comment">## 'partner' repository.</span></span><br><span class="line"><span class="comment">## This software is not part of Ubuntu, but is offered by Canonical and the</span></span><br><span class="line"><span class="comment">## respective vendors as a service to Ubuntu users.</span></span><br><span class="line"><span class="comment"># deb http://archive.canonical.com/ubuntu focal partner</span></span><br><span class="line"><span class="comment"># deb-src http://archive.canonical.com/ubuntu focal partner</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-security main restricted</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-security main restricted</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-security universe</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-security universe</span></span><br><span class="line">deb http://mirrors.cqu.edu.cn/ubuntu focal-security multiverse</span><br><span class="line"><span class="comment"># deb-src http://mirrors.cqu.edu.cn/ubuntu focal-security multiverse</span></span><br></pre></td></tr></table></figure>
<p>接下来我们 <code>apt update</code> 一下更新缓存，然后执行 <code>apt upgrade</code> 进行升级。这个阶段可能会报错，不用理会。更新完重启系统，会发现此时还在旧版，但是这次可以进行升级了，直接执行 <code>apt upgrade</code> 进行升级，期间会提示包括 <code>ssh_config</code> 文件之类的需要进行修改，此时保留旧的配置文件即可，剩下的一路回车直至升级完成。即可完成跨版本升级。</p>
<p>祝使用愉快！</p>
]]></content>
      <categories>
        <category>玩赏</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>升级</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Webhook 自动部署博客到服务器</title>
    <url>/posts/49037.html</url>
    <content><![CDATA[<p>本文所提到的大概还是有实用价值的，但是我个人应该是不会用在博客上了。至于为什么 … 因为心态炸了，退掉了手里所剩的几台 vps ，没必要使用自动部署了，但是日后可能会用在 <a href="https://mirrors.cqu.edu.cn/wiki/" target="_blank" rel="noopener">CQU mirror wiki</a> 上。</p>
<a id="more"></a>
<h2 id="事情起因"><a href="#事情起因" class="headerlink" title="事情起因"></a>事情起因</h2><p>其实本来这种自动化部署之前弄过一次，但是因为某些原因服务器的 Debian 8 安装 node 11很麻烦，而我的自动化部署工具是基于 node11 的，所以索性放弃，每次登上去手动同步一下就好。</p>
<p>但是这时候朋友的<a href="https://purefkh.xyz" target="_blank" rel="noopener">博客</a>刚刚做好备案，然后另外一个朋友的博客改为放到 vercel 上了（均带有自动化部署），本着攀比心理，因为自己博客之前一直部署于服务器上所以觉得自己可以再折腾一次自动化部署，本着方便使用语言选择了 golang ，毕竟作为 Linuxer 自己折腾才是一大乐趣。</p>
<h2 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h2><p>既然语言选择了 golang ，那么如何实现就是一个问题，毕竟 nodejs 下面有现成的轮子可以用。所以基于对 golang 的了解和自己对于这个小工具的设计，决定这样来写这个工具：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- cli 可用</span><br><span class="line">- 尽量简单</span><br><span class="line">- 通过处理请求头的办法来实现</span><br><span class="line">- 服务端通过端口转发来使用，尽量不暴露端口</span><br></pre></td></tr></table></figure>
<p>使用到的库：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"crypto/hmac"</span></span><br><span class="line">	<span class="string">"crypto/sha1"</span></span><br><span class="line">	<span class="string">"encoding/hex"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"gopkg.in/urfave/cli.v1"</span></span><br><span class="line">	<span class="string">"io"</span></span><br><span class="line">	<span class="string">"io/ioutil"</span></span><br><span class="line">	<span class="string">"log"</span></span><br><span class="line">	<span class="string">"net/http"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line">	<span class="string">"sort"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>其中 <a href="https://gopkg.in/urfave/cli.v1" target="_blank" rel="noopener">cli</a> 框架是用来处理 cli 下 Flag 等传值的，比起自己造轮子这个库要好用得多。然后需要处理一下监听：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">http.ListenAndServe(portForward, <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>
<p>有了 http 库，监听只需要这一行代码即可实现。然后是请求头：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	signature := r.Header.Get(<span class="string">"X-Hub-Signature"</span>)</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(signature) &lt;= <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	payload, _ := ioutil.ReadAll(r.Body)</span><br><span class="line">	mac := hmac.New(sha1.New, []<span class="keyword">byte</span>(secret))</span><br><span class="line">	fmt.Printf(secret)</span><br><span class="line">	_, _ = mac.Write(payload)</span><br><span class="line">	expectedMac := hex.EncodeToString(mac.Sum(<span class="literal">nil</span>))</span><br><span class="line">	<span class="keyword">if</span> !hmac.Equal([]<span class="keyword">byte</span>(signature[<span class="number">5</span>:]), []<span class="keyword">byte</span>(expectedMac)) &#123;</span><br><span class="line">		io.WriteString(w, <span class="string">"&lt;h1&gt;401 Signature is error!&lt;/h1&gt;"</span>)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	io.WriteString(w, <span class="string">"&lt;h1&gt;200 Deploy server is running!&lt;/h1&gt;"</span>)</span><br><span class="line">	reLaunch()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这部分主要是需要有两个参数，一个是响应请求，一些是读取请求，具体怎么分析请求头，这接点开 webhook 的历史即可看到一个实例请求，我们需要处理的仅仅是 <strong>X-Hub-Signature</strong> 这一项，然后比对请求中的秘钥和转码后的秘钥是否相同判断是否可以执行接下来的动作。</p>
<p>http 库最好用的我认为应该是可以对请求执行自定义函数了，直接指定一个 reload 方法即可调用拉取更新的脚本等：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reLaunch</span><span class="params">()</span></span> &#123;</span><br><span class="line">	cmd := exec.Command(<span class="string">"load"</span>)</span><br><span class="line">	err := cmd.Start()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	err = cmd.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">http.HandleFunc(<span class="string">"/"</span>, index)</span><br></pre></td></tr></table></figure>
<p>然后最后一点就是为整个功能套上 cli 框架即可，由于 cli 框架本身并不难用，所以一般直接看代码示例即可。项目地址：<a href="https://github.com/weearc/blog-webhook-deploy" target="_blank" rel="noopener">https://github.com/weearc/blog-webhook-deploy</a></p>
<p>项目使用 GPLv3 开源，许可证也会在稍后进行添加。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>github webhook</tag>
        <tag>自动化部署</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 github actions 部署博客到腾讯云</title>
    <url>/posts/4529.html</url>
    <content><![CDATA[<p>因为我本人也不是那么熟悉 GITHUB Actions 这玩意儿所以这篇文章仅仅针对性的告诉你怎样配置单单这个自动化部署而已。咕咕咕了很久也是时候应该把这篇补上了。</p>
<a id="more"></a>
<p>首先老规矩，在需要部署的仓库里直接建立：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\----workdir</span><br><span class="line">|----.github\</span><br><span class="line">			|---- workflows\</span><br><span class="line">							|----- _config.yml</span><br></pre></td></tr></table></figure>
<p>也不是什么难事吧。</p>
<p>接下来进入 Actions 标签，左侧新建工作流 - 建立我自己的工作流，会给出一个 web editor ，此时可以在右侧选择模板，直接搜索 <code>Cloudbase</code> 会出现由腾讯云提供的 workflow 模板。大致如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Tencent</span> <span class="string">CloudBase</span> <span class="string">Github</span> <span class="string">Action</span></span><br><span class="line">  <span class="comment"># You may pin to the exact commit or the version.</span></span><br><span class="line">  <span class="comment"># uses: TencentCloudBase/cloudbase-action@98ad8f31eb7bc09a8da3699149a9f765c7d8e8a1</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">TencentCloudBase/cloudbase-action@v1.1.1</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="comment"># 云开发 secretId</span></span><br><span class="line">    <span class="attr">secretId:</span> </span><br><span class="line">    <span class="comment"># 云开发 secretKey</span></span><br><span class="line">    <span class="attr">secretKey:</span> </span><br><span class="line">    <span class="comment"># 云开发环境 Id</span></span><br><span class="line">    <span class="attr">envId:</span> </span><br><span class="line">    <span class="comment"># 静态资源:本地路径</span></span><br><span class="line">    <span class="attr">staticSrcPath:</span> <span class="comment"># optional, default is build</span></span><br><span class="line">    <span class="comment"># 静态资源:云端路径</span></span><br><span class="line">    <span class="attr">staticDestPath:</span> <span class="comment"># optional, default is </span></span><br><span class="line">    <span class="comment"># 静态资源:部署时忽略的文件路径,多个路径用,隔开</span></span><br><span class="line">    <span class="attr">staticIgnore:</span> <span class="comment"># optional, default is .git,.github,node_modules</span></span><br></pre></td></tr></table></figure>
<p>当然会与最终使用的配置文件有很大差别，我们需要逐一进行更改。首先先命名这个工作流：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">CloudBase</span> <span class="string">CI</span></span><br></pre></td></tr></table></figure>
<p>然后我们需要设置一下触发工作流的动作：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Controls when the action will run. Triggers the workflow on push or pull request</span></span><br><span class="line"><span class="comment"># events but only for the master branch</span></span><br><span class="line"><span class="attr">on:</span> <span class="string">[push]</span></span><br></pre></td></tr></table></figure>
<p>这里我印象中可以指定为如下几个动作：</p>
<ul>
<li>push</li>
<li>commit</li>
<li>pull</li>
<li>merge</li>
</ul>
<p>但是具体的还请看 Github 提供的<a href="https://docs.github.com/cn/actions" target="_blank" rel="noopener">文档</a>。这里我们期望的是将文章在本地渲染后直接推动到远程服务器触发部署因此 <code>on</code> 的选择条件为监听 <code>push</code> 动作。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># This workflow contains a single job called "build"</span></span><br></pre></td></tr></table></figure>
<p>这里会出现一个数组，此数组下所有内容均被视为这个工作流在触发以后的动作。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">   <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">Tencent</span> <span class="string">Cloudbase</span> <span class="string">Github</span> <span class="string">Action</span></span><br><span class="line">   <span class="attr">steps:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">       <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">static</span> <span class="string">to</span> <span class="string">Tencent</span> <span class="string">CloudBase</span></span><br><span class="line">       <span class="attr">id:</span> <span class="string">deployStatic</span></span><br><span class="line">       <span class="attr">uses:</span> <span class="string">TencentCloudBase/cloudbase-action@v1.1.1</span></span><br><span class="line">       <span class="attr">with:</span></span><br><span class="line">         <span class="attr">secretId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">secretKey:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">envId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ENV_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">staticSrcPath:</span> <span class="string">./</span></span><br></pre></td></tr></table></figure>
<p>这些部分逐一进行解释：</p>
<ul>
<li>deploy：部署项目</li>
<li>runs-on：指定操作系统环境或者软件环境，我就选择了比较常用的 ubuntu 18.04</li>
<li>name：任务的名称</li>
<li>steps：部署的动作，会逐一进行，每个步骤会跟随一个 <code>name</code> 和 <code>uses</code> 即使用的动作</li>
</ul>
<p>由于一般情况是部署源码上去然后直接利用工作流渲染出来部署，但是我的仓库公开担心 apikey 之类的外流，因此选择在本地渲染完，远程工作流仅仅做一个 copy 的动作就行。因为使用的是 <code>deployStatic</code> 动作，并在子项 <code>staticSrcPath</code> 指定源码目录为项目根目录，<code>with</code> 部分均填写在项目设置里的 <code>secrets</code> 即可，可以直接调用对象。CloudBase 那边只要配置一下域名什么的就可以了，几乎不需要动什么。本次操作也就是全程 copy 毫无技术含量可言。当触发动作后可以进入 <code>Actions</code> 标签查看状态。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>完全配置</tag>
        <tag>Github Actions</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 主题模板改造记录 2</title>
    <url>/posts/60875.html</url>
    <content><![CDATA[<p>第一篇： <a href="https://blog.weearc.top/posts/6009.html">hexo主题迁移and折腾记</a></p>
<p>第二篇：<a href="https://blog.weearc.top/posts/31380.html">hexo主题模版改造记录</a></p>
<p>本来在第二篇的时间就打算把剪贴板这件事搞定的，但是一拖拖了好久。</p>
<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>要知道很多 Hexo 模版都提供剪贴板功能，以及备案号展示功能，但是我这模版太早期了，要是用最新版本的那么自己的代码部分又要全部重新弄，我是非常不愿意这么做。那就不如自己来实现了。然后搜了很久以后我看到这么一篇文章：<a href="https://titangene.github.io/article/hexo-copy-code-snippet-to-clipboard.html" target="_blank" rel="noopener">在 Hexo 主題內新增程式碼片段複製功能</a> 这就很好啊，很符合我的要求。于是动工。</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>如果直接修改模版的话似乎也不是不行，但是那样的话可能会极大降低灵活度，另外我在翻看页面文件的时候也并未发现指定代码框的部分，因此还是直接用 JS 操作 DOM Tree 吧。</p>
<p><img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2021.02.20/2021-02-19_20-30.png" alt="代码框部分"></p>
<p>如图我们基本可以看到实际上应该一个 highlight 下面俩子节点一个 <code>code</code> 一个 <code>gutter</code> ，这样的话其实如果按照上面链接内文章操作的话是在这段的顶部套一个 DIV 然后插入按钮什么的进去，但是这样似乎对我的这个模板来说不是很友好，所以最后我会选择插入这么个玩意儿：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"codeblock-titlebar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"lang-title"</span> <span class="attr">style</span>=<span class="string">"font-size: 5px"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"codecopy-btn tooltipped tooltipped-sw"</span> <span class="attr">aria-label</span>=<span class="string">"Copy to clipboard"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-copy"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        click to copy</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就好多了，也不需要担心顶层按钮后面放不了东西背景空一块出来。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>但是其实只要观察过就会知道，整个代码框的部分全部是动态的，也就是说我们无法根据元素进行定位，只能使用 hexo 给定的父级对象操作，然后针对每个对象都如此操作才能在每个代码框中都插入按钮。因此代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> snippets = <span class="built_in">document</span>.querySelectorAll(<span class="string">'figure.highlight'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlCopyButton = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;div id="codeblock-titlebar"&gt;</span></span><br><span class="line"><span class="string">    &lt;span id="lang-title" style="font-size: 5px"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;button class="codecopy-btn tooltipped tooltipped-sw" aria-label="Copy to clipboard"&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fa fa-copy" aria-hidden="true"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        click to copy</span></span><br><span class="line"><span class="string">    &lt;/button&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line">snippets.forEach(<span class="function"><span class="params">snippet</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> parent = snippet.parentNode;</span><br><span class="line">    <span class="keyword">var</span> wrapper = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">    parent.replaceChild(wrapper, snippet);</span><br><span class="line">    wrapper.appendChild(snippet);</span><br><span class="line">    wrapper.classList.add(<span class="string">'code-highlight'</span>);</span><br><span class="line">    wrapper.firstChild.insertAdjacentHTML(<span class="string">'beforebegin'</span>, htmlCopyButton);</span><br><span class="line">    <span class="keyword">var</span> lang = (snippet.classList[<span class="number">1</span>] || <span class="string">'code'</span>).toUpperCase();</span><br><span class="line">    wrapper.setAttribute(<span class="string">'data-lang'</span>, lang);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>虽然我们无法直接操作，但是把我们需要的部分包裹起来就好办很多。</p>
<h2 id="复制按钮定位"><a href="#复制按钮定位" class="headerlink" title="复制按钮定位"></a>复制按钮定位</h2><p>根据 clipboard.js 的文档，直接调用后复制的内容是所调用的标签下的内容，但是我们的按钮的话直接调用会不起任何作用的，还是得找个合适的节点，我们可以在查看一下 <code>td</code>标签的那一行：</p>
<p>我们需要的部分是：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>"<span class="attr">code</span>"&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面一堆操作以后目前的结构是:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"code-highlight"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"codeblock-titlebar"</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">span</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>...<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">"highlight lang"</span>&gt;</span><span class="comment">&lt;!--实际lang会被替换为编程语言的名称--&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                	<span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"gutter"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"code"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这就其实比较尴尬，大概顺序是我们的按钮的父级的下一个节点的子节点的子节点的子节点的第二个节点才是我们需要的内容（看着就绕），但是实际上确实没有好的处理办法（处理的越简洁速度越慢，详情请见廖雪峰的博客）。所以我们还是老老实实的写吧：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> clipboard = <span class="keyword">new</span> ClipboardJS(<span class="string">'.codecopy-btn'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> copytext = trigger.nextSibling.parentElement.nextElementSibling.querySelector(<span class="string">'.code'</span>);</span><br><span class="line">            <span class="keyword">return</span> copytext;</span><br><span class="line">            <span class="comment">// console.log(copytext);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<p>最后倒是投机取巧的直接找 <code>.code</code> 解决掉，不过速度也不差，就那样吧。关于 <code>CSS</code> 的部分倒是没有什么好说的，直接上代码：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@import "fontawsome-all.min.css";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ref: https://github.com/primer/primer/blob/master/modules/primer-tooltips/lib/tooltips.scss</span></span><br><span class="line"><span class="selector-class">.tooltipped</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is the tooltip bubble</span></span><br><span class="line"><span class="selector-class">.tooltipped</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1000000</span>;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">0.75em</span>;</span><br><span class="line">  -webkit-<span class="attribute">font</span>-smoothing: subpixel-antialiased;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">text-shadow</span>: none;</span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: normal;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">white-space</span>: pre;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">content</span>: attr(aria-label);</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#616161</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is the tooltip arrow</span></span><br><span class="line"><span class="selector-class">.tooltipped</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1000001</span>;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#616161</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">6px</span> solid transparent;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delay animation for tooltip</span></span><br><span class="line"><span class="keyword">@keyframes</span> tooltip-appear &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  to &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will indicate when we'll activate the tooltip</span></span><br><span class="line"><span class="selector-class">.tooltipped</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.tooltipped</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-class">.tooltipped</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span>,</span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">animation-name</span>: tooltip-appear;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">0.1s</span>;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: ease-in;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Tooltipped south</span></span><br><span class="line"><span class="selector-class">.tooltipped-s</span>,</span><br><span class="line"><span class="selector-class">.tooltipped-sw</span> &#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: auto;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#616161</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tooltipped-sw</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Move the tooltip body to the center of the object.</span></span><br><span class="line"><span class="selector-class">.tooltipped-s</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: translateX(<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.codecopy-btn</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#efefef</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.codecopy-btn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#b6b6b6</span>;</span><br><span class="line">  <span class="attribute">text-decoration-color</span>: <span class="number">#1b1f23</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> print,</span><br><span class="line">screen <span class="keyword">and</span> (max-width: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.codecopy-btn</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2vh</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> print,</span><br><span class="line">screen <span class="keyword">and</span> (max-width: <span class="number">850px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.codecopy-btn</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1vh</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.code-hightlight</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#codeblock-titlebar</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">4vh</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#efefef</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">float</span>: bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为上面 <code>titlebar</code> 的作用是填补空白部分因此也就不怎么讲究了直接拉满即可。</p>
<p>（未完）</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>模版</tag>
        <tag>响应式</tag>
      </tags>
  </entry>
  <entry>
    <title>Redmi K30 pro 完整体验(后篇)</title>
    <url>/posts/34801.html</url>
    <content><![CDATA[<p>上一篇：<a href="https://blog.weearc.top/posts/155.html">redmi K30 Pro 简评</a></p>
<p>曾经的我虽然高高兴兴的用着类原生，但中午就得赶快回去充电否则下午晚上直接“人间蒸发”；曾经的我高高兴兴看着 2K 分辨率的顶级 LCD 屏幕，听着超强的双扬声器播放的歌曲，但是机器却时刻可能因为过热直接关机 … 这样的生活似乎已经结束，至少现在，我不必因为全天任何时间点不充电导致自己彻底失联，我也不用因为过热关机导致许多尴尬事情。但是相对的，我逐渐习惯了 1080P 分辨率的屏幕，我逐渐适应了尽管只有类 DC 调光的显示，也适应了原本听上去就感觉极度不适的单扬声器。</p>
<p>仔细想了一想可能不是因为手机换了我才如此“佛系”，周围的环境、自己的心理状况也多少变得不那么急功近利了，以至于最近在和老妈打电话的时候她直言我变得成熟，又恢复以前的健康的状态了。曾经的我因为高中出来也算是年级相当顶尖的选手，到大学却颇感力不从心，第一次中期考试的不及格更是雪上加霜。所谓心态爆炸大概就是说的那个时候的我。负面情绪占据了自己，自己也躲在尖刺之后，悄悄地舔舐伤口却又渴望他人带来的救赎，然而最终我也没能等到。自己还是要靠自己，所以我选择了逃避一年，无论付出了什么代价自己都要去承受，好朋友都变成了学长，学着更难以理解的课程，更换校区后更是有了新的交际圈，曾经一度以为我可能就这么被遗忘了。但毕竟是自己的选择，就算是狗屎也得忍着。</p>
<p>（没写完）</p>
]]></content>
      <categories>
        <category>玩赏</category>
      </categories>
      <tags>
        <tag>小米</tag>
        <tag>redmi</tag>
        <tag>红米 k30 pro</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/16107.html</url>
    <content><![CDATA[<h1 id="Hello-World！"><a href="#Hello-World！" class="headerlink" title="Hello World！"></a>Hello World！</h1><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p>
<details><summary>hello world 原文</summary><br><h1>Quick Start</h1><br><h2>Create a new post</h2><br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a><br><h2>Run server</h2><br><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a><br><h2>Generate static files</h2><br><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a><br><h2>Deploy to remote sites</h2><br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo deploy</span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br><br>PS:你可知道为了书写折叠区域的艰辛…结果发现就是如下一些代码结果我连next都升级了…配置文件全部需要重新搞。<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">summary</span>&gt;</span><span class="comment">&lt;!--折叠区域的提示词--&gt;</span><span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--折叠的内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>这段原文当然是没有的啊混蛋！！<br></details>

<h1 id="hello-again"><a href="#hello-again" class="headerlink" title="hello, again"></a>hello, again</h1><h2 id="hello-hexo！"><a href="#hello-hexo！" class="headerlink" title="hello hexo！"></a>hello hexo！</h2><p>想了一想。还是打算把hello world.md搞回来。一来是一个项目（虽然称不上是项目）没有了hello world感觉很是让人失落；二来是想记录下自己创建博客的心路历程。参考了<a href="https://purefkh.xyz/about/" target="_blank" rel="noopener">这篇</a>以及<a href="http://aoaoao.me/2018/04/15/hello-world/#%E4%BF%9D%E7%95%99%E7%9A%84%E5%86%85%E5%AE%B9" target="_blank" rel="noopener">这篇</a>以后决定好好写一写这篇文章，改造一下hello world。</p>
<p>如果各位看的比较仔细的话会发现这篇文章的日期与我的第一篇文章创建日期刚好隔了一年时间。这一年时间，说长不长说短不短，只是一直感觉少了些什么。让人颇为失落。</p>
<p>因此这篇文章是一定要写了。</p>
<p>准确的说，我没有一个明确的建立博客的契机。当时只是在b站无意间发现了个视频，使用了比特萌出品的hexo便携版搭建博客，我最大的好奇是搭建到哪里去了。。。虽然后来才知道github给提供了gitpages服务，但是当时虽然用了蛮长时间github却什么也不知道。就这样，边看百度边摸索着把博客搭建了起来，学着适应了Windows7下面使用git bash.exe安装了VisualStudioCode作为markdown编辑器并且慢慢摸索着凭着一腔热血把<a href="https://blog.weearc.top/2017/08/12/archlinux安装配置/">Archlinux安装配置（一）</a>这篇文章写了出来、换掉主题并且部署到github上。整个过程非常舒适（我其实没有实质性书写任何一点点hexo配置文件当时）</p>
<p>后来出现了一个问题，OpenSUSE42.1在深深让我感受到绝望以后我便完全叛逃到了Windows10 1509。怪也怪当时对UEFI下Linux的配置方式基本不知道。然后出现了一系列问题导致博客书写不能，初期忙于各种事情于是博客的事情就一拖再拖。</p>
<blockquote>
<p>上面口水仗一般的简单讲了下我是怎么接触到hexo的</p>
</blockquote>
<h2 id="再见了我的高中生活～"><a href="#再见了我的高中生活～" class="headerlink" title="再见了我的高中生活～"></a>再见了我的高中生活～</h2><p>其实写了这么些再说这句话有点不是很合适了。不过这点确实是我开始决定开启博客书写的契机。</p>
<p>全部应该归功我的高中语文老师。与同年级其他班级的老师不大一样，我们班是有写积累本这个要求的。所谓积累本说白了就是一个本子，按照要求需要写一些观影感言什么的，这点与小学时的基本无异。区别是，有时候一些课内文言的翻译和重点词汇总结什么的也会被要求写在上面，另外有时会有一些话题类作文作为作业也是要求一并写在上面的。</p>
<p>不算自夸，如果阅读量不小的话，或者脑袋里稍微有点东西，观点类文章一千多字差不多半个小时就可以完成了。对于素质教育这点我们还是很有信心的，毕竟高中班上所有同学都是接受了了初中几乎纯素质教育升上高中的。<details><summary>这里稍微说一下我们的学校</summary>辽宁省实验中学北校。在我们入学时设有初中部高中部，而初中部的能力在当年是可以把全省其他初中吊着打的。尤其是比较讨厌的“第七监狱”，毕业生到高中以后的能力和我们初中培养出的根本没法比，现在的情况就让人唏嘘不已了。而高中部，设有一些班级专供中考失利没有考上学校本部：辽宁省实验中学 的人来就读，我便是其中一员</details>这样的话基本上所有写作任务都不是什么难事。作为观点比较犀利的写手，我们更是有由课代表设立的“梦呓之肆”这种活动。每间隔一段时间会定下一个主题然后一群人来对这个观点发表一些评论并记述下来。那个地方，是在完全封闭生活中的我们的畅所欲言的地方，那里有思想的激烈碰撞，有面对一个事件不再一边倒似得评论而是全部客观分析的假设种种…</p>
<p>那是个至今还令人十分怀念的地方。</p>
<p>高中的书写习惯轻易没有办法改过来。一切从我个人厚度大约8mm的A4大小的积累本全部能够写满可以看出一些端倪。那就借此机会继续下去吧，形式改变了，但是我的思想还在。只要我还有时间还有这颗心，我就会继续写下去。</p>
<details><summary>PS：喵～</summary><br>上面隐藏的部分说了我升级了next主题，这个以后会找时间来讲，但是现在就算了，板式比起旧版本还有很多不如意的地方。<br>TODOs:<br>    <li>next主题压缩优化</li><br>    <li>字体更换</li><br>    <li><s>music.js优化重构</s></li><br>    <li>部分样式表重构</li><br>    <li>图床迁移</li><br>    <li><s>配置文件更新</s></li><br>    <li><s>live2d模型配置迁移</s></li><br>    <li><s>music-aplayer迁移</s></li><br></details>]]></content>
      <categories>
        <category>杂谈</category>
        <category>hello hexo</category>
      </categories>
      <tags>
        <tag>hello-word</tag>
      </tags>
  </entry>
  <entry>
    <title>drcom-python CQU-HX</title>
    <url>/posts/2868.html</url>
    <content><![CDATA[<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="转载信息：这个文件是在drcom-python版本基础上进行制作的"><a href="#转载信息：这个文件是在drcom-python版本基础上进行制作的" class="headerlink" title="转载信息：这个文件是在drcom-python版本基础上进行制作的"></a>转载信息：这个文件是在drcom-python版本基础上进行制作的</h2><h2 id="使用时请严格按照说明来操作否则出现问题概不负责"><a href="#使用时请严格按照说明来操作否则出现问题概不负责" class="headerlink" title="使用时请严格按照说明来操作否则出现问题概不负责"></a>使用时请严格按照说明来操作否则出现问题概不负责</h2><h4 id="请勿用作商业用途"><a href="#请勿用作商业用途" class="headerlink" title="请勿用作商业用途"></a>请勿用作商业用途</h4><a id="more"></a>
<h1 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h1><h2 id="请先搜索并安装python2-7-x版本"><a href="#请先搜索并安装python2-7-x版本" class="headerlink" title="请先搜索并安装python2.7.x版本"></a>请先搜索并安装python2.7.x版本</h2><p>传送门（ <a href="https://www.python.org/downloads/release/python-2714/" target="_blank" rel="noopener">python2.7.14</a>）</p>
<h2 id="然后根据您的操作系统选择安装"><a href="#然后根据您的操作系统选择安装" class="headerlink" title="然后根据您的操作系统选择安装"></a>然后根据您的操作系统选择安装</h2><h2 id="然后打开python文件就是-link-py-，配置校园网用户名和密码"><a href="#然后打开python文件就是-link-py-，配置校园网用户名和密码" class="headerlink" title="然后打开python文件就是 link.py ，配置校园网用户名和密码"></a>然后打开python文件就是 link.py ，配置校园网用户名和密码</h2><h2 id="再把它放到个人文件夹（比如Administrator）下这样就完成了！！！"><a href="#再把它放到个人文件夹（比如Administrator）下这样就完成了！！！" class="headerlink" title="再把它放到个人文件夹（比如Administrator）下这样就完成了！！！"></a>再把它放到个人文件夹（比如Administrator）下这样就完成了！！！</h2><h3 id="如果嫌麻烦，把我提供的-link-bat-也放到个人文件夹下然后每次只要双击link-bat就可以了！！！用这个方法可以避开开热点的检测，超好用，配合win10的开热点工具简直美滋滋"><a href="#如果嫌麻烦，把我提供的-link-bat-也放到个人文件夹下然后每次只要双击link-bat就可以了！！！用这个方法可以避开开热点的检测，超好用，配合win10的开热点工具简直美滋滋" class="headerlink" title="如果嫌麻烦，把我提供的 link.bat 也放到个人文件夹下然后每次只要双击link.bat就可以了！！！用这个方法可以避开开热点的检测，超好用，配合win10的开热点工具简直美滋滋"></a>如果嫌麻烦，把我提供的 link.bat 也放到个人文件夹下然后每次只要双击link.bat就可以了！！！用这个方法可以避开开热点的检测，超好用，配合win10的开热点工具简直美滋滋</h3><h2 id="github地址"><a href="#github地址" class="headerlink" title="github地址"></a><a href="https://github.com/weearc/drcom-pyFor-CQU-HX.git" target="_blank" rel="noopener">github</a>地址</h2>]]></content>
      <tags>
        <tag>drcom</tag>
      </tags>
  </entry>
  <entry>
    <title>js从入门到坚持（转载）</title>
    <url>/posts/38757.html</url>
    <content><![CDATA[<p><strong><em>本手册的使用说明：</em></strong></p>
<ol>
<li>按着顺序看就应该能懂，并且少走弯路</li>
<li>👉👉👉 后面的链接为主要内容</li>
<li>更多 后面的链接为补充内容，不一定需要看</li>
<li>⚠️ 的意思是「需要注意的是」</li>
</ol>
<a id="more"></a>
<ol start="5">
<li>🙈 的意思是「随便看看不用记，需要的时候再翻」</li>
<li>‼️ 的意思是「有更正」</li>
<li>链接主要来自 MDN，比 W3school 之类的强多了，学习 Web 技术都尽量看 MDN 的资源 (最好也看看英文的，顶部可以切换语言，我发现有的中文翻译的专有名词有点奇怪，还不给英文原词)</li>
</ol>
<h1 id="基础语法与-DOM-操作"><a href="#基础语法与-DOM-操作" class="headerlink" title="基础语法与 DOM 操作"></a>基础语法与 DOM 操作</h1><p><em>本阶段：我想留住头发。能进行绝大多数页面交互，包括响应用户操作、编辑界面元素、AJAX 数据交换。</em></p>
<h2 id="JS-是什么-如何使用"><a href="#JS-是什么-如何使用" class="headerlink" title="JS 是什么? 如何使用?"></a>JS 是什么? 如何使用?</h2><p>一门 <strong>动态类型、面向对象</strong> 的 <strong>解释执行</strong> 语言。是唯一 <strong>可以在浏览器上直接执行</strong> 的程序设计语言。</p>
<p>JS 几乎可以做任何事，是现在使用最广泛的程序设计语言之一，同时也是 GitHub 上最活跃的语言 (<a href="https://madnight.github.io/githut/" target="_blank" rel="noopener">GitHut</a>）。<br>本阶段主要学习的是 JS 在前端开发中的使用。  </p>
<p>JS 可以使用 <code>&lt;script&gt;</code> 标签内嵌在 HTML 内，或链接引入 JS 脚本文件。<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"hello, world"</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">scrpit</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"script.js"</span>&gt;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>学习 JS 一个方便的方式是使用浏览器的 <strong>开发者工具-&gt;Console (控制台)</strong>，Console 内的代码将被直接求值。<br>开发者工具内还能显示错误信息 (<a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong" target="_blank" rel="noopener">MDN 什么地方出了错？</a>) 与设置断点 (<a href="https://www.cnblogs.com/lurensang/p/6515080.html" target="_blank" rel="noopener">Chrome断点调试</a>) 来帮助调试。  </p>
<p>2015 年 JS 迎来了一次重大语法更新 ES6。ES6 中新增的内容大多与入门无关，新增的语法糖将会随着各部分内容一并介绍。</p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript" target="_blank" rel="noopener">MDN 什么是JavaScript？</a></p>
<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><p>JavaScript 从 Java 中借用了大部分语法，但也受到 Awk，Perl 和 Python的影响。 JavaScript是区分大小写的，并使用 Unicode字符集。<br>在JavaScript中，指令被称为  statements，并用分号 <code>;</code> 分隔。ECMAScript 规定了如何自动插入分号来结束语句。但是，建议随时添加分号来结束语句，以避免可能的副作用。</p>
<p><strong>注释</strong> 在代码内的解释性文字，不会被执行。JS 的注释语法与 C++、Java 等语言相同。<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 这是一个更长的,</span></span><br><span class="line"><span class="comment">   多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 然而, 你不能, /* 嵌套注释 */</span> 语法错误 *<span class="regexp">/</span></span><br></pre></td></tr></table></figure></p>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量就是用于 <strong>存放数据的容器</strong>。  </p>
<p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables" target="_blank" rel="noopener">MDN 变量</a></strong></p>
<p>ES6 中新增了关键字 <code>let</code>, <code>const</code> 来申明变量与常量，与 <code>var</code> 差异不大，可以在第三阶段「JS 的并发编程及其他语法」中学习。</p>
<p><strong>数据类型</strong></p>
<p>变量存放着数据，而数据有不同的类型。数据类型的概念从程序语言使用的角度来讲，就是能对一个变量所进行的操作的类别。 <strong>变量存储不同类型的数据时，能进行的操作也不一样</strong>。</p>
<p>JS 有 6 种 <strong>原始数据类型</strong> <code>String, Number, Boolean, Symbol, null, undefined</code> (<code>Symbol</code> 为 ES6 新增类型) 与 <code>Object</code> <strong>对象类型</strong>。<br>对象类型是一类类型的统称，它们各自能进行不同的操作，JS 中常见的对象类型有 <code>Array, Error, Date</code> 等。关于对象类型可以在第二阶段「JS 的面向对象」中学习。(‼️ <code>Math</code> 是一个对象不是类型)</p>
<p>⚠️ JS 中未赋值的变量 (包括函数参数) 值都为 <code>undefined</code>。</p>
<p>使用 typeof 运算符可以获得变量的数据类型，有 <code>“string”, “number”, “boolean”, “object”, “function”, “symbol”, “undefined”</code>。typeof 的运算结果为 String 类型。<br>⚠️ <code>typeof null</code> 的结果为 <code>&quot;object&quot;</code>。<br>⚠️ 在 JS 中函数 (Function) 也是一种类型 (变量值) 但不是「数据」类型。</p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#数据结构和类型" target="_blank" rel="noopener">MDN 语法和数据类型</a></p>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Strings" target="_blank" rel="noopener">MDN JavaScript中的字符串</a></strong></p>
<p>ES6 中新增了反引号 <code>`</code> 包围起来的字符串，称为 <strong>模板字符串</strong><br>模板字符串中插入变量不再需要用 <code>+</code> 将字符串与变量连接起来，而是直接在模板字符串内使用 <code>${expr}</code> 嵌入：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">`Hello <span class="subst">$&#123;name&#125;</span>, nice to meet you!`</span></span><br></pre></td></tr></table></figure></p>
<p>更多：<br><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods" target="_blank" rel="noopener">MDN 有用的字符串方法</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String" target="_blank" rel="noopener">MDN String</a></p>
<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays" target="_blank" rel="noopener">MDN 数组</a></strong>  </p>
<p>ES6 <strong>数组的解构赋值</strong><br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">// a = 1, b = 2, c = 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> [foo, [[bar], baz]] = [<span class="number">1</span>, [[<span class="number">2</span>], <span class="number">3</span>]];</span><br><span class="line">foo <span class="comment">// 1</span></span><br><span class="line">bar <span class="comment">// 2</span></span><br><span class="line">baz <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> [ , , third] = [<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>];</span><br><span class="line">third <span class="comment">// "baz"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> [x, , y] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">x <span class="comment">// 1</span></span><br><span class="line">y <span class="comment">// 3</span></span><br></pre></td></tr></table></figure></p>
<p><strong>左值</strong> (被赋值的变量) 按照对应位置提取右值数组中的值。右值为变量而不是字面量时也可解构：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> [a, b, c] = array;</span><br></pre></td></tr></table></figure></p>
<p>ES6 <strong>剩余 (rest) 语句</strong> 与 <strong>扩展语句</strong> 🙈  </p>
<p>语法均为 <code>...variable</code>，区别在于 <code>variable</code> 是左值还是右值。<br>事实上，剩余语句在函数参数中使用更为广泛。见 基础语法-&gt;函数<br>数组的解构赋值中可以使用剩余语句来将没有对应左值的余下右值放入一个数组中：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> [a, b, ...arr] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">// a = 1, b = 2, arr = [3, 4, 5]</span></span><br></pre></td></tr></table></figure></p>
<p>扩展语句可以将数组展开，在数组中的应用是合并数组与元素等：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> merged = [...array, <span class="string">"abc"</span>, ...arr];</span><br><span class="line"><span class="comment">// merged = [1, 2, 3, "abc", 3, 4, 5]</span></span><br></pre></td></tr></table></figure></p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noopener">MDN Array</a></p>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><strong>算数运算与比较运算</strong></p>
<p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Math" target="_blank" rel="noopener">MDN 数字和操作符</a></strong></p>
<p>ES6 中新增了幂运算，如 a 的 b 次方 <code>a ** b</code>  </p>
<p>⚠️ JS 对于非 Boolean 值的比较运算，以及非 Boolean 值到 Boolean 值的转换非常混乱与诡异，是 JS 语言中最大的败笔。遇到上述两种情况时，务必先查阅以下链接，及代码片段：  </p>
<p>🙈 真值表 <a href="https://thomas-yang.me/projects/oh-my-dear-js/" target="_blank" rel="noopener">Oh My Dear JavaScript</a><br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">🙈 <span class="comment">// Falsy</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">undefined</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NaN</span>)    <span class="comment">// Not A Number</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">''</span>)     <span class="comment">// emplty strings</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">""</span>)     <span class="comment">// emplty strings</span></span><br><span class="line"></span><br><span class="line">🙈 <span class="comment">// Truthy</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> (&#123;&#125;)     <span class="comment">// Objects</span></span><br><span class="line"><span class="keyword">if</span> ([])</span><br><span class="line"><span class="keyword">if</span> (<span class="number">42</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"foo"</span>)  <span class="comment">// non-empty strings</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line"><span class="keyword">if</span> (<span class="number">-42</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3.14</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">-3.14</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">Infinity</span>)</span><br><span class="line"><span class="keyword">if</span> (-<span class="literal">Infinity</span>)</span><br></pre></td></tr></table></figure></p>
<p><strong>逻辑运算</strong> </p>
<table>
<thead>
<tr>
<th>名称</th>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>逻辑与(AND)</td>
<td><code>expr1 &amp;&amp; expr2</code></td>
<td>如果 expr1 能被转换为false (falsy 值)，那么返回expr1；否则，返回expr2。</td>
</tr>
<tr>
<td>逻辑或(OR)</td>
<td>`expr1</td>
<td></td>
<td>expr2`</td>
<td>如果 expr1 能被转换为true (truthy 值)，那么返回expr1；否则，返回expr2。</td>
</tr>
<tr>
<td>逻辑非(NOT)</td>
<td><code>!expr</code></td>
<td>如果操作数能够转换为true (truthy 值) 则返回false；否则返回true。</td>
</tr>
</tbody>
</table>
<p>⚠️ Truthy 值与 Falsy 值可查阅以上代码。<br>⚠️ 对于 Boolean 值逻辑运算符的作用与数学中相同，但对于非 Boolean 值，JS 的逻辑运算符能起到条件判断的作用，如下🙈：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> action = input || <span class="string">"default"</span>;    <span class="comment">// 若 input 为 truthy 则将 input 的值赋给 action，</span></span><br><span class="line">                                    <span class="comment">// 否则 action 赋值为 "default"</span></span><br><span class="line"><span class="comment">// 作用同于</span></span><br><span class="line"><span class="keyword">var</span> action = input ? input : <span class="string">"default"</span>; <span class="comment">// 条件运算符见下</span></span><br><span class="line"><span class="comment">// 以及</span></span><br><span class="line"><span class="keyword">if</span> (input) &#123;</span><br><span class="line">    <span class="keyword">var</span> action = input;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> action = <span class="string">"default"</span>;</span><br><span class="line">&#125;</span><br><span class="line">                                    </span><br><span class="line"><span class="keyword">var</span> a = b &amp;&amp; c; <span class="comment">// 若 b 为 falsy 则 a = b，否则 a = c</span></span><br></pre></td></tr></table></figure></p>
<p><strong>条件运算符</strong>  </p>
<p><code>condition ? expr1 : expr2</code><br>若 <code>condition</code> 为 truthy，则对 <code>expr1</code> 求值并返回，否则对 <code>expr2</code> 求值并返回。</p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Expressions_and_Operators" target="_blank" rel="noopener">MDN 表达式和运算符</a></p>
<h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p>流程控制是程序设计的最根本的内容，学习完本章内容后，理论上已经可以写出任何功能的程序，只是效率和可读性上有所欠缺。</p>
<p><strong>语句与语句块</strong>  </p>
<p>在 if 条件语句，与 for 及 while 循环语句中，判断或循环条件后的多条语句需要用大括号 <code>{}</code> 包围起来，称为语句块：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    alert(<span class="string">"这些"</span>);</span><br><span class="line">    alert(<span class="string">"语句"</span>);</span><br><span class="line">    alert(<span class="string">"都会"</span>);</span><br><span class="line">    alert(<span class="string">"执行"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>而不使用 <code>{}</code> 时，只有判断或循环条件后的第一条语句受到该流程控制语句的作用：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">while</span> (count--)</span><br><span class="line">    alert(<span class="string">"这条语句会重复执行"</span>);</span><br><span class="line">alert(<span class="string">"这两条只"</span>);</span><br><span class="line">alert(<span class="string">"执行一次"</span>);</span><br></pre></td></tr></table></figure></p>
<p><strong>条件语句</strong>  </p>
<p>JS 有两种条件语句：if…else 和 switch</p>
<p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/learn/JavaScript/Building_blocks/conditionals" target="_blank" rel="noopener">MDN 条件语句</a></strong></p>
<p>⚠️ 如果某条 case 语句后没有 break，通过该 case 条件的流程会穿过其它 case 执行直到遇到 break 语句。</p>
<p><strong>循环语句</strong>  </p>
<p>JS 有 5 种循环语句：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这三种在本节学习</span></span><br><span class="line"><span class="keyword">for</span> (initialExpression; condition; incrementExpression) statement</span><br><span class="line"><span class="keyword">while</span> (condition) statement</span><br><span class="line"><span class="keyword">do</span> statement <span class="keyword">while</span> (condition);</span><br><span class="line"></span><br><span class="line"><span class="comment">// for...of 可在更多链接里学习，这是 ES6 新增的语法</span></span><br><span class="line"><span class="keyword">for</span> (variable <span class="keyword">of</span> array) statement</span><br><span class="line"></span><br><span class="line"><span class="comment">// for...in 需要在学习 JS 的面向对象之后理解</span></span><br><span class="line"><span class="keyword">for</span> (variable <span class="keyword">in</span> object) statement</span><br></pre></td></tr></table></figure></p>
<p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/learn/JavaScript/Building_blocks/Looping_code" target="_blank" rel="noopener">MDN 循环吧代码</a></strong>  </p>
<p>⚠️ for 语句后如果有使用到循环变量 (在循环条件使用的变量) ，循环变量的值是第一个不满足循环条件的值，而不是最后一个满足循环条件的值。</p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Loops_and_iteration" target="_blank" rel="noopener">MDN 循环和迭代</a></p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>🙈 👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/learn/JavaScript/Building_blocks/Functions" target="_blank" rel="noopener">MDN 函数-可复用代码块</a></strong></p>
<p><strong>函数的定义与调用</strong>  </p>
<p>我们先来看看数学中的函数 <code>$F(x,y)=x^3 + y + 3$</code>。它用 JS 函数写出来是这样：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x ** <span class="number">3</span> + y + <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中</p>
<ul>
<li><code>function</code> 是申明函数的关键字</li>
<li><code>F</code> 是 <strong>函数名</strong>，与变量命名规则相同，可省略</li>
<li><code>(x, y)</code> 是 <strong>参数列表</strong>，由逗号分隔，没有参数时括号也不能省略</li>
<li>大括号 <code>{}</code> 包围的内容称为 <strong>函数体</strong>，是调用函数时执行的代码，可有 0 到多条语句</li>
<li><code>return</code> 是函数的返回语句，意味着函数调用后输出的值。无 return 语句意味着不返回值 (准确的说是返回 <code>undefined</code>)</li>
</ul>
<p>使用它就如同数学中的 <code>$Let \ \ a = F(2, 3)$</code>：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> value = F(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">// value 为 14</span></span><br></pre></td></tr></table></figure></p>
<p>但程序语言的函数跟数学中的函数依然有着很大差别，例如程序语言的函数的参数不一定是数字 (如 <code>alert(message)</code> 参数是 String)，甚至可能没有参数；程序语言的函数也不一定会返回数字 (如 <code>String#split(separator)</code> 返回 Array)，甚至不会返回值。(<code>#</code> 不是 JS 的操作符，详见 DOM 操作-&gt;初窥对象)</p>
<p>那么没有参数或返回值的函数有什么用呢？如同前面链接里的 <code>draw()</code> 函数，它们提供的是 <strong>重复使用一个流程的便捷方法</strong>。</p>
<p><strong>函数返回值</strong>  </p>
<p>👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/learn/JavaScript/Building_blocks/Return_values" target="_blank" rel="noopener">MDN 函数返回值</a></strong></p>
<p><strong>将函数赋值给变量</strong>  </p>
<p>这是 JS 中最灵活，对于初学者也最为之迷惑的特点之一，<strong>函数本身是一个变量值</strong> (Lambda 函数)， 函数本身可以赋值给任何变量 ，乃至将函数作为函数参数、函数返回另一个函数：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> f = F;  <span class="comment">// 上面定义的 F</span></span><br><span class="line">f(<span class="number">2</span>, <span class="number">3</span>);    <span class="comment">// = 14</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">produceFunction</span>(<span class="params">welcome</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;welcome&#125;</span>, <span class="subst">$&#123;name&#125;</span> !`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">produceFunction(<span class="string">"Long time no see"</span>)(<span class="string">"Sandy"</span>);   <span class="comment">// "Long time no see, Sandy !""</span></span><br></pre></td></tr></table></figure></p>
<p>前面链接中的将匿名函数赋值给一个变量，实际上就是产生了一个 <strong>函数类型</strong> 的变量值，然后这个变量值被赋值给了变量。<br>任何函数类型的变量值，都可以通过函数调用操作符 <code>()</code> 调用。</p>
<p><strong>即时执行函数 (IIFE) 🙈</strong>  </p>
<p>只要将函数的定义用括号 <code>()</code> 包围，就可以立即用函数调用操作符 <code>()</code> 调用：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nothing = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello "</span> + name;</span><br><span class="line">&#125;)(<span class="string">"Vincent"</span>); <span class="comment">// "Hello Vincent"</span></span><br></pre></td></tr></table></figure></p>
<p>使用 IIFE 的一个好处就是，IIFE 内的名称不会污染到外部乃至全局 (global)。</p>
<p><strong>箭头函数 🙈</strong>  </p>
<p>ES6 新增语法 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">MDN 箭头函数</a></p>
<p><strong>不定参数函数 🙈</strong>  </p>
<p>定义函数时，参数列表中的各个参数叫做 <strong>形参</strong> (Parameters)；调用函数时，传递给函数的各个参数叫做 <strong>实参</strong> (Arguments)。<br>形参与实参的个数不一定相同。对于有确定最大参数个数的函数，参数列表里形参的数量可以与最大参数个数相等，实参数量不足时，靠后的参数值为 <code>undefined</code>；而对于有不确定个数参数的函数，可以使用 <strong>剩余语句</strong> (见 基础语法-&gt;数组) 来接受不定个数的参数：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRestArguments</span>(<span class="params">first, ...rest</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rest;</span><br><span class="line">&#125;</span><br><span class="line">getRestArguments(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);    <span class="comment">// [2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure></p>
<p>同时，可以使用 <strong>扩展语句</strong> 来将数组展开为函数参数：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">getRestArguments(...array);     <span class="comment">// [7, 8, 9]</span></span><br></pre></td></tr></table></figure></p>
<p>更多：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Functions" target="_blank" rel="noopener">MDN 函数</a></p>
<h2 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h2><p>文档对象模型 (Document Object Model) 是以面向对象方式描述的文档模型，利用 DOM 可以对整个网页界面进行任何操作。</p>
<h3 id="初窥对象"><a href="#初窥对象" class="headerlink" title="初窥对象"></a>初窥对象</h3><p>⚠️ 不是去盯着男票/女票看！禁止虐狗(我)！  </p>
<p>泛指的对象其实是没有实际意义的抽象名词，可以用任何一个词替代，例如东西、玩意 <del>、鬼东西、🐔儿玩意</del>。<br>前面使用的所有变量值都是一个对象，因为 <del>它们都是一个东西</del> JS 将一切都视为对象。(所有对象都有名为 <code>toString()</code> 的方法，除了整数需要加括号才能访问外，其它任何量都可以直接访问，<code>3.14.toString()</code>。)  </p>
<p>至于为啥原始类型变成对象了，多半是借用的 Java 中原始数据类型与包装类的概念 (<a href="https://www.cnblogs.com/huajiezh/p/5225637.html" target="_blank" rel="noopener">Java中基本数据类型和包装器类型的关系</a>)。</p>
<p>每个对象(东西)都可能有属于它的东西，称为 <strong>属性</strong>，例如数组的长度 <code>Array#length</code>，文档的 body 结点 <code>document.body</code>。(<code>#</code> 不是 JS 的操作符，它的意思是某种类型都有某个属性，实际使用时是对一个对象使用 <code>.</code> 操作符，如 <code>[1, 2, 3].length</code>。)</p>
<p>每个对象(东西)也都可能拥有某些功能，称为 <strong>方法</strong>，例如在数组末尾添加项目 <code>Array#push(item)</code>, 在文档中用选择器查找结点 <code>document.querySelector(selector)</code>。</p>
<p>访问对象的属性与方法需要使用 <strong>成员访问操作符 <code>.</code></strong>。</p>
<h3 id="原生-DOM-操作"><a href="#原生-DOM-操作" class="headerlink" title="原生 DOM 操作"></a>原生 DOM 操作</h3><p>🙈 👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Building_blocks/Events" target="_blank" rel="noopener">MDN 事件介绍</a></strong></p>
<p>🙈 👉👉👉 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents" target="_blank" rel="noopener">MDN 操作文档</a></strong></p>
<h3 id="使用-JQuery"><a href="#使用-JQuery" class="headerlink" title="使用 JQuery"></a>使用 JQuery</h3><p>最流行的 DOM 操作库有 JQuery, Zepto.js 等，它们封装了基本的 DOM 操作，提供更简练的语法，进行更高效的开发。</p>
<p>👉👉👉 <strong><a href="http://www.w3school.com.cn/jquery/jquery_install.asp" target="_blank" rel="noopener">W3school JQuery</a></strong></p>
<p>只需要学习 入门、HTML、遍历、AJAX 即可。动画由于现在移动端的性能需求，更多通过 CSS 来实现。</p>
<p>大体上 $(selectors) 的用法与 document.querySelector(selectors) 相同。</p>
<h1 id="JS-的面向对象"><a href="#JS-的面向对象" class="headerlink" title="JS 的面向对象"></a>JS 的面向对象</h1><p><em>本阶段：苍茫的前端是我的爱。更加庞大的 Web App 开发，以及使用主流前端框架 (React, Vue 等)。</em>  </p>
<h1 id="JS-的并发编程及其他语法"><a href="#JS-的并发编程及其他语法" class="headerlink" title="JS 的并发编程及其他语法"></a>JS 的并发编程及其他语法</h1><p><em>本阶段：我想深♂入了解 TA 的全♀部，以及使用 JS 后端开发。</em></p>
]]></content>
      <categories>
        <category>转载精品</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>教程</tag>
        <tag>转载文章</tag>
      </tags>
  </entry>
  <entry>
    <title>android课设-蓝牙助手</title>
    <url>/posts/37370.html</url>
    <content><![CDATA[<p>课设制作思路非常简单，就是制作一个蓝牙助手<br><a id="more"></a></p>
<h1 id="Bluetooth-status-helper课程设计"><a href="#Bluetooth-status-helper课程设计" class="headerlink" title="Bluetooth status helper课程设计"></a>Bluetooth status helper课程设计</h1><h2 id="设计缘由"><a href="#设计缘由" class="headerlink" title="设计缘由"></a>设计缘由</h2><p>众所周知目前安卓机器都可以很简单的获取蓝牙状态。但是由于一些原因我所使用的HTC U Ultra在更新到了Android Oreo以后失去了查看蓝牙状态的功能。因此在本设计中打算借助外部方式实现这个功能</p>
<h2 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h2><p>由于在使用Shizuku Manager时以及使用Brevent时发现可以通过扩展开发的方式调用部分系统API，这些API在一定程度上根据厂商的设计方式不同会无法直接调用或是被屏蔽掉。但是HTC在安卓5.0时代已经在系统中大量（完全）保留了原生Android的API，因此只要需要寻找这些接口的调用方式即可使用“被屏蔽”的功能。<br>在手机实际使用过程中发现缺失的功能如下：</p>
<ul>
<li>更改蓝牙可被发现状态</li>
<li>更改蓝牙可被发现状态的时长</li>
<li>(可选)查看的蓝牙列表</li>
</ul>
<h2 id="编写过程"><a href="#编写过程" class="headerlink" title="编写过程"></a>编写过程</h2><h3 id="蓝牙权限的获取"><a href="#蓝牙权限的获取" class="headerlink" title="蓝牙权限的获取"></a>蓝牙权限的获取</h3><p>蓝牙权限的获取应该是整个项目最核心的部分。只有实现了能够检测蓝牙开启状态并请求蓝牙权限其余功能才能使用。<br>在阅读<a href="https://developer.android.com/guide/topics/connectivity/bluetooth" target="_blank" rel="noopener">官方文档</a>时发现，在Android Oreo中，想要获取蓝牙权限，应该由四个权限组成：<br>即两个位置权限，两个蓝牙权限。即：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--AndroidManifest.xml--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加蓝牙权限-开始 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span><span class="comment">&lt;!--蓝牙权限--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span><span class="comment">&lt;!--Android位置权限&gt;</span></span><br><span class="line"><span class="comment">&lt;!--蓝牙权限添加-结束--&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>由于安卓新的安全机制，获取硬件的控制权限一般是视为危险行为（获取的权限为关键权限），因此需要动态调用权限申请以及权限的注册。</p>
</blockquote>
<h3 id="初始化蓝牙权限"><a href="#初始化蓝牙权限" class="headerlink" title="初始化蓝牙权限"></a>初始化蓝牙权限</h3><p>这一段直接上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setTitle(<span class="string">"蓝牙助手"</span>);</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (savedInstanceState == <span class="keyword">null</span> )&#123;</span><br><span class="line">                bltAdapter = ((BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE)).getAdapter();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//查看设备是否支持蓝牙功能</span></span><br><span class="line">                <span class="keyword">if</span> (bltAdapter != <span class="keyword">null</span> )&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//查看蓝牙是否开启</span></span><br><span class="line">                    <span class="keyword">if</span> (bltAdapter.isEnabled())&#123;</span><br><span class="line">                        <span class="comment">//若已经开启蓝牙则弹出一个提示已经开启</span></span><br><span class="line">                        String notification = <span class="string">"蓝牙已经开启"</span>;</span><br><span class="line">                        additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,notification,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;<span class="keyword">else</span>   &#123;</span><br><span class="line">                        <span class="comment">//若未开启则弹出一个窗口请求开启权限</span></span><br><span class="line">                        Intent enablebtIntent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">                        startActivityForResult(enablebtIntent, Constants.REQUEST_ENABLE_BT);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//当设备不支持蓝牙功能的时候点击按钮退出程序</span></span><br><span class="line">                    AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">                    builder.setTitle(<span class="string">"注意"</span>);</span><br><span class="line">                    builder.setMessage(<span class="string">"您的设备很可能不支持蓝牙功能"</span>);</span><br><span class="line">                    builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            finish();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    builder.show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>关键点解释：</p>
<ol>
<li>传感器一般是通过相应的Adapter来获取使用权，因此先注册BluetoothAdapter，并且方式为getAdapter()，获取系统的BluetoothService；</li>
<li>判断是否开启了蓝牙，如果未开启立即申请权限；</li>
</ol>
<h3 id="重写OnActivityResult"><a href="#重写OnActivityResult" class="headerlink" title="重写OnActivityResult()"></a>重写OnActivityResult()</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode,Intent data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode,resultCode, data);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> Constants.REQUEST_ENABLE_BT:</span><br><span class="line">                <span class="keyword">if</span> (resultCode == RESULT_OK)&#123;</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                    AlertDialog.Builder builder_welcome = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">                    builder_welcome.setTitle(<span class="string">""</span>);</span><br><span class="line">                    builder_welcome.setMessage(<span class="string">"感谢使用蓝牙助手！\n 这款工具面向部分ROM没有提供查看蓝牙状态功能的机型\n 如：HTC，LG\n 如果您的手机ROM拥有类似功能，您仍可尝试使用。"</span>);</span><br><span class="line">                    builder_welcome.setPositiveButton(<span class="string">"我知道了"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    builder_welcome.show();</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙已开启"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙助手需要蓝牙权限才可以正常运行"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:<span class="keyword">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>这么写或者说这么改写的主要原因是蓝牙部分相当于使用了一个新的activity进行控制。</p>
<h4 id="与之匹配的contants-java"><a href="#与之匹配的contants-java" class="headerlink" title="与之匹配的contants.java"></a>与之匹配的contants.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Constants</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_ENABLE_BT = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这一段主要还是根据重写的onActivityResult()设定默认的request Code。</p>
<h3 id="部分功能模块编写"><a href="#部分功能模块编写" class="headerlink" title="部分功能模块编写"></a>部分功能模块编写</h3><h4 id="蓝牙开关"><a href="#蓝牙开关" class="headerlink" title="蓝牙开关"></a>蓝牙开关</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mswitch.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (isChecked)&#123;</span><br><span class="line">                    Intent enablebtIntent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">                    startActivityForResult(enablebtIntent, Constants.REQUEST_ENABLE_BT);</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙开启"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    bltAdapter.disable();</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙关闭"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙关闭"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h4><h5 id="模块主代码"><a href="#模块主代码" class="headerlink" title="模块主代码"></a>模块主代码</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">goTO_log.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent log = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,log_watcher<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">                bundle.putString(<span class="string">"information"</span>,information);</span><br><span class="line">                bundle.putString(<span class="string">"time"</span>,time);</span><br><span class="line">                log.putExtra(<span class="string">"bundle"</span>,bundle);</span><br><span class="line">                startActivity(log);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h5 id="查看Activity部分代码"><a href="#查看Activity部分代码" class="headerlink" title="查看Activity部分代码"></a>查看Activity部分代码</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">log_watcher</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    TextView log;</span><br><span class="line">    TextView log_time;</span><br><span class="line">    Button btn;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_log_watcher);&#123;</span><br><span class="line">            setTitle(<span class="string">"LOG"</span>);</span><br><span class="line">            Bundle bundle = getIntent().getBundleExtra(<span class="string">"bundle"</span>);</span><br><span class="line">            <span class="keyword">final</span> String[] information = &#123;bundle.getString(<span class="string">"information"</span>)&#125;;</span><br><span class="line">            <span class="keyword">final</span> String[] time = &#123;bundle.getString(<span class="string">"time"</span>)&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            log = (TextView) <span class="keyword">this</span>.findViewById(R.id.logcat);</span><br><span class="line">            log_time = (TextView) <span class="keyword">this</span>.findViewById(R.id.logcat_time);</span><br><span class="line">            btn = (Button) <span class="keyword">this</span>.findViewById(R.id.log_clean);</span><br><span class="line"></span><br><span class="line">            btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    time[<span class="number">0</span>]=<span class="string">"\0"</span>;</span><br><span class="line">                    information[<span class="number">0</span>] =<span class="string">"\0"</span>;</span><br><span class="line"></span><br><span class="line">                    log.setText(<span class="string">"\0"</span>);</span><br><span class="line">                    log_time.setText(<span class="string">"\0"</span>);</span><br><span class="line">                    Toast.makeText(log_watcher.<span class="keyword">this</span>,<span class="string">"日志已清除"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            log.setText(information[<span class="number">0</span>]);</span><br><span class="line">            log_time.setText(time[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="传递log"><a href="#传递log" class="headerlink" title="传递log"></a>传递log</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">logcat</span><span class="params">(String information, String additional_inform)</span></span>&#123;</span><br><span class="line">        information=information+additional_inform+<span class="string">'\n'</span>;</span><br><span class="line">        additional_inform=<span class="string">"\0"</span>;</span><br><span class="line">        <span class="comment">//log.setText(information);</span></span><br><span class="line">        get_log_time();</span><br><span class="line">        <span class="keyword">return</span> information;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">get_log_time</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss"</span>);</span><br><span class="line">        java.util.Date date=<span class="keyword">new</span> java.util.Date();</span><br><span class="line">        time=time+<span class="string">"\n"</span>+sdf.format(date);</span><br><span class="line">        <span class="comment">//log_time.setText(time+"\n");</span></span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h4 id="设定可被发现时间"><a href="#设定可被发现时间" class="headerlink" title="设定可被发现时间"></a>设定可被发现时间</h4><p>如果认真研究过蓝牙的文档的话，不难发现蓝牙默认最长可被发现时间为300秒，并且在高版本Android上不能使用旧方法进行时间的延展，另外输入值的“null”以及“0”最终获取值并不相同，因此具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cs_btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                String _timeout = editText.getText().toString();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(TextUtils.isEmpty(editText.getText()) )&#123;<span class="comment">//判断输入是否为空</span></span><br><span class="line"></span><br><span class="line">                    Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                    dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, <span class="number">300</span>);</span><br><span class="line">                    startActivity(dis_intent);</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备参照默认最大时间:300秒设置可被发现"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                    additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    timeout =Integer.parseInt(_timeout);</span><br><span class="line">                    <span class="comment">//若输入值不为空，采用安卓本身方法进行广播</span></span><br><span class="line">                    <span class="keyword">if</span> (timeout &lt;= <span class="number">300</span> &amp;&amp; timeout != <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                        Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                        dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, timeout);</span><br><span class="line">                        startActivity(dis_intent);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备目前已经可被发现，时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">if</span> (timeout &gt; <span class="number">300</span>)&#123;</span><br><span class="line">                        <span class="comment">//若时间长于300秒，采用反射方式调用系统蓝牙可被发现的开关以达到延时目的</span></span><br><span class="line">                        setDiscoverableTimeout(timeout);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备目前已经可被发现，时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">if</span> (timeout == <span class="number">0</span>)&#123;</span><br><span class="line">                        Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                        dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, <span class="number">120</span>);</span><br><span class="line">                        startActivity(dis_intent);</span><br><span class="line">                        timeout=<span class="number">120</span>;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"输入值为0。设备目前已经可被发现，默认时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h5 id="时间高于300秒时方法重写"><a href="#时间高于300秒时方法重写" class="headerlink" title="时间高于300秒时方法重写"></a>时间高于300秒时方法重写</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDiscoverableTimeout</span><span class="params">(<span class="keyword">int</span> timeout)</span> </span>&#123;</span><br><span class="line">    BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Method setDiscoverableTimeout = BluetoothAdapter.class.getMethod("setDiscoverableTimeout", int.class);</span><br><span class="line">        setDiscoverableTimeout.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Method setScanMode =BluetoothAdapter.class.getMethod("setScanMode", int.class,int.class);</span><br><span class="line">        setScanMode.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        setDiscoverableTimeout.invoke(adapter, timeout);</span><br><span class="line">        setScanMode.invoke(adapter, BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE,timeout);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>另外一定要注意：一定要抛异常，否则编译时会报错</p>
</blockquote>
<h4 id="蓝牙扫描"><a href="#蓝牙扫描" class="headerlink" title="蓝牙扫描"></a>蓝牙扫描</h4><p>另外说起蓝牙，应该难点就是在广播及扫描部分，但是由于本人理解并不深刻因此可能会出现问题。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">scan_btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isEnabled())&#123;</span><br><span class="line">                   bltAdapter.enable();</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isDiscovering()) &#123;</span><br><span class="line">                   bltAdapter.cancelDiscovery();</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;<span class="comment">//利用睡眠阻隔系统重启扫描服务，并处理异常</span></span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">                   bltAdapter.startDiscovery();</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   bltAdapter.startDiscovery();</span><br><span class="line">               &#125;</span><br><span class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"正在进行扫描..."</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">               Intent intent = <span class="keyword">new</span> Intent(bltAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">               startActivity(intent);</span><br><span class="line">               <span class="comment">//扫描到了任一蓝牙设备</span></span><br><span class="line">               <span class="keyword">if</span>(BluetoothDevice.ACTION_FOUND.equals(intent.getAction()))</span><br><span class="line">               &#123;</span><br><span class="line">                   Log.v(TAG, <span class="string">"### BT BluetoothDevice.ACTION_FOUND ##"</span>);</span><br><span class="line">                   BluetoothDevice btDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);</span><br><span class="line">                   <span class="keyword">if</span>(btDevice != <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">                       Log.v(TAG , <span class="string">"Name : "</span> + btDevice.getName() + <span class="string">" Address: "</span> + btDevice.getAddress());</span><br><span class="line">                       Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"Name:"</span>+btDevice.getName()+<span class="string">"Address:"</span>+btDevice.getAddress(),Toast.LENGTH_LONG).show();</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>(BluetoothDevice.ACTION_BOND_STATE_CHANGED.equals(intent.getAction()))</span><br><span class="line">                   &#123;</span><br><span class="line">                       Log.v(TAG, <span class="string">"### BT ACTION_BOND_STATE_CHANGED ##"</span>);</span><br><span class="line">                       <span class="keyword">int</span> cur_bond_state = intent.getIntExtra(BluetoothDevice.EXTRA_BOND_STATE, BluetoothDevice.BOND_NONE);</span><br><span class="line">                       <span class="keyword">int</span> previous_bond_state = intent.getIntExtra(BluetoothDevice.EXTRA_PREVIOUS_BOND_STATE, BluetoothDevice.BOND_NONE);</span><br><span class="line">                       Log.v(TAG, <span class="string">"### cur_bond_state ##"</span> + cur_bond_state + <span class="string">" ~~ previous_bond_state"</span> + previous_bond_state);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               additional_inform=<span class="string">"设备进行扫描"</span>;</span><br><span class="line">               information=logcat(information,additional_inform);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="取消扫描"><a href="#取消扫描" class="headerlink" title="取消扫描"></a>取消扫描</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mCancel.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isDiscovering()) &#123;</span><br><span class="line">                   bltAdapter.cancelDiscovery();</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;<span class="comment">//利用睡眠阻隔系统重启扫描服务，并处理异常</span></span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"已取消"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="双击返回键退出"><a href="#双击返回键退出" class="headerlink" title="双击返回键退出"></a>双击返回键退出</h4><p>这一段也是对返回键的执行进行重写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> secondTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (secondTime - firstTime &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"再按一次退出程序"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            firstTime = secondTime;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>至于其他部分比如关于，非常简单没必要来说。</p>
<h3 id="RES部分"><a href="#RES部分" class="headerlink" title="RES部分"></a>RES部分</h3><p>这部分最具有说服力应该只有这一段代码，方法是在res部分新建style.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    android:shape="rectangle"&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#3dafeb"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"150dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"5dp"</span> <span class="attr">android:dashWidth</span>=<span class="string">"5dp"</span> <span class="attr">android:color</span>=<span class="string">"#77d5cf"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"10dp"</span> <span class="attr">android:color</span>=<span class="string">"#84ebe5"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="顺便附上主activity的layout"><a href="#顺便附上主activity的layout" class="headerlink" title="顺便附上主activity的layout"></a>顺便附上主activity的layout</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:accessibilityHeading</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"142dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/changeStatus"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"138dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"51dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"148dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"change status"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.484"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Switch</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/_switch"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"309dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"38dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"44dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:showText</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"蓝牙"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textOff</span>=<span class="string">"蓝牙关闭"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textOn</span>=<span class="string">"蓝牙开启"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:checked</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/_scan"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/buttonStyle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"159dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"160dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"132dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/circled_button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fontFamily</span>=<span class="string">"sans-serif"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"SCAN"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:typeface</span>=<span class="string">"monospace"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/goTO_log"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"78dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"34dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"72dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"log"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@+id/changeStatus"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editText"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"128dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"54dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"208dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/mhelp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"42dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"39dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"216dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/question_button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"\?"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">"@+id/editText"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/mCancel"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"160dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"×"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.033"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">"@+id/changeStatus"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>archlinux安装配置(2)</title>
    <url>/posts/60769.html</url>
    <content><![CDATA[<p>上一次我们配置了基础系统，这一次我们需要进行进一步的配置以使这个系统能够进行日称使用，至少来讲，不能出大问题。我们在上次的安装中已经结束了基础环境的配置。但是仍然需要后续的一些准备。<br><a id="more"></a></p>
<h1 id="后期处理"><a href="#后期处理" class="headerlink" title="后期处理"></a>后期处理</h1><blockquote>
<p>先不要弹出安装设备并重启</p>
</blockquote>
<h2 id="chroot-部分"><a href="#chroot-部分" class="headerlink" title="chroot 部分"></a>chroot 部分</h2><p>执行：<br><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">arch-chroot <span class="string">/mnt</span></span><br></pre></td></tr></table></figure></p>
<p>进入已经安装完成的系统。此时，系统默认的shell程式应该是Bash。因此能够进行一些操作。</p>
<p>首先修改时区：</p>
<p>执行：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">tzselect</span></span><br></pre></td></tr></table></figure>
<p>接下来跟着向导进行时区的修改。</p>
<p>然后执行：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"主机名"</span> &gt;&gt; <span class="string">/etc/hostname</span></span><br></pre></td></tr></table></figure>
<p>来创建hostname。</p>
<p>并执行：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure>
<p>修改hosts。</p>
<p>一个基础的hosts文件看起来应该是这样：</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"># Static table lookup for hostnames.</span><br><span class="line"># See hosts(<span class="number">5</span>) for details.</span><br><span class="line"><span class="number">127.0.0.1</span>       localhost</span><br><span class="line">::<span class="number">1</span>                  localhost</span><br><span class="line"><span class="number">127.0.1.1</span>       你的hostname.localdomain       你的hostname</span><br></pre></td></tr></table></figure>
<p>接下来修改locale:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>locale.gen</span><br></pre></td></tr></table></figure>
<p>为了保险起见，locale.conf 我们不做任何更改。</p>
<p>找到<code>en_US.UTF8</code> ，取消注释并执行：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">locale-gen</span></span><br></pre></td></tr></table></figure>
<p>生成locale。</p>
<p>接下来执行：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">passwd root</span></span><br></pre></td></tr></table></figure>
<p>来修改root账户的密码。</p>
<blockquote>
<p>输入密码时不会有任何显示，这是一种安全措施，请不要慌张。</p>
</blockquote>
<p>接下来我们需要安装引导程序，此时可以直接执行：<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -S grub os-prober efibootmgr</span></span><br></pre></td></tr></table></figure></p>
<p>来安装相关的工具和程式。<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">grub-install <span class="attribute">--target</span>=x86_64-efi  <span class="attribute">--directory</span>=esp分区</span><br></pre></td></tr></table></figure></p>
<p>但是个人来讲更加推荐使用rEFInd程序代替之，一则是界面更加美观，二则是确实省心不少。需要安装rEFInd,执行：<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -S refind-efi</span></span><br></pre></td></tr></table></figure></p>
<p>安装过程中会自动寻找操作系统的引导项(EFI)，无须担心。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">refind-<span class="keyword">install</span></span><br></pre></td></tr></table></figure>
<p>接下来重启，并取出安装设备。从引导程序引导进入新系统。</p>
<h2 id="重启后的操作"><a href="#重启后的操作" class="headerlink" title="重启后的操作"></a>重启后的操作</h2><p>重启后，应该可以直接看到提示输入用户名，键入：root，回车，并输入密码。登录到新系统。 </p>
<p>注：我的个人建议是chroot下安装iw，dialog等工具，预防进入系统没网的尴尬。</p>
<h1 id="桌面环境安装"><a href="#桌面环境安装" class="headerlink" title="桌面环境安装"></a>桌面环境安装</h1><p>如果是稍微老一点的教程，可能会推荐先把显卡驱动什么准备好再安装桌面环境。但是我这里将直接讲解桌面环境的安装。因为基本上官方支持的桌面环境都是把我们需要提前安装的那些组件作为依赖来安装的。<br>首先我们需要选择自己所需要的桌面环境。为什么我不在这里推荐一个？因为每个人喜好不同，各个桌面环境的体验也大不相同，需要知道自己的需求才能选择得相对舒服。</p>
<h2 id="GNOME"><a href="#GNOME" class="headerlink" title="GNOME"></a>GNOME</h2><p>GNOME是GNU基金会的亲儿子，全称The GNU Network Object Model Environment（GNU对地网络模型）。听起来高大上，但是其实是非常容易亲近和理解的。就是安装完能看到的整个视觉上的界面和底层诸多逻辑。<br>在Archlinux想要安装GNOME非常简单。只需要执行：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -S gnome gnome-extra</span></span><br></pre></td></tr></table></figure>
<p>即可完成GNOME全部套件的安装。如果仅需要基础的Shell那么只安装GNOME包组即可。</p>
<blockquote>
<p>这里区分一个概念:包和包组<br><br>简单的说，包就是单个软件，而包组从字面上理解就是一些包的集合。</p>
</blockquote>
<h2 id="KDE-KDE-PLASMA"><a href="#KDE-KDE-PLASMA" class="headerlink" title="KDE(KDE PLASMA)"></a>KDE(KDE PLASMA)</h2><p>更新：</p>
<p>由于长达一年多用回了KDE，因此后文也会着重讲解KDE的基础配置。</p>
]]></content>
      <categories>
        <category>archlinux</category>
        <category>kde</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>archlinux安装配置(1)</title>
    <url>/posts/7521.html</url>
    <content><![CDATA[<h1 id="安装之前"><a href="#安装之前" class="headerlink" title="安装之前"></a>安装之前</h1><p>请确认：</p>
<blockquote>
<p>1.你安装arch Linux的目的是什么。是学习Linux吗？是为了装酷，还是寻求刺激？<br><br>2.你将安装它到哪里？是你正在使用的电脑上，是一个即将淘汰的旧电脑上，亦或是虚拟机中？<br><br><a id="more"></a><br>3.你是否了解它的安装方式？还是你打算一步一步学习如何安装？<br><br>4.你是否了解它的优点和缺点？如果你并不不了解，你是否能承担风险?<br><br>我并不是要打消你尝试arch Linux的热情，但是arch Linux激进又高频的更新却几乎使所有使用过它的人印象深刻。频繁更新所带来的新功能和其带来的极不稳定性也为人所诟病。如果你可以在终端下面对字符愉快的玩耍，那么你使用arch Linux将不会有任何问题，但是，如果你是一个新手，那么你将需要一点时间，耐心和解决问题的能力来安装并使用arch Linux。</p>
</blockquote>
<h1 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h1><blockquote>
<p>1.你可能需要确认你要安装位置，如：实体机，虚拟机，为此你将可能要额外准备例如软碟通或UUI这样的工具来帮助你将镜像文件写入U盘中<br><br>2.如果你的主力系统是Windows xp或Windows 7你可以正常的准备一定的空白磁盘空间，如果是Windows8/8.1/10，你则需要额外了解UEFI模式下Linux操作系统的安装方式</p>
</blockquote>
<h1 id="开始安装-基础系统"><a href="#开始安装-基础系统" class="headerlink" title="开始安装(基础系统)"></a>开始安装(基础系统)</h1><blockquote>
<p>首先，你需要设置你的电脑从你的可引导设备（也就是你在前一步中的U盘）<br><br>在arch的引导菜单中，你要选择boot x86-64那项以安装arch Linux，在经过短暂的加载后你将进入Linux的shell模式下。<br><br><b>注意：请确保你有网络连接</b><br><br>如果你拥有有线连接或被Linux内核原生支持的无线网连接，那么恭喜你，可以继续安装了<br>首先要确保网络连接的速率</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ping</span> <span class="selector-tag">-c</span> 3 <span class="selector-tag">www</span><span class="selector-class">.baidu</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure>
<p>如果速率良好，则可继续安装。如果速率不佳则要执行：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>pacman.conf</span><br></pre></td></tr></table></figure>
<p>在文件中用快捷键</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line"><span class="comment">^w</span></span><br></pre></td></tr></table></figure>
<p>找到含wget那行并去除行前的“#”号，然后执行</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line"><span class="comment">^o</span></span><br></pre></td></tr></table></figure>
<p>以写入改动，并用</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line"><span class="comment">^x</span></span><br></pre></td></tr></table></figure>
<p>来退出nano。</p>
<h2 id="磁盘准备"><a href="#磁盘准备" class="headerlink" title="磁盘准备"></a>磁盘准备</h2><p>在这里我们选用cfdisk图形化分区工具<br>在shell界面执行</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cfdisk</span></span><br></pre></td></tr></table></figure>
<p>在打开的界面选择磁盘类型</p>
<blockquote>
<p>如果你是用的是已经有操作系统的计算机,请确认你的操作系统使用的磁盘类型<br><br>通常win7及以下版本的Windows使用的是有诸多限制的mbr的类型,即”dos”;而win8及以上为gpt格式的磁盘<br><br><del>这里就先选择传统格式DOS类型</del></p>
</blockquote>
<p>选择GPT类型,回车<br>按照传统的分区方式,将分区分为/,/home,和efi分区.</p>
<blockquote>
<p><b>注意</b><br><br><del>一定要将/分区选为Bootable</del><br><br>然后选择write选项将改动写入磁盘并退出<br>接下来执行</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 <span class="regexp">/dev/</span>sdYX</span><br></pre></td></tr></table></figure>
<blockquote>
<p>1.这里Y代表磁盘的编号,通常以小写字母a,b,c,d…表示<br><br>2.X表示分区编号,通常以数字1,2,3…形式表示<br><br><del>3.在本文中sda1为/分区,sda2为swap分区,sda3为/home分区</del><br><br>4.这里涉及了efi分区。由于这个分区的特殊性，如果是双系统则不需要另外建立，如果是Archlinux单系统就需要建立一个格式为fat32的分区用来储存efi文件。</p>
</blockquote>
<p>因此执行</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 <span class="regexp">/dev/</span>sda1</span><br><span class="line">mkfs.ext4 <span class="regexp">/dev/</span>sda3</span><br></pre></td></tr></table></figure>
<p>然后执行</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mount <span class="string">/dev/sda1</span> <span class="string">/mnt</span></span><br></pre></td></tr></table></figure>
<p>挂载分区到挂载点/<br>执行</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/<span class="built_in">home</span></span><br></pre></td></tr></table></figure>
<p>创建/home目录<br>并执行</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mount <span class="regexp">/dev/</span>sda3 <span class="regexp">/mnt/</span>home</span><br></pre></td></tr></table></figure>
<p>来挂载sda3分区到/home目录<br><br>创建目录/boot/EFI,并将efi分区挂载上去</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="meta-keyword">/mnt/</span>boot/EFI</span><br><span class="line">mount <span class="meta-keyword">/dev/</span>sda2 <span class="meta-keyword">/mnt/</span>boot/EFI</span><br></pre></td></tr></table></figure>
<h2 id="pacman配置"><a href="#pacman配置" class="headerlink" title="pacman配置"></a>pacman配置</h2><p>首先配置软件源</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>pacman.d<span class="regexp">/mirrorlist</span></span><br></pre></td></tr></table></figure>
<p>寻找含有China一行的软件源并去掉句前的＃号,一般启用2,3个源即可</p>
<blockquote>
<p>Linux内核的操作系统大部分的调整都是通过修改配置文件进行的<br><br>有诸多选项是可进行选择的,而大部分配置文件会预先给出选项,因此只需删除句前的＃号即可启用选项,而保留＃的哪一航被称为”注释掉了”<br></p>
</blockquote>
<p>最后执行</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pacman -Syy</span></span><br></pre></td></tr></table></figure>
<p>强制刷新软件源.<br>至此,包管理器pacman配置完成</p>
<h2 id="基础系统安装"><a href="#基础系统安装" class="headerlink" title="基础系统安装"></a>基础系统安装</h2><p>执行</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">pacstrap -i /mnt <span class="keyword">base</span> <span class="keyword">base</span>-devel</span><br></pre></td></tr></table></figure>
<p>来安装基础系统<br>待安装完成,使用</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">fstab -t LABEL -p <span class="regexp">/mnt &gt;&gt; /m</span>nt<span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure>
<p><del>添加分区的UUID标记。UUID之后也可能会无数次用到遇到。需要特殊注意。</del></p>
<p>更新：fstab使用UUID虽然是推荐的但是很是麻烦，因此个人建议个人使用时候使用卷标即可。</p>
<p>记得执行：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cat <span class="regexp">/mnt/</span>etc<span class="regexp">/fstab</span></span><br></pre></td></tr></table></figure>
<p>来查看内容是否正确生成。</p>
<p>至此，基础系统安装和准备全部完毕。</p>
]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装gcc6.1</title>
    <url>/posts/51180.html</url>
    <content><![CDATA[<p>俗话说得好，一回生二回熟，但是时间长了也怕忘。离开了Gentoo那么久也懒得手动编译，但是偶尔也要复习一下为好。</p>
<a id="more"></a>
<h2 id="源码获取"><a href="#源码获取" class="headerlink" title="源码获取"></a>源码获取</h2><p>这个应该是最简单的了，只要你能找到个镜像站，里面镜像列表都差不多有GNU，里面有诸多项目的源代码，gcc源码也不例外。怎么获取，请自己看着办。</p>
<h2 id="展开源码"><a href="#展开源码" class="headerlink" title="展开源码"></a>展开源码</h2><p>正常操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvf gcc6.1.tar.xz</span><br></pre></td></tr></table></figure>
<h2 id="定位到源码目录"><a href="#定位到源码目录" class="headerlink" title="定位到源码目录"></a>定位到源码目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> gcc6.1/</span><br></pre></td></tr></table></figure>
<p>建立编译的工作目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">makedir build</span><br></pre></td></tr></table></figure>
<p>建立工作目录的好处是可以避免编译过程中的中间文件污染源码（大概）。</p>
<h2 id="查看编译选项"><a href="#查看编译选项" class="headerlink" title="查看编译选项"></a>查看编译选项</h2><p>先简单观察一下Archlinux的gcc编译选项</p>
<blockquote>
<p>gcc 8.2.1</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用内建 specs。</span><br><span class="line">COLLECT_GCC=gcc</span><br><span class="line">COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.1/lto-wrapper</span><br><span class="line">目标：x86_64-pc-linux-gnu</span><br><span class="line">配置为：/build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --<span class="built_in">enable</span>-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-threads=posix --<span class="built_in">enable</span>-libmpx --with-system-zlib --with-isl --<span class="built_in">enable</span>-__cxa_atexit --<span class="built_in">disable</span>-libunwind-exceptions --<span class="built_in">enable</span>-clocale=gnu --<span class="built_in">disable</span>-libstdcxx-pch --<span class="built_in">disable</span>-libssp --<span class="built_in">enable</span>-gnu-unique-object --<span class="built_in">enable</span>-linker-build-id --<span class="built_in">enable</span>-lto --<span class="built_in">enable</span>-plugin --<span class="built_in">enable</span>-install-libiberty --with-linker-hash-style=gnu --<span class="built_in">enable</span>-gnu-indirect-function --<span class="built_in">enable</span>-multilib --<span class="built_in">disable</span>-werror --<span class="built_in">enable</span>-checking=release --<span class="built_in">enable</span>-default-pie --<span class="built_in">enable</span>-default-ssp --<span class="built_in">enable</span>-cet=auto</span><br><span class="line">线程模型：posix</span><br><span class="line">gcc 版本 8.2.1 20181127 (GCC)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>gcc 7.4.1</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用内建 specs。</span><br><span class="line">COLLECT_GCC=gcc-7</span><br><span class="line">COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/7.4.1/lto-wrapper</span><br><span class="line">目标：x86_64-pc-linux-gnu</span><br><span class="line">配置为：/build/gcc7/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --<span class="built_in">enable</span>-languages=c,c++,lto --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-threads=posix --<span class="built_in">enable</span>-libmpx --with-system-zlib --with-isl --<span class="built_in">enable</span>-__cxa_atexit --<span class="built_in">disable</span>-libunwind-exceptions --<span class="built_in">enable</span>-clocale=gnu --<span class="built_in">disable</span>-libstdcxx-pch --<span class="built_in">disable</span>-libssp --<span class="built_in">enable</span>-gnu-unique-object --<span class="built_in">enable</span>-linker-build-id --<span class="built_in">enable</span>-lto --<span class="built_in">enable</span>-plugin --<span class="built_in">enable</span>-install-libiberty --with-linker-hash-style=gnu --<span class="built_in">enable</span>-gnu-indirect-function --<span class="built_in">disable</span>-werror --<span class="built_in">enable</span>-checking=release --<span class="built_in">enable</span>-default-pie --<span class="built_in">enable</span>-default-ssp --program-suffix=-7 --<span class="built_in">enable</span>-version-specific-runtime-libs</span><br><span class="line">线程模型：posix</span><br><span class="line">gcc 版本 7.4.1 20181207 (GCC)</span><br></pre></td></tr></table></figure>
<p>前面部分是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/</span><br></pre></td></tr></table></figure>
<p>比较有用的部分只有 –prefix 选项。大致都可以看懂：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--prefix=一级目录 --libdir=二级目录1 --libexecdir=二级目录2 --mandir=二级目录3 --infodir=二级目录4 --with-bugurl=URL</span><br></pre></td></tr></table></figure>
<p>对于已经有了内置GCC的发行版，如果照搬选项则不是明智之举，因此按照个人需求将此处选项改为只定义一级目录即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--prefix=<span class="variable">$HOME</span>/GCC-6.1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>狂欢之夜，似乎内心也有些苦涩</title>
    <url>/posts/34170.html</url>
    <content><![CDATA[<p>今天不来谈技术，我们来说些柔软的东西。<br><a id="more"></a></p>
<p>就在几个小时前，6月17日这天，结束掉了。那么，几个小时前的你是正在为德国战车的失利而惋惜，为618购物节的前夜在狂欢，抑或是回味着所有一切的滋味，等待入眠呢？不论是哪种，今年的617，是不是有特殊的含义呢？</p>
<p>记得小编还是个小屁孩时，对所谓的父爱真的是一无所知。在我眼中，那仿佛每时每刻都在向我发火的我的健壮的爸爸，真的如同恶兽一般。如此，直到高考结束。</p>
<p>有人说，成人礼是人蜕变的第一步，但是对我来说，成人礼一年多以后的高考成绩公布才是，同时也是感到极度心酸的时刻。记得那天他喝了很多的酒，却丝毫看不出醉意。一句“儿子你是好样的”瞬间让几年间因为我的成绩而被凿出了深壑的父子关系又完好如初。</p>
<p>从小学为了我不断陪我练习，到初高中住读每次回家时的严督，到后来陪我高考，陪我参加自招。。。到最后的时候，报道第二天的上午他和老妈来看了我，给我带了我已经睡熟悉的最喜欢的荞麦壳芯子的枕头。他几乎是不愿意离开，本来由于工作任务繁重已没有除了春节以外的其他假日，但是他硬是在我报道那两天来了重庆——横跨东北和西南飞了过来。回去的第二天又要坐在屏幕前赶着工期绘出图纸。临别时一句“这回我管不了你了哈”又让给我怎么作答，让我，一个男性，硬生生把眼泪吞回肚子里去，但又笑着：“你就放心吧！我又不是小孩。”</p>
<p>……</p>
<p>之前的离家根本不算是真正的离家。现在，K字头45个小时的距离才有着真真切切的感觉。</p>
<p>……</p>
<p>无论最近的你是在奋战备考，还是在上交过毕设以后的小憩，还是继续为了理想而拼战到底，都一定不要忘记那个世界上第一爱你的男人。就算不能相互理解，也请相信这一天的到来。因为，你们是<b>家人</b>。</p>
<p>如果你恰巧记得昨天的真正含义，那恭喜你；如果你由于事务繁多忘却了，今天亦不算迟，记得要为父亲，用最发自肺腑的声音，最真实的声音，说一句：</p>
<p>　　　　　　　　　　　　　</p><p><b>“父亲节快乐！爸你辛苦了！”。</b></p><p></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Firefox每夜构建食用指南</title>
    <url>/posts/55829.html</url>
    <content><![CDATA[<p>可能和你想的不大一样，这是个不算完善的方法，但保证好用。</p>
<a id="more"></a>
<h1 id="Firefox下载及”安装“"><a href="#Firefox下载及”安装“" class="headerlink" title="Firefox下载及”安装“"></a>Firefox下载及”安装“</h1><p>首先说明一下，<a href="https://github.com/archlinuxcn/repo" target="_blank" rel="noopener">archlinuxCN repo</a>里面有每夜构建版本的Firefox，而且是四种语言版本:简体中文，正體中文，日本語，English(US)。但是这是我事后才知道的。话说回来，就算是使用了Mozilla官方的版本其实还是一个不错的选择。毕竟是预编译可执行文件，位置随意放置，比如我就放到了 <strong>opt</strong>下面。如果熟悉.desktop文件编写的话只要自己写个启动器就好，简单明了。这点还是要感谢一下Mozilla的打包方式，解压后的文件名统一就是Firefox。因此也可以做到多个Firefox版本共存。<br>由于一些不可见光的原因，国内用户在百度搜索Firefox浏览器的时候会被redirect到火狐浏览器那里<br></p>
<blockquote>
<p>好了你看到了，我把Firefox与火狐作了区分</p>
</blockquote>
<p>为什么？因为你要是仔细观察就会发现不光是安装程序和协议，就连官网本身都并不相同（不只是语言），国内官网是被阉割过的。因此想要下载Mozilla软件请一定要认准Mozilla的官方地址，根据其性质是以org域名。<a href="https://www.mozilla.org/zh-CN/firefox/" target="_blank" rel="noopener">传送门</a>。Mozilla有CDN加持，国内访问速度尚可。<br>接下来就是直接将页面拖到最低端，选择 <a href="https://www.mozilla.org/zh-CN/firefox/channel/desktop/" target="_blank" rel="noopener"><strong>Beta、Nightly、Developer Edition</strong></a>然后找到那个非常酷炫的nightly图标，点进去进行下载。<br>Mozilla会在你进行下载的时候对系统进行判断，Linux下载后会得到一个以tar.bz2作为扩展名的归档文件。直接移动到/opt目录下面，获取root权限并解压：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf firefox-nightly-版本号.0a1.tar.bz2</span><br></pre></td></tr></table></figure></p>
<p>我这里写版本号诸君都能看懂吧，不要傻乎乎地复制粘贴。解压后会自动生成目录Firefox，此时在家目录下建立Firefox-nightly.desktop文件并填入以下内容（遵循X11标准，部分是KDE标准，DBUS部分可以不用理会）<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Comment[zh_CN]=</span><br><span class="line">Comment=</span><br><span class="line">Exec=/opt/firefox/firefox</span><br><span class="line">GenericName[zh_CN]=</span><br><span class="line">GenericName=</span><br><span class="line">Icon=/opt/firefox/browser/chrome/icons/default/default128.png</span><br><span class="line">MimeType=</span><br><span class="line">Name[zh_CN]=firefox nightly</span><br><span class="line">Name=firefox nightly</span><br><span class="line">Path=</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">TerminalOptions=</span><br><span class="line">Type=Application</span><br><span class="line">X-DBUS-ServiceName=</span><br><span class="line">X-DBUS-StartupType=</span><br><span class="line">X-KDE-RunOnDiscreteGpu=<span class="literal">false</span></span><br><span class="line">X-KDE-SubstituteUID=<span class="literal">false</span></span><br><span class="line">X-KDE-Username=</span><br></pre></td></tr></table></figure></p>
<p>这里需要注意一点就是我偷懒了，实际上的写法应该参考archlinuxCN的Firefox-nightly.desktop：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Firefox Nightly</span><br><span class="line">GenericName=Web Browser</span><br><span class="line">Comment[zh_CN]=浏览互联网</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly %u</span><br><span class="line">Icon=firefox-nightly</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br><span class="line">MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">StartupWMClass=FirefoxNightly</span><br><span class="line">Categories=Network;WebBrowser;</span><br><span class="line">Keywords=web;browser;internet;</span><br><span class="line">Actions=new-window;new-private-window;</span><br><span class="line">[Desktop Action new-window]</span><br><span class="line">Name=New Window</span><br><span class="line">Name[zh_CN]=新建窗口</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly --new-window %u</span><br><span class="line">[Desktop Action new-private-window]</span><br><span class="line">Name=New Private Window</span><br><span class="line">Name[en_US]=New Private Window</span><br><span class="line">Name[zh_CN]=新建隐私浏览窗口</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly --private-window %u</span><br></pre></td></tr></table></figure></p>
<p>在这个写法中能够实现隐私窗口的调用，使得功能上更加完善。<br>至此Firefox-nightly安装完毕。你以为这就可以满足我了吗？才怪。</p>
<h1 id="自升级脚本编写"><a href="#自升级脚本编写" class="headerlink" title="自升级脚本编写"></a>自升级脚本编写</h1><h2 id="升级模块"><a href="#升级模块" class="headerlink" title="升级模块"></a>升级模块</h2><h3 id="下载模块"><a href="#下载模块" class="headerlink" title="下载模块"></a>下载模块</h3><p>很简单，如果通过Firefox下载浏览器新版本的话能够直接看到下载的链接，形如：<a href="https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-59.0a1.zh-CN.linux-x86_64.tar.bz2" target="_blank" rel="noopener">https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-59.0a1.zh-CN.linux-x86_64.tar.bz2</a> 。 那么之后就只需要替换版本号就可以了。但是也存在一个问题，就是如果版本号写死了，那么之后的升级操作通过执行脚本就显得很困难，而且最多只能保持在某一版本号这短暂的生命周期内。因此结合以前学习archlinux的PKGBUILD编写时某贴吧大佬的提示，将版本号全部使用 <strong>$pkgver</strong> 代替。根据bash的语法。此变量的声明应该在头部进行而且使用$声明的变量应该是有前部程序输出的。但是毕竟本人能力有限还不能够写出能直接被识别的变量名称（毕竟web地址特殊字符不少）。<br><br>因此，思路是首先编写版本号文件pkgver.txt，在这个文件中输入版本号，借由cat命令执行输出并对之后变量的引用进行输入。<br>因此,整个过程简化为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">_pkgver=$(cat pkgver.txt)</span><br><span class="line">wget https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br><span class="line">tar -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2 #解压时会自动覆盖</span><br><span class="line">rm -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz</span><br></pre></td></tr></table></figure></p>
<h3 id="权限判断模块"><a href="#权限判断模块" class="headerlink" title="权限判断模块"></a>权限判断模块</h3><p>上面我们讲了升级的基本操作：下载包，解压，删除。但是我们需要注意一点，我们在执行脚本时身份不是root，这样会容易造成麻烦。因此需要添加一个简单的身份验证模块,整个过程借由if语句:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [[ $EUID -eq 0 ]]</span><br><span class="line">then    cd /opt</span><br><span class="line">    _pkgver=$(cat pkgver.txt)</span><br><span class="line">    wget https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br><span class="line">    tar -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2 #解压时会自动覆盖</span><br><span class="line">    rm -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz;else</span><br><span class="line">    echo &quot;Please run it use sudo or as root user!&quot;;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
<p>提示一点，千万不要忘记bash中if对空格敏感…还有就是分号不要忘记。</p>
<h2 id="版本号模块"><a href="#版本号模块" class="headerlink" title="版本号模块"></a>版本号模块</h2><p>正常来说的话，我们手动下载新构建的nightly时，Firefox会自动调用函数向上游发出请求来判断是否需要更新，但是我们自己的话就没有办法是用这个。因此我们需要手动构建一个。<br>上面已经可以知道我们有一个名为 <strong>pkgver.txt</strong> 的额外的文件用来检测版本号。然后我们也很容易发现如果尝试下载旧版本的包时候会返回404。那么，这样思路就很明确了：</p>
<ul>
<li>使用curl来获取http_code</li>
<li>使用tail，利用管道获取上面的返回值并剪切</li>
<li>使用一个循环来不断调用版本号的函数</li>
</ul>
<p>那么可以利用以下代码：<br>首先定义一个_link来存放链接<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_link=https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br></pre></td></tr></table></figure></p>
<p>然后使用curl来获取http_code<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;</span><br></pre></td></tr></table></figure></p>
<p>此时应该可以正常获取到网页或者该文件信息了。<br>使用管道：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;</span><br></pre></td></tr></table></figure></p>
<p>定义到新的变量：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$_httpcode=(curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;)</span><br></pre></td></tr></table></figure></p>
<h2 id="夜间定时检测任务添加"><a href="#夜间定时检测任务添加" class="headerlink" title="夜间定时检测任务添加"></a>夜间定时检测任务添加</h2><p>TODO：<br></p>
<ul>
<li>[x] 基础模块编写</li>
<li>[x] 发行版判断并可切换下载器</li>
<li>[x] 代理功能</li>
<li>[] 后续脚本优化</li>
</ul>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
        <tag>firefox</tag>
        <tag>firefox-nightly</tag>
      </tags>
  </entry>
  <entry>
    <title>六月，我们</title>
    <url>/posts/50906.html</url>
    <content><![CDATA[<p>五月已经远去，儿童节已经过去了三天，如果没记错的话，毕业答辩也差不多在进行当中了。今天我们不来谈技术，来谈一谈更加柔软的东西。逐渐远离的五月，我们再犯一次五月病。<br><a id="more"></a><br>有的时候就是这样，不愿意承认的感情，不想被希知的心情，就算加以掩饰，也会有被了解的一天。就算小编是大一的学生，有时候也不想承认，加入蓝盟对自己的改变是无法估量的。之所以一直更愿意谈谈技术，是自以为那样可以更好的隐藏起自己，殊不知，越是想隐藏，越是藏不住。</p>
<p>从面试到开始水群，开始认识了那些有趣的学长学姐们。无论是萌萌的七代目，还是现在帅气的八代目，意外不难相处的廖博士，强悍的巴学姐还是精明能干的姚学姐，还有完全不拘小节的（很好相处的）学长们（外校读研中）都令人印象深刻。都两次义诊的记忆更是没有办法忘却。“不计较，开朗，阳光甚至有点小猥琐”其实男人就应该是这样吧，就算我是男性仍然感觉到：这种魅力是没有办法抵挡的。记得有次问过七代目打算毕业以后怎么办，他直接了当回答说去工作。Emmmmm真是有趣的回答啊……本以为是考研还是什么的。好像本科毕业去读个硕士成为固有套路。虽然感觉会有些遗憾，嘛，都是个人的选择。</p>
<p>因此，直到上学期期末才渐渐发觉好像会错过什么。这种感觉，在这两个月开始的抛售物品中渐渐有了更强烈的感觉。记得高二的时候，也是这个时候，为了准备考试，所属社团的社长的毕业，一点没有去关注。去高三采购物资的时候，见到他本人倒也没有什么特殊感觉。直到一模完他大老远从南京回来看我们，那种难以言喻的感受才逐渐明朗了起来。是“不舍”。</p>
<p>就算到现在说实话，所有现任蓝客我也没有办法认全，毕竟平时接触到的也只有那些，屈指可数。求算事情堆积如山，如果有时间还是会上官网看看，看看大家积分的变化，看看自己的差距，就明白了还有个很长的路要走。默默地看着个人主页的变化，积分疯一样的增长。有时候时间比较充裕，转念登录后台想接一波老校区的单子顺便下去玩玩却几乎此次发现后台空空如野。<br>有的时候会感觉，“这个人真的好高大”。但是，高大的是我们眼中的他们，真正的他们，我们亦不知晓。</p>
<p>从来都不是错觉，每个人的努力其他人都是可以感受到的。面对异常努力的人，那种仰慕之心丝毫不亚于小时候对于兄长和父亲的。正是因为这样，有的时候才希望替这个人承担他不应该承担的全部东西，不论他所背负的是什么，天真如孩童般希望一切美好都如期而至。但是明知自己什么都不是，有时候那样的念头却愈发强烈。越是无能为力，越是想要做些什么来进行改变。仅仅是因为“不想成为路人”。</p>
<p>毕业季，注定是令人五味杂陈的。即将进入新生活的喜悦，离别的伤感还有不舍，亦或是解脱以后的放松都将是多年以后最美好的回忆。即将离校的学长学姐们：恭喜毕业顺利，以后也请多多指教了。</p>
]]></content>
      <categories>
        <category>待修改</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>待修改</tag>
        <tag>毕业季</tag>
      </tags>
  </entry>
  <entry>
    <title>新年折腾记---从Manjaro迁移到Arch</title>
    <url>/posts/30549.html</url>
    <content><![CDATA[<p>新的一年，热爱折腾的我当然是从折腾开始新的一年了….</p>
<a id="more"></a>
<p>在经过了各位arch大佬和Gentoo大佬一年的洗礼…我终于决定从Manjaro切换到Arch Linux了（没十足的把握千万别学我，Manjaro其实是个非常好的发行版，其实我也没啥把握就是了….）。</p>
<p>准备迁移过程中考虑了两个问题：</p>
<ol>
<li>我那快1800个软件包要怎么办</li>
<li>最初选择manjaro，主要是看中了manjaro对于内核切换的便利，以及方便的附加驱动的安装</li>
</ol>
<p>有关第一个问题，可以通过备份一遍软件列表来解决，但是有关问题二，就要比较头痛了，习惯了方便的一键切换再反过来熟悉一下这种方式未免有点“仿古”的感觉…</p>
<p>那么正常来做迁移，首先需要备份一下软件列表，根据<a href="https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Install_packages_from_a_list" target="_blank" rel="noopener">archwiki</a>，我们需要用pacman导出一份列表，这里注意一下arch和manjaro的关系：manjaro的源，可以理解为大于arch的，也就是说对于arch的仓库，manjaro的一众自己的工具等都是“多余的”，但是介于我从aur也安了一部分包来看，aur和自己打包安装的那部分也要考虑进去。</p>
<p>因此在原有系统中执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Qqen选项备份的是除了aur和自己打包安装的以外的包</span></span><br><span class="line">pacman -Qqen &gt; listQqen.txt </span><br><span class="line"><span class="comment">#Qqem选项备份的是aur中的和自己打包安装的包，可以理解为Qqen的补集</span></span><br><span class="line">pacman -Qqem &gt; listQqem.txt</span><br></pre></td></tr></table></figure>
<p>这两个列表保存在主目录就好，之后会用到。</p>
<p>然后还是基础系统的安装，直接base和base-devel两个包组外加iw、wpa_supplicant两个包解决，然后走一遍常规的过程。</p>
<p>这个时候我们再考虑一下，对于manjaro是在源里的软件，对于arch应该是如同aur里的，因为我也使用了相当多archcn的包，因此记得添加archcn源。</p>
<p>然后执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取arch中的存在的包</span></span><br><span class="line">pacman -S --needed $(comm -12 &lt;(pacman -Slq | sort) &lt;(sort listQqen.txt))</span><br><span class="line"><span class="comment">#获取aur里的包</span></span><br><span class="line">yaourt  -S --needed $(comm -12 &lt;(pacman -Slq | sort) &lt;(sort Qqem.txt))</span><br></pre></td></tr></table></figure>
<p>这时候剩下的包就是manjaro专有的了，如果你愿意的话也可以和我一样直接clone <a href="https://gitlab.manjaro.org/explore/groups" target="_blank" rel="noopener">manjaro</a>的那些包的源代码然后自己编译安装，这之后记得把相关的服务启动了，然后就大功告成了。重启一下看看是不是熟悉的界面又回来了。</p>
<p>后记：</p>
<p>貌似很多用arch的用户还在有着对manjaro的鄙视链啊…..但是有一点不得不说，就是该承认的非常用户友好的特性还是承认吧，都是linux用户互怼没啥好处。</p>
]]></content>
      <categories>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>怀念，甚想念，无法想念其一</title>
    <url>/posts/32312.html</url>
    <content><![CDATA[<p>春节第一篇2333，顺便还是要吐槽一下，rime真心难调教，实在是太难受了，换回搜狗了。</p>
<a id="more"></a>
<p>第一篇按照习惯我也不会谈技术反正就我那点知识也没有什么好拿出来讲的。因此今天还是打算随意写一写，毕竟写的开心就完事了。</p>
<p>然后呢…不知道大家有没有接到过类似的短信：</p>
<blockquote>
<p>温馨提示:为守护三亚的蓝天白云，三亚全市严禁露天焚烧秸杆垃圾，三亚主城区及学校、医院、住宅小区等重点区域严禁燃放烟花爆竹，主城区公共场所严禁露天烧烤和祭祀烧纸，寺庙道观严禁燃烧高香。违者将予以处罚。请自觉遵守，共建生态文明三亚。—三亚市人民政府</p>
</blockquote>
<p>嘛，倒是一下子透露了我过年的地点，不过呢，倒是也接到重庆市政府类似的短信。保护环境嘛，没办法的事。可是仔细想一想，好像没像小时候那样过年有些时日了。</p>
<p>回想小时候，每年必定是过年的前几天开始，采买、打扫、准备过年需要用到的一些小玩意儿这些一样没少过。也在过年前几天把家里的窗帘全部卸下然后清洗，再一个个装回去。也曾学着用五洁粉然后对着白色人造石的窗台一顿猛擦直到全部都变亮变白位置……虽然看着麻烦实际也确实麻烦，但是却是在多少年以后的今天令人感觉还能感受到年味的那些回忆。等到春节当天，中午出门去祖父母家，和兄长姐姐一起玩，去放点小鞭儿，冰天雪地的把自己裹成肉丸子到楼下的大平台上去“作妖儿”，往垃圾道里扔二踢脚什么的也是没少干。回来吃年夜饭，年年都是那几个菜色不变样却也是吃不腻，挺奇怪的。而后回家包饺子，看看电视。</p>
<p>那个时候赵本山老师还是春晚的红人，小品也不像现在这么尬，动不动就煽情动不动就歌颂。过去春晚创造了不少梗，歌手们也都是真实的实力派，每一样节目都让人觉得不会看腻，就连后半夜的节目都非常有意思。如果现在春晚都为了挽救收视率而接着一些东风并且请一些实力派的歌手也好演员也好回到那个舞台，就算看到那那些熟悉的面孔我也是觉得没有必要再看下去了，尬得要死的东西我为什么不做点自己觉得有意义的事情而非要和春晚死磕呢？</p>
<p>我确实是相当恋旧，也知道所有东西不可能一成不变，不过还是觉得以前那种有过年气氛的过年只能活在记忆中实在是太可惜了。家里人都分散开了，今年也没能回去看祖母，祖父已经不在人世，很多事情不停地在变。越是想抓住想将那个那些个美好的时光据为己有，越是在发现它在眼前不断地消散的同时感觉心如刀绞。过去已经回不去了，一般都会在这个时间说“应该勇敢的面对未来”吧？但是老实说越是长大就越觉得一些事情不可思议，越觉得害怕面对未来，越想仅仅活在回忆中哪怕知道那些已经是梦，已经不可能在实现了。那么就没有办法了，总不能停下，未规划好的将来也需要考虑——不过不是出于个人意愿，而是出于“对自己负责”的责任。背负了那么多期望以及责任，既然已经背负起来了就不可能轻易地在将那些卸下去。责任就是责任，烙印一般的东西。</p>
<p>新的一年，愿各位身体健康，家庭和睦，工作顺利，学习进步。如果看完了我这么多牢骚话还没厌烦的话可以期待一下下一篇，不是牢骚也不是随笔，既然是技术博客那么技术类的不能少。新的一年希望自己能把坑填完，开个新坑，把日语复习一下最重要的是挂科的那几科一定要考过，真的不想再重修遭受那个罪了orz。</p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>php入门到入土1</title>
    <url>/posts/33109.html</url>
    <content><![CDATA[<p>入土是不可能入土的<br><a id="more"></a></p>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>首先先安装PHP，php-fpm以及nginx。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S php php-fpm nginx</span><br></pre></td></tr></table></figure></p>
<p>安装完成以后，记得配置好vscode对应的相关插件</p>
<blockquote>
<p>注意一点，arch系的nginx配置虽然与其他发行版大同小异，但是初始可写目录不同。即初始化的目录虽然在/usr/share/nginx/html，但是实际上可写可读目录为/srv/nginx</p>
</blockquote>
<h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><p>安装完必要工具，修改配置文件。<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#位置/etc/nginx</span></span><br><span class="line"><span class="attribute">user</span> http http;</span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">event</span> &#123;</span><br><span class="line">        <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        <span class="attribute">include</span>             mime.type;</span><br><span class="line">        <span class="attribute">default_type</span>    application/octet-stream;</span><br><span class="line">        <span class="attribute">sendfile</span>            <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">keepalive_timeout</span>   <span class="number">65</span>;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">                <span class="attribute">listen</span>          <span class="number">80</span>;</span><br><span class="line">                <span class="attribute">server_name</span>     localhost;</span><br><span class="line">                <span class="attribute">root</span>                   /srv/nginx;</span><br><span class="line">                <span class="attribute">location</span>    /   &#123;</span><br><span class="line">                        <span class="attribute">index</span>   index.html  index.htm   index.php;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="attribute">error_page</span>      <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">                <span class="attribute">location</span>    =   /50x.html   &#123;</span><br><span class="line">                        <span class="attribute">root</span>        /usr/share/nginx/html;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="attribute">loaction</span>    <span class="regexp">~   \.php$</span>  &#123;</span><br><span class="line">                        <span class="attribute">fastcgi_pass</span>    unix:/run/php-fpm/php-fpm.sock;</span><br><span class="line">                        <span class="attribute">fastcgi_index</span>   index.php;</span><br><span class="line">                        <span class="attribute">include</span>             fastcgi.conf;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建私人图床并使用</title>
    <url>/posts/61150.html</url>
    <content><![CDATA[<p>其实还是挺好用的？但是，由于图床挂掉，此文内容基本已废，将就看倒还可以。</p>
<a id="more"></a>
<p><img src="http://picb.weearc.top/images/2019/02/02/0bd162d9f2d3572c94bb080b8b13632763d0c388.jpg" alt="0bd162d9f2d3572c94bb080b8b13632763d0c388.jpg"></p>
<p>如图所见！锵锵锵，自建了一个新图床。至于为什么这么做，主要还是因为腾讯云更改了收费及免费的条款，并且已有的vps不好好利用的话实在是资源浪费，所以决定自己建立一个算了。</p>
<h2 id="VPS准备"><a href="#VPS准备" class="headerlink" title="VPS准备"></a>VPS准备</h2><p>因为是要用作图库的VPS所以建议还是选择一个靠谱一些的服务商比较好，国内阿里云以及腾讯云都可以（毕竟学生优惠www）。如果可以的话建议选择storge instance之类的类型，特点是价格便宜并且硬盘空间很大。构架建议选择KVM，极度不推荐openVZ的机器。系统选择任意linux发行版都可以，既然都有能力弄主机，就别说连基础linux的操作都不会。</p>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>由于我们要使用的图床程序是<a href="https://chevereto.com/" target="_blank" rel="noopener">chevereto</a> ,按照<a href="https://chevereto.com/docs/requirements" target="_blank" rel="noopener">官方文档</a>的说明，使用LNMP是比较合适的。<a href="http://picb.weearc.top/image/Wah" target="_blank" rel="noopener"><img src="http://picb.weearc.top/images/2019/02/03/261b794faf0d9cee7a8b90c41d544ab7.png" alt="261b794faf0d9cee7a8b90c41d544ab7.png"></a></p>
<p>这里选择<a href="https://lnmp.org/download.html" target="_blank" rel="noopener">LNMP一键包</a>（其实也是我懒了）。LNMP那么容易配置就不细讲述了。主要需要注意的是<a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">phpMyAdmin</a>的一些坑。</p>
<p><a href="http://picb.weearc.top/image/gdo" target="_blank" rel="noopener"><img src="http://picb.weearc.top/images/2019/02/03/e865198482f4b22ae431bdc369ab3e79.md.png" alt="e865198482f4b22ae431bdc369ab3e79.md.png"></a></p>
<p>这个地方如果未选择相匹配的MySQL版本会导致无法远程连接到phpMyAdmin。因此请在选择版本时多加注意。<strong><em>另外安装完成时记得把/home/wwwroot/default/下的几个文件备份并清除。</em></strong></p>
<h2 id="安装chevereto"><a href="#安装chevereto" class="headerlink" title="安装chevereto"></a>安装chevereto</h2><p>这里我使用的是脚本安装方式，仍然是将脚本放到网站根目录即可。</p>
<blockquote>
<p>注意：记得检查脚本的所有者以及权限</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -lash </span><br><span class="line">chmod a+x index.php</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果正常的话你会得到index.php的所有者和组为<strong>www</strong>，权限为775或者777。</p>
</blockquote>
<p>所有步骤跟着向导就好，没有需要特殊注意的地方。</p>
<p>但是有一个地方需要注意以下，在新建mysql账户时请选择本机域（大概是这个，是localhost）这个地方以前在部署owncloud时就踩过，到现在才弄得比较明白。至此站点部署完毕。</p>
]]></content>
      <categories>
        <category>博客配套</category>
      </categories>
      <tags>
        <tag>archlinux</tag>
      </tags>
  </entry>
  <entry>
    <title>生活好了，但是我想回到以前</title>
    <url>/posts/21989.html</url>
    <content><![CDATA[<h4 id="睡前聊一聊"><a href="#睡前聊一聊" class="headerlink" title="睡前聊一聊"></a>睡前聊一聊</h4><p>上次像这样写文章大概是很久以前的事情了，那我为何突然想起来这些？用我自己的话来讲，现在我才一点点感觉到，越是接触新技术、新产品，愈是变得更孤独。当然了，学技术可以当做一个例外，但是，如果可以不与这些新玩意儿接触，从某种角度上讲确实不想接触。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么我屏蔽了知乎？</title>
    <url>/posts/12984.html</url>
    <content><![CDATA[<p>别的我不知道反正我是先在路由器里执行了如下命令……<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">iptables</span> <span class="selector-tag">-I</span> <span class="selector-tag">FORWARD</span> <span class="selector-tag">-d</span> <span class="selector-tag">www</span><span class="selector-class">.zhihu</span><span class="selector-class">.com</span> <span class="selector-tag">-J</span> <span class="selector-tag">DROP</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>说起来，今年好像是知乎成立的八周年的样子。那么我也姑且算是入坑知乎六年了。为什么我会选择退坑知乎，我想就算我不说，也会有好多人有相同感触——知乎已经俨然成为了培养故事创作能力的地方。</p>
<p>在这里，你可以重新塑造你自己的身份，你的经历。你也可以诱导其他人，避开矛头。这里已经是故事的创作中心、网络写手和键盘侠的集聚地，也是好多人仍然从中获取力量的地方。极其诡异，但是又极其有诱惑力。</p>
<h1 id="为什么当年的我选择入坑知乎"><a href="#为什么当年的我选择入坑知乎" class="headerlink" title="为什么当年的我选择入坑知乎"></a>为什么当年的我选择入坑知乎</h1><p>说到底，是因为百度知道实在是太不靠谱。同期的知乎，虽然内容很少但是答案含金量很高。草根大佬也能各显神通。但是，也存在一个问题，那就是因为圈子不大，所以好多问题，合法的、非法的都可以被讨论。正确的、错误的，无论怎样。那里的人们和我所听到的互联网才在中国开始流行的那几年的人儿一样，都有着别致的气息和绿林侠样的思维模式。</p>
<p>但是问题终究还是存在的。一个圈子会变大，会做大，是因为内容和氛围得到了其他人的认可。但是做大了。就必然需要更多的资金，更种方面的支持。知乎选择融资，与其本身而言，是有利的。知识变现，也成为那个时期的风潮。</p>
<h1 id="但是，从那个时候我开始迟疑"><a href="#但是，从那个时候我开始迟疑" class="headerlink" title="但是，从那个时候我开始迟疑"></a>但是，从那个时候我开始迟疑</h1><p>知乎用户爆发式增长的那几年，正好是我比较忙的几年，毕竟是全宿制高中的学生，周末放学回家也满脑子都是事情。<br>但是，我，那几年确实是真正学到了很多东西。</p>
<p>全宿制带来的好处是在学校可以隔离一切，专心于自己想做的事情。正好那段时间也是我接触不到智能手机的几年，也是我深入玩儿Linux的几年。那段时间，能上网的功能机成为了我获取知识的主要渠道。不知道现在还有多少人记得那个红红的圆圈，浏览器多标签的开创者： Opera。要知道Ｊava的功能机也是可以使用３G网络的。那段时间真的是获取到了非常多的内容，知乎上每一个有关Linux的话题，问题，我都会关注。每个人的每一个字每一张图，直到现在我都记得。</p>
<p>混开源圈的终究没有那么多纯技术人员。每个人多少又会有书生气。而那段时间所看到的，无论是有关开闭源的讨论，发行版的讨论（Archlinux &amp; Gentoo,说多了怕引起圣战），甚至乎编辑器的讨论（Emacs &amp; Vim）都有着很是浓厚的技术色彩和宗教色彩。引人入胜。</p>
<p>但是也正是从那个时期我开始迟疑。我为什么要继续浏览着知乎的内容。不知道是从哪个时间点，对于技术的讨论嫣然成为了技术圈外的人装逼的资本。</p>
<h1 id="沉下心来冷静思考"><a href="#沉下心来冷静思考" class="headerlink" title="沉下心来冷静思考"></a>沉下心来冷静思考</h1><p>有的时候包括操作系统在内不使用常规工具，其实说实话有那么一点点是为了能有装逼的资本。但是越来越深入才发现，所谓技术不也是实现一个个梦想么？我做不了很多的技术工作，那能够做的是什么？我所想寻找的。终究是一个容身之所，对等的，用自己的劳动来换取包容感。就算是翻译，我做的也只有这些，认同感其实并不是别人给予的。都是自我的心理安慰。每个字词的翻译，每个标点的调整，每次的最初根本不背父母理解的无偿志愿工作，说到底是为了寻求精神上的满足，为了缓解在学校也好在生活上也罢的心里压力。</p>
<p>我们的大学英语结课论文我们选择进行调查的是大学生志愿服务的心里、动机和渠道。不约而同的，回到了讨论当初困扰了我好久的心理状态上。后来，才发现其实志愿活动都是“利己性的”，无论愿不愿意承认，这个世界上从来都没有无私奉献。</p>
<h2 id="但是压倒骆驼的稻草是什么"><a href="#但是压倒骆驼的稻草是什么" class="headerlink" title="但是压倒骆驼的稻草是什么"></a>但是压倒骆驼的稻草是什么</h2><p>上面说的，最多是我单方面认为需要像知乎上的大佬们那样，为了更强的自己而向上前进。我并不讨厌知乎。但是最终却被它激怒了。</p>
<p>那么究竟是什么能够让我如此愤怒？我想，可能原因其实并不在于知乎，根本是在于网络的使用者的无界限。</p>
<p>记得假期的时候有人在Biibili上进行引战，其直接后果是“国家队”的禁播。但这些并不是事情的全部，有人在知乎上利用伪技术骗取他人信任，从而成功地将所有关注点集中到一个无辜的消防员身上。其问题在于，那个假的消息之所以会为人信服，之所以会引爆所有人的情绪，关键在于知乎的匿名功能。</p>
<p>网络的匿名性本来提供给了使用者保护自己的便利，但是利用这些胡作非为确实已经导致了一系列的问题：社会、道德、伦理，凡是有人类出现的地方，只要匿名性存在，人们就会自相残杀。说到底人类的本质根本不是善，而是极度罪恶。人类，是恶的代名词。</p>
<p>不过话说回来，在这个世界上本来就是弱肉强食。弱者只有被吃掉的份，没有任何话语权。而为了成为强者，所有手段都是被默许的。变的是成为强者的方式和历代强者们，不变的永远是弱者会被宰割的事实以及成为强者的方式。</p>
<blockquote>
<p><b>看到这里，你也许会认为我是个极度偏激的人，同时也是个有神论者。</b></p>
</blockquote>
<p>我承认，我将会是你见过的很偏激的那些人之一，但是永远不是最和善的那个。<br>如果说很久以前由于另一些原因我就开始嫌弃知乎。那么点燃引线的是国家队事件。而引爆我的则是之前无意中看到的一篇专栏。链接当然是没找到，但是，我仍然清楚地记得：那是篇博人眼球为目的的，狂妄的，过分偏激的文章。评论区更是聚集了我所见过的一切没有信仰的话语和肮脏的词汇、还有更多的自以为是的声音。</p>
<blockquote>
<p>　<b>你问有没有反对的观点？我看到是有的，但是占据绝对少数而且被很肮脏的话辱骂着。</b></p>
</blockquote>
<p>这里不得不提一点，我是有神论者。但是我同样信仰科学。</p>
<blockquote>
<p><b>Je désapprouve ce que vous dites, mais je défendrai jusqu’à la mort votre droit de le dire.—François-Marie Arouet</b><br><br><b>我不赞成你说的每一个字，但是你说话的权力我誓死捍卫。—伏尔泰</b></p>
</blockquote>
<p>我认为这种大无畏的精神也许也可以用到现在的事情上。但是，前提是双方都能够拥有这样的权力。当其中一方想要以某种方式方式夺取另一方这种权力时，那么我可以认为在对等的前提下，这一方也不需要这种权利。</p>
<p>因此我可以认为，在匿名性的保护下大放厥词的人也是不需要我们尊重的。这种人本该让他自生自灭才好，问题在于害虫多了以后，已经到了无法会被净化掉的程度。那么，他所贬低的宗教，真的有那么可怕吗？在我看来没有。只有没有信仰的人才会惧怕宗教。前面我也说过我是有神论者，我相信所有的行为终究会被上天所看到。</p>
<p>然后我们来说说那个人。他的本意也许是好的，也只是为了清除掉借宗教名义敛财的人。但是他把矛头指向宗教却是不能令人赞同的。正如他自己所说的自己应该信仰科学。那么，“所谓科学”难道没有告诉你要对一切未知事物保持敬意吗？难道没有说过任何事物都具有两面性吗？不存在敬意的人，同样也是不被允许尊重的。确实，当宗教的行为比较极端是会引发一系列社会问题。但是宗教在现代，我想更多的是填补了人们由于那段时间内心出现的信仰空隙。</p>
<p>当一个一个人的心中没有任何信仰的时候，他不会对任何事物抱有敬意。他可以做任何事，他甚至可以诋毁其他一切思想。</p>
<h2 id="当代国人所需要的就是信仰"><a href="#当代国人所需要的就是信仰" class="headerlink" title="当代国人所需要的就是信仰"></a>当代国人所需要的就是信仰</h2><p>不是其他东西，当代国人最缺乏的就是信仰。信仰的力量有时候可以约束人的行为。而没有信仰，就可以胡作非为—–反正是在法律的空白区。对其他人造成的伤害都可以忽略不计——只因为那些话语是“合法言论”。</p>
<p>法律是用来管教人的，不可以用来约束人。</p>
<h1 id="所以，我选择离开知乎"><a href="#所以，我选择离开知乎" class="headerlink" title="所以，我选择离开知乎"></a>所以，我选择离开知乎</h1><p>这也许是个极其无奈的选择。我喜欢从前知乎的环境，每个人言论自由，但是会自觉避开敏感话题。所有人智商上线，且言之有物。</p>
<p>而不是现在，网络低龄化严重，经历可以编造，所有东西不再可信。那过去的时代也许不会再一次来临了。过度的低龄化势必会起到与发展相反的效果。小圈子所无法带来的利益是更大的圈子可以带来的。蛋糕做大，单也只不过是充入了更多的空气而已。果壳如此、36Kr如此、豆瓣如此、人人网如此，而如今，知乎也是如此。什么情怀不情怀的。只要一定程度上它自身能够盈利，那其他的就什么都不是。知乎在衰落，我们也是看得到的。有更多商业资本在运作的团队，下一个开始衰落的是谁呢？</p>
<p>既然事已至此，那么我选择主动离开。无论是以前在那里有多么的欢乐、得到了多少感动、又重新振奋了多少次。过去是回不去的。那么，知乎，再见了。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title>youtuber木下ゆうか篇（一）</title>
    <url>/posts/30769.html</url>
    <content><![CDATA[<p>又一篇由于图床挂掉丧失乐趣的文章，但是不嫌弃的话，还是看看呗？<br><a id="more"></a><br>这张图可是做了很久，但是想拿去的话help yourself!（反正我也没有备份了）</p>
<p>今天来谈一谈木下佑香，还是和往常一样分为两部分好了，我们先谈一些美好的，然后再把美好的东西一点点撕开来看，这才有趣，对吗。</p>
<h1 id="youtuber木下ゆうか—are-you-still-youself"><a href="#youtuber木下ゆうか—are-you-still-youself" class="headerlink" title="youtuber木下ゆうか—are you still youself?"></a>youtuber木下ゆうか—are you still youself?</h1><h2 id="都市人复杂生活中的开心果"><a href="#都市人复杂生活中的开心果" class="headerlink" title="都市人复杂生活中的开心果"></a>都市人复杂生活中的开心果</h2><p>个人接触木下佑香比较晚，大概是2017年暑假那会儿。木下的视频给人最大的感觉就是欢快，一点不做作的小女生不但厨艺可以连胃口都不小简直是直戳我的萌点。声音可爱，长相好看而且和娇小体型形成强烈反差的进食量确实是让人欲罢不能。在繁重的都市人生活中。突然有一天跳出个这种小女生，那个人能狠下心来讨厌呢？况且平时生活的艰辛大家都懂，突然看到这个可以心无旁骛地吃东西，这个时候，这种欢乐和放松使人能够忘却很多烦恼。一边看她吐槽着食物，一边大口大口地咀嚼。光光是吃东西就能让人感到幸福，真的是太好了呢！</p>
<p>印象最深的是，每天就算非常累了，也会在床上一脸傻笑地看她的更新，看她做东西吃东西仿佛自己有了女儿并且在幸福地咀嚼着自己亲手做的事物一样。论食物种类，除却作为广告的那些，都是很基本的和食。也有很多韩餐和中华料理，当然还有很可怕的奶酪地狱就是了。不过其他的都是小事不是么，最重要的是，她是那种笑靥如花的人。只要看着她就好像自己很幸福了一样。明明实际上年龄并不算小，但是看起来确实很年轻，这可能就是所谓的童心保存得很完整吧！</p>
<h2 id="黑历史知晓不得已但是令人自我厌烦"><a href="#黑历史知晓不得已但是令人自我厌烦" class="headerlink" title="黑历史知晓不得已但是令人自我厌烦"></a>黑历史知晓不得已但是令人自我厌烦</h2><p>我，真的非常喜欢木下佑香。在镜头前的她没有一丝做作，没有那种让我看到第一眼就反感的不得了的感觉，甚至可以说是我最喜欢的Youtuber。</p>
<p>然后现在出现了一个问题。由“爱好和想出名声”的想法，组件变成了为了“保持着出名而不得不继续”的样子之时，整个就变味了。商业性质倒是没有办法，毕竟不是谁都可以无时无刻用爱发电。但是一旦被捅出来有催吐行为就等于自杀无疑。</p>
<p>出于人类本能都对这种极其伤害身体的行为表示拒绝，但是此时也会使人深陷矛盾：如果你进行观看就从某种角度上是认同了她的催吐行为，使得她会“变本加厉”；但若是不进行观看的话等于她人气的下降，这样可能是无形中会加重她的催吐行为，这样的情况下不但没有起到正面效果，反而会因为她的行为与自己的自我厌恶形成恶性循环：在看到木下的脸时不自觉的会感觉到很惭愧但又想观看，因此，倒不如最后不再看了。</p>
<h1 id="you-are-still-yourself-but-not-the-former-one"><a href="#you-are-still-yourself-but-not-the-former-one" class="headerlink" title="you are still yourself, but not the former one"></a>you are still yourself, but not the former one</h1>]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>木下ゆうか</tag>
        <tag>木下佑香</tag>
      </tags>
  </entry>
  <entry>
    <title>結城友奈は勇者である</title>
    <url>/posts/11193.html</url>
    <content><![CDATA[<h3 id="勇者部五箇条"><a href="#勇者部五箇条" class="headerlink" title="勇者部五箇条"></a><s>勇者部五箇条</s></h3><h3 id="勇者部六箇条"><a href="#勇者部六箇条" class="headerlink" title="勇者部六箇条"></a>勇者部六箇条</h3><blockquote>
<p></p><p style="color:rgb(120, 120, 120)">一、挨拶はきちんと<br><br>二、なるべく谛めない<br><br>三、よく寝て、よく食べる<br><br>四、悩んだら相谈<br><br>五、なせば大抵なんとかなる<br></p><a id="more"></a>.  .  .  .  .  .<br><p></p>
</blockquote>
<p></p><p style="color:rgb(120, 120, 120)">六、人を助けるが、自分も幸せになる。<br></p>
<p><h>つづく<h></h></h></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>漫评</tag>
        <tag>结城友奈是勇者</tag>
        <tag>魔法少女</tag>
        <tag>泪腺崩坏</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro下生存报告</title>
    <url>/posts/35108.html</url>
    <content><![CDATA[<p>今天写这个不为别的，就为了现在在linux内核操作系统下生存暂时成功而进行记录。</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>说实话，现在用linux也快６年了，也算是对各个系统的特性有所熟悉了。但是，根本称不上是所谓大佬什么的。毕竟，虽然也能写一些脚本啥的，也算是会编程啥的，但是和一下子会好几门语言的其他人相比，我还是太弱了。很喜欢开源社区的氛围，有时候却不知道要做些什么好，没法维护一些项目就<a id="more"></a>只好做做本地化工作了。传送门：<a href="http://l10n.gnome.org/teams/" target="_blank" rel="noopener">gnome翻译组</a><br>其实，现在的开源社区早已不是当时的开源社区了。我们在进入的时候，多少还有想着去回馈一下社区的开发者。而如今，伸手党遍地的现在，开源的各个项目早已是费力不讨好。氛围不在，过去的人也一个个离开，就连一些信仰纯正的人都不见了踪影。莫不如自己在博客上码码字，也算是对自己成长的回忆及立一个flag(笑)。总而言之，看看自己还能呆多久了。<img src="http://p7qoj2mv6.bkt.clouddn.com/image/manjaro1.png" alt="manjaro"><br>上面其实也是蛮早的截图了，后面由于一些原因更换为了KDE，但是KDE５的表现却着实不能让我这个以KDE４入门的人高兴起来，也许是我要求太高了也说不定．．．<br>于是决定做一些简单的优化，毕竟电脑配置不算很好，但是能这么顺利地跑起来我就已经感激不尽了。具体优化策略和设置步骤放在这里：<a href="https://weearc.github.io/2018/04/25/manjaro-linux-kde-edition%E8%B0%83%E6%95%99%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">manjaro linux kde edition调教记录</a>效果图如下:<br><img src="http://p7qoj2mv6.bkt.clouddn.com/image/manjaro/2.png" alt="manjaro"></p>
<h3 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h3><p>其实，如果对于某些工具没有特殊的执着，使用哪个系统来工作都无可厚非。只不过是操作习惯有所不同。说实话，有人也曾经说过使用LINUX是一种自虐。老实说我无法反驳，但是，也用了这么长时间。现在这些配置文件就像是老朋友一样，也是舍不得再离开。
　</p>
<blockquote>
<p>“那我为什么又说无法反驳？”</p>
</blockquote>
<p>我个人觉得，linux虽然在服务器市场是一方霸主，虽然在个人桌面领域也逐渐受到重视。</p>
<blockquote>
<p>但是使用体验仍然不够好。</p>
</blockquote>
<p>就这一点，使得大量的小白用户最后又回到了Windows的怀抱。就算它蓝屏，就算它出了问题有多么难以修复，这么多年在个人桌面领域的投入：人力，财力，外加大量的基础设施建设，Office套件…使得微软和Windows不得不令人佩服。这点不得不承认，现有开源桌面环境是无法与之匹敌的。</p>
<blockquote>
<p>“你这家伙是闭源商业狗”</p>
</blockquote>
<p>如果你真的这么认为，那实在是太对不起了。我不否认我对于开源的热爱。这种人人都可以参与并改进的方式与我的生存理念是相合的。但是，你也无法否认，大量的闭源软件比如微软的办公套件，实际使用效率和稳定性明显高过现有开源解决方案。但这不能说明我有任何方向的倾向，我都会使用，支持，如果体验良好，我也会做推广。只不过与所谓“忠犬”不同，我只用我喜欢用的。毕竟，开源的LIBRE口号可不是白喊的，“人人都有选择的权利”。但是还有一点：少骂人了，你敢保证你使用的东西从硬件到软件到设计都是完全开源的？</p>
<blockquote>
<p>那为什么现在我又不愿意离开？</p>
</blockquote>
<p>我觉得原因很好解释：linux的自定义性可不是盖的。尤其是LFS系的发行版,包括Archlinux,Gentoo Linux等（注意了,LFS本身并不是发行版）。良好的文档和手册使得在熟悉了以后使用很是便利，外加桌面环境带来的良好体验，以及作为国内用户最重要的本地化软件的上线，都使得现在在一部分硬件资源吃紧的电脑上，linux的表现要明显好过Windows，不能说是吊打，但是日常使用方面还是体验不可同日而语。<br>老实说，像我这种工科类的学生，平时也会大量使用专业软件，包括SolidWorks,AutoCAD等纯种闭源商业软件。但是这并不影响我花费更多的时间在linux下。双系统只是为了专业软件，平时另一个系统也只是放在那里，打入冷宫。</p>
<h3 id="开源与闭源，我的个人经历"><a href="#开源与闭源，我的个人经历" class="headerlink" title="开源与闭源，我的个人经历"></a>开源与闭源，我的个人经历</h3><h4 id="开源与开源组织；闭源与商业化组织"><a href="#开源与开源组织；闭源与商业化组织" class="headerlink" title="开源与开源组织；闭源与商业化组织"></a>开源与开源组织；闭源与商业化组织</h4><h4 id="开源的好处，弊端；为什么仍有人选择开源作品"><a href="#开源的好处，弊端；为什么仍有人选择开源作品" class="headerlink" title="开源的好处，弊端；为什么仍有人选择开源作品"></a>开源的好处，弊端；为什么仍有人选择开源作品</h4><h3 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h3>]]></content>
      <categories>
        <category>待填坑</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>manjaro</tag>
        <tag>生存记录</tag>
      </tags>
  </entry>
</search>
