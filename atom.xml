<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>weearc的个人博客</title>
  
  <subtitle>来一起探索吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.weearc.top/"/>
  <updated>2019-11-26T12:45:29.787Z</updated>
  <id>https://blog.weearc.top/</id>
  
  <author>
    <name>weearc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://blog.weearc.top/posts/0.html"/>
    <id>https://blog.weearc.top/posts/0.html</id>
    <published>2019-11-26T12:22:54.000Z</published>
    <updated>2019-11-26T12:45:29.787Z</updated>
    
    <content type="html"><![CDATA[<p>盼星星盼月亮终于拿到了心心念念的固态硬盘，终于能够有畅快淋漓的体验了。</p><a id="more"></a><p>既然固态硬盘体验这么好，那为啥以前非要买那么写机械？因为我是仓鼠症患者，买的硬盘全部拿去存电影了…….</p><p>那到固态以后其实就没什么好说的，之前光驱位以及主硬盘位都有机械硬盘，光驱位上的盘作为纯粹的数据盘挂载在 Arch 下面。所以就算单独拿下来去给 NAS 挂着也没什么大问题。那么最终就还是主硬盘位的机械硬盘去了光驱位，新买的固态上了主硬盘位。</p><p>其实在迁移前我很纠结要不要重装windows，本意上是不想重新安装的，一大堆专业软件和自己配置的环境重新弄起来费时费力而且真的要命。那么就还是决定使用软件做系统迁移。先把最麻烦的windows的部分解决。Linux 反而是一向最容易迁移的了。</p><h2 id="迁移windows10"><a href="#迁移windows10" class="headerlink" title="迁移windows10"></a>迁移windows10</h2><p>下载 aomei 无损分区助手PE版本，配合wepe做好系统迁移，这个时候会一并把esp分区迁移过来，所以 linux 下就不需要重建了。有的电脑可能会遇到说是内存不足，那就老老实实重装吧。</p><h2 id="迁移ArchLinux"><a href="#迁移ArchLinux" class="headerlink" title="迁移ArchLinux"></a>迁移ArchLinux</h2><p>在windows下面如果没有了 Aomei这样的工具，那么迁移起来说实在说的是极其痛苦的，尤其现在ghost还不能用。Arch就要轻松很多。只需要用到 <code>rsync</code> 即可。</p><p>在旧的Arch下面给新硬盘剩余空间分好区，然后直接把新的根分区挂载在 <code>/mnt</code> 其余比如 <code>/home</code> <code>/boo/efi</code> 也依次挂载好。终端中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -aAXv /* /mnt/. --exclude=&#123;/dev/*,/proc/*,/sys/*,/tmp/*,/var/tmp/*,/run/*,/mnt/*,/home/*,/media/*,/lost+found,/boot/*&#125;</span><br></pre></td></tr></table></figure><p>命令参数详情请参阅 <code>rsync</code> 的手册部分。然后排除掉 “运行态”的部分，对所有目录进行重建，文件按照归档进行迁移。执行以后大功告成一半。</p><p>由于我需要将原来的根分区删掉分给 home , 因此进入 Livecd 对旧分区进行删除操作，然后将分区移动到空间头部。完成后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><p>参照当初安装 Arch 的步骤进行，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot/efi/ --recheck</span><br></pre></td></tr></table></figure><p>重新安装grub。并配置grub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>在此之前记得删除掉旧的esp分区。至此基本大功告成。最后记得检查一下 <code>/etc/fstab</code> 以免启动时出现问题。</p><p>耗时4个小时两个系统迁移完毕，windows用了三个多小时，Arch用了40分钟不到。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;盼星星盼月亮终于拿到了心心念念的固态硬盘，终于能够有畅快淋漓的体验了。&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="系统迁移" scheme="https://blog.weearc.top/tags/%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>fcitx5尝鲜(另付fcitx5输入法皮肤摸索)</title>
    <link href="https://blog.weearc.top/posts/14466.html"/>
    <id>https://blog.weearc.top/posts/14466.html</id>
    <published>2019-10-25T13:19:33.000Z</published>
    <updated>2019-11-26T12:21:43.685Z</updated>
    
    <content type="html"><![CDATA[<p>原本搜狗输入法确实是真香的，但是架不住它总不更新问题一大堆。</p><a id="more"></a><p>作为非英语作为母语的计算机使用者，尤其是 GNU/Linux 用户，输入法确实是非常大的一个硬伤。如果说 QQ 微信 网易云 还可以勉强要么通过 wine 的方式要么通过虚拟机 就多多少少都还能解决，输入法如果没有原生可用的那就非常痛苦了。因此国内最厉害的中文输入法 搜狗输入法 在推出 Linux 版本的时候为什么那么多人感到异常兴奋也就多多少少能够理解。你用或者不用，都无法否认搜狗在输入法上做的贡献之大。</p><p>但是距离上一次更新也过去许久，依旧构建于 QT4 的搜狗拼音已经渐渐暴露出很多问题，并且看来短时间内没法迁移到 QT5。并且搜狗造的轮子 <code>sogou-qimpanel</code> 还会和 fcitx 的 <code>kimpanel</code> 产生冲突。但是说实在的如果不是搜狗的词库异常强大咱也就不会就算一直被恶心也要坚持使用下去了。</p><p>不过，其实很早我们可能就有了另外一个非常棒的选择，也就是 fcitx5 。</p><p>有关 fcitx5 的详细配置过程可以参考 Arch Linux Wiki ， 网上也有诸多 Archer 来写，就不加赘述。也可以参考<a href="https://github.com/weearc/fcitx5-skin-simple-blue" target="_blank" rel="noopener">我的这个仓库</a>之中的 readme 。</p><p>今天主要是讲讲看、研究一下 fcitx 的皮肤绘制。</p><p>fcitx5 的皮肤最基础的部分由以下几个文件构成：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- panel.png</span></span><br><span class="line">  |- hightlight.png</span><br><span class="line">  <span class="comment">-- theme.conf</span></span><br></pre></td></tr></table></figure><p>正如文件命名，panel 指输入法候选词位置的样式， highlight 为候选词高亮背景。简单的说如果我们拿到一个皮肤的样版，对面板和高亮进行更改的话就能够调整输入法皮肤样式。</p><p>（剩下的内容有时间再详细查查相关内容补全）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原本搜狗输入法确实是真香的，但是架不住它总不更新问题一大堆。&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
      <category term="输入法" scheme="https://blog.weearc.top/categories/archlinux/%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="fcitx" scheme="https://blog.weearc.top/tags/fcitx/"/>
    
      <category term="fcitx5" scheme="https://blog.weearc.top/tags/fcitx5/"/>
    
  </entry>
  
  <entry>
    <title>杂谈</title>
    <link href="https://blog.weearc.top/posts/12326.html"/>
    <id>https://blog.weearc.top/posts/12326.html</id>
    <published>2019-08-27T13:20:57.000Z</published>
    <updated>2019-08-27T21:44:42.453Z</updated>
    
    <content type="html"><![CDATA[<p>人大多数时候选择去做一件事，也许并不是为了获得什么，而是单纯的害怕空虚。</p><a id="more"></a><p>近两年的个人状态可以说是非常奇怪了。总结下来也无非是开头那句话。正因为害怕空虚所以去做各种事情，将自己的时间填满。不过，就算空着的时间都填满了，难道就会感到满足了吗？我不以为意。反而感觉更加的空虚。说白了，这种因为空虚所以选择让自己看起来很忙的行为无异于饮鸩止渴，逞一时之快后患无穷。究其原因还是因为少了方向感。</p><p>高考前之所以能稳住拼尽全力，也无非是因为只需要考虑怎么答题就对了，脑子里什么都不需要想。拼命学了三年需要有一个突破口，一个来发泄的点。然后进入了大学，不再如同高中，可以考虑可以尝试的东西极大丰富，本来就患有选择困难的我人生第一次感到如此迷茫。专业不是我喜欢的、但是成绩又不是最好的、喜欢的东西在侵占我的时间、但是不喜欢的东西却本需要大把时间。越是想逃离就越是逃不掉，最后深陷其中。坦然接受现状虽然是最佳选择，不过，我又浪费掉了一年。确实可以有很多，但是似乎在前途面前都是苍白无力。每次回家看到父母日渐衰老，家事变化也不由得暗自落泪。</p><p>家人倒也不像是其他人说的那样对我寄予厚望，到时自己越是给说一般般平平常常就可以越是感到压力倍增。正因为看到了家人的辛苦之处，才想变得更强将来可以保护家人；越是想变得更强越是对现状不满，对自己不满；越是对自己不满就越是急切的想找到目标。然而我没有目标。因此愈发感到无比空虚。因此就尝试做很多事情，又因为本身学习能力并不差所以就学会很多事情，以此可以更好地消磨时间。</p><p>我急切的需要摆脱这种现状，那么最好的办法我希望不再是定下长远的目标，而是短时间内先从眼前的事情做好。以前到时很瞧不起做计划之类的，总觉得“到时候总会有办法”，不过现在看前人的经验真的是正确无比，所谓摸着石头过河也是需要摸到下一个石头的位置，更长远的目标就是“对岸”。重新来过的这一年，我仍不希望自己空虚，那么就尝试换成另外一种方法填满自己算了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人大多数时候选择去做一件事，也许并不是为了获得什么，而是单纯的害怕空虚。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://blog.weearc.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="杂记" scheme="https://blog.weearc.top/categories/%E9%9A%8F%E7%AC%94/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="杂记" scheme="https://blog.weearc.top/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="随笔" scheme="https://blog.weearc.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题模版改造记录</title>
    <link href="https://blog.weearc.top/posts/31380.html"/>
    <id>https://blog.weearc.top/posts/31380.html</id>
    <published>2019-08-05T15:37:27.000Z</published>
    <updated>2019-08-06T23:48:13.973Z</updated>
    
    <content type="html"><![CDATA[<p>有时候就是心血来潮才想搞一些好玩的，假期一旦懒下来人就待完了。</p><a id="more"></a><p>上一篇: <a href="https://blog.weearc.top/posts/6009.html">hexo主题迁移and折腾记</a></p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>之前一直是抱着小小改造一下将就用就行了的心态来改造博客主题，直到又一个朋友也开始建立博客。于是一直懒着不愿意写的友链以及关于的独立页面也不得不提上日程，就连之前想加入的 clipboard.js 这次也想一股气做好。说起来容易，实际开始读 layout 部分代码才发现自己并不是很懂整个 pug 模版的渲染流程以及构架。整个博文是对于改造过程的记录，如果嫌烦可以跳过我思考的那一部分。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>最初搜索一番，仍然发现大多数就是简单的建立一个友链的 page 然后直接 md 堆上去就完事了。当然我之前也这么做过。但是实际效果并不尽如人意。于是不得不进行主题拆解。</p><p>然后花费了相当长一段时间发现并没有搞懂主题的布局…Orz。这就产生了一个问题，在寻找了非常多 HEXO 主题开发相关的博文时候，发现不管是用脚手架来搭建还是怎样，一个主题一定是先有布局再往里面填肉，虽然日常自己写点东西是这个思想却没想到用这个思想来解构，有点呆。</p><h1 id="解构主题"><a href="#解构主题" class="headerlink" title="解构主题"></a>解构主题</h1><p>所以，整体布局确实如下图，从代码中也多少能看出点倪端：</p><p><img src="https://blog-1256749229.cos.eu-frankfurt.myqcloud.com/2019.08.06/base.png" alt></p><p>那么看下整体文件的解构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">themes/maupassant/layout/</span><br><span class="line">----------------------------------</span><br><span class="line">├── archive.pug</span><br><span class="line">├── base.pug</span><br><span class="line">├── index.pug</span><br><span class="line">├── page.pug</span><br><span class="line">├── post.pug</span><br><span class="line">├── single-column.pug</span><br><span class="line">├── timeline.pug</span><br><span class="line">├── _partial</span><br><span class="line">     ├── after_footer.pug</span><br><span class="line">     ├── comments.pug</span><br><span class="line">     ├── footer.pug</span><br><span class="line">     ├── head.pug</span><br><span class="line">     ├── helpers.pug</span><br><span class="line">     ├── mathjax2.pug</span><br><span class="line">     ├── mathjax.pug</span><br><span class="line">     ├── paginator.pug</span><br><span class="line">     ├── post_nav.pug</span><br><span class="line">     ├── tag.pug</span><br><span class="line">     ├── totop.pug</span><br><span class="line">     └── wordcount.pug</span><br><span class="line">|── _widget</span><br><span class="line">    ├── category.pug</span><br><span class="line">    ├── links.pug</span><br><span class="line">    ├── recent_comments.pug</span><br><span class="line">    ├── recent_posts.pug</span><br><span class="line">    ├── search.pug</span><br><span class="line">    ├── tag.pug</span><br><span class="line">    └── toc.pug</span><br></pre></td></tr></table></figure><p>如果是仔细阅读过主题配置文件，就会发现其中下面列出的这一部分就属于我们说的“单独的页面”：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── index.pug</span><br><span class="line">├── timeline.pug</span><br><span class="line">├── post.pug</span><br><span class="line">├── archive.pug</span><br></pre></td></tr></table></figure><p>这些是主题中最最基础的几个独立页面：文章、时间线、主页、文章归档。</p><p>其中都会有那么句：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">extends base</span><br><span class="line">...</span><br><span class="line">include _partial/BALABALA.pug</span><br></pre></td></tr></table></figure><p>如果是对编程相对熟悉的同学可能一下子就发现了这不是典型的引入么，前面是以 <code>base.pug</code> 作为“母版”，后面在上面加东西。前面尝试着 copy 过别人的代码尝试添加一个侧边栏的 TOC（以失败告终），但是并没有好好阅读代码，所以这次吃了大苦头。所以，就连其他全部页面都是在 base 基础上扩展来的，因此提供了一个思路：要想添加自己的独立页面，就需要仿照其他的从 base 为基础进行扩展。</p><p>那么我们来看一下，比如这个 archive:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">archive.pug</span><br><span class="line">-------------------</span><br><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">  if page.category</span><br><span class="line">     title= page.category + ' | ' + config.title</span><br><span class="line">  if page.tag</span><br><span class="line">     title= page.tag + ' | ' + config.title</span><br><span class="line">  if page.archive</span><br><span class="line">     title= __('archive') + ' | ' + config.title</span><br><span class="line">block content</span><br><span class="line">  if page.category || page.tag</span><br><span class="line">      h1.label-title=  __('reading_label', page.category || page.tag)</span><br><span class="line">  .post</span><br><span class="line">    .post-archive</span><br><span class="line">        //Use lodash to classify posts. See https://lodash.com/docs#groupBy</span><br><span class="line">        each posts, year in _.groupBy(page.posts.toArray(), function(p)&#123;return -p.date.format('YYYY')&#125;)</span><br><span class="line">          h2= -year</span><br><span class="line">          ul.listing</span><br><span class="line">            for post in posts</span><br><span class="line">              li</span><br><span class="line">                span.date= post.date.format(config.date_format)</span><br><span class="line">                a(href=url_for(post.path), title=post.title)</span><br><span class="line">                  +title(post)</span><br><span class="line">  include _partial/paginator.pug</span><br></pre></td></tr></table></figure><p>可以发现整个结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">..........</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">........</span><br></pre></td></tr></table></figure><p>正好也符合整个页面的布局。那么，友链那么多条是不是要自己一条条加上去呢？傻子才全手写。</p><p><code>_widget/links.pug</code> 中就很好的提到了一个思路，当然也非常常用：用 for 循环</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- for (var i in theme.links)</span><br><span class="line">    ul</span><br><span class="line">    a(href=theme.links[i].url title=theme.links[i].title target='_blank') #&#123;theme.links[i].title&#125;</span><br></pre></td></tr></table></figure><p>不过可以发现少了一些东西，头像呢？描述呢？其实这些东西自己加上就好，这里不赘述 YAML 的语法，整个过程相当是从<code>themes/_config.yml</code> 中取出 <code>links</code>部分的值，然后找寻每个 links 部分的的子项，这是个很好的思路。</p><h1 id="动工"><a href="#动工" class="headerlink" title="动工"></a>动工</h1><p>首先现在<code>themes/_config.yml</code>填入所需值，然后编写独立页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">layout/single-link-page.pug</span><br><span class="line">-------------------------------------</span><br><span class="line">extends base</span><br><span class="line"></span><br><span class="line">block title</span><br><span class="line">    title= page.title + ' | ' + config.title</span><br><span class="line"></span><br><span class="line">block  content</span><br><span class="line">    - for (var i in theme.links)</span><br><span class="line">        p</span><br><span class="line">            a.friendurl(target='_blank', href=theme.links[i].url, title=theme.links[i].title)</span><br><span class="line">        a.friendurl(target='_blank', href=theme.links[i].url, title=theme.links[i].title)</span><br><span class="line">            .frienddiv</span><br><span class="line">                a.frienddivleft(target='_blank', href=theme.links[i].url)</span><br><span class="line">                    img.myfriend(src=theme.links[i].src)  // 头像部分</span><br><span class="line">                .frienddivright</span><br><span class="line">                    |  #&#123;theme.links[i].title&#125;</span><br><span class="line">                    br</span><br><span class="line">                    br</span><br><span class="line">                    |  #&#123;theme.links[i].dec&#125;  // 描述</span><br></pre></td></tr></table></figure><p>样式网上有非常多，不愿意写可以找一找抄一抄（虽然有无脑抄完回来给我留言说编译失败的….）。有点前端基础自己写就好，这种东西不怎么依赖定位倒也是好写。</p><p>然后出现一个问题：侧边栏影响美观程度。解决方法是仿照 base 写一个无侧边栏的即可（其实就是把 sidebar 对应部分注释掉），相对的，开头 extends 的部分也要进行修改。</p><p>（未完待续）</p><p><a href="http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/" target="_blank" rel="noopener">http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/</a></p><p><a href="https://hqcfly.github.io/2016/06/19/hexo-theme-guide/" target="_blank" rel="noopener">https://hqcfly.github.io/2016/06/19/hexo-theme-guide/</a></p><p><a href="https://molunerfinn.com/make-a-hexo-theme/" target="_blank" rel="noopener">https://molunerfinn.com/make-a-hexo-theme/</a></p><p><a href="http://huanyouchen.github.io/2019/03/22/add-tags-pages-to-hexo-maupassant-theme/" target="_blank" rel="noopener">http://huanyouchen.github.io/2019/03/22/add-tags-pages-to-hexo-maupassant-theme/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候就是心血来潮才想搞一些好玩的，假期一旦懒下来人就待完了。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.weearc.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="hexo" scheme="https://blog.weearc.top/tags/hexo/"/>
    
      <category term="模版" scheme="https://blog.weearc.top/tags/%E6%A8%A1%E7%89%88/"/>
    
      <category term="响应式" scheme="https://blog.weearc.top/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>使用zenity+xclip实现文字复制粘贴</title>
    <link href="https://blog.weearc.top/posts/5960.html"/>
    <id>https://blog.weearc.top/posts/5960.html</id>
    <published>2019-07-21T11:27:40.000Z</published>
    <updated>2019-08-05T23:37:57.103Z</updated>
    
    <content type="html"><![CDATA[<p>都多久了我也不太记得，网易云下竟然由于qt的某个问题不能使用fcitx输入中文了！WTF！不过我们可以曲线救国。</p><a id="more"></a><p>就算直接不能输入中文我们也有办法暂时解决这个问题。那就是使用zenity+xclip制作一个可输入中文的带有 <strong>GUI</strong> 的一个脚本。</p><blockquote><p>xclip是Unix以及类Unix系统下非常强大的剪贴板交互程序</p></blockquote><p>我们可以简单看一下xclip的help输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Usage: xclip [OPTION] [FILE]...</span><br><span class="line">Access an X server selection <span class="keyword">for</span> reading or writing.</span><br><span class="line"></span><br><span class="line">  -i, -<span class="keyword">in</span>          <span class="built_in">read</span> text into X selection from standard input or files</span><br><span class="line">                   (default)</span><br><span class="line">  -o, -out         prints the selection to standard out (generally <span class="keyword">for</span></span><br><span class="line">                   piping to a file or program)</span><br><span class="line">  -l, -loops       number of selection requests to <span class="built_in">wait</span> <span class="keyword">for</span> before exiting</span><br><span class="line">  -d, -display     X display to connect to (eg localhost:0<span class="string">")</span></span><br><span class="line"><span class="string">  -h, -help        usage information</span></span><br><span class="line"><span class="string">      -selection   selection to access ("</span>primary<span class="string">", "</span>secondary<span class="string">", "</span>clipboard<span class="string">" or "</span>buffer-cut<span class="string">")</span></span><br><span class="line"><span class="string">      -noutf8      don't treat text as utf-8, use old unicode</span></span><br><span class="line"><span class="string">      -target      use the given target atom</span></span><br><span class="line"><span class="string">      -rmlastnl    remove the last newline charater if present</span></span><br><span class="line"><span class="string">      -version     version information</span></span><br><span class="line"><span class="string">      -silent      errors only, run in background (default)</span></span><br><span class="line"><span class="string">      -quiet       run in foreground, show what's happening</span></span><br><span class="line"><span class="string">      -verbose     running commentary</span></span><br></pre></td></tr></table></figure><p>按照功能，我们需要：</p><ol><li>输入文字</li><li>将文字输入到剪贴板</li><li>将文字传给clipboard程序</li></ol><p>非常简单的三个部分。输入文字部分由zenity负责，同时将输入的文字存入变量中，之后用管道传给xclip程序。</p><p>那么需要用到的xclip选项应该就很容易选择了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xclip option</span></span><br><span class="line">xclip -i  <span class="comment"># read text into X selection from standard input or files</span></span><br><span class="line">xclip --selectron clipboard <span class="comment"># copy input to clipboard for output</span></span><br></pre></td></tr></table></figure><p>思路明确了以后就非常容易办了，我们再看一下zenity <code>entry</code>部分的帮助说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用法：</span><br><span class="line">  zenity [OPTION…]</span><br><span class="line"></span><br><span class="line">文字输入选项</span><br><span class="line">  --entry                                显示文本输入对话框</span><br><span class="line">  --text=文字                            设置对话框文字</span><br><span class="line">  --entry-text=文字                      设置输入文字</span><br><span class="line">  --hide-text                            隐藏输入文字</span><br></pre></td></tr></table></figure><p>也就是说我们只需要使用 <code>--entry</code> 选项显示输入框即可，在尝试中发现，bash下执行zenity –entry后会将输入打印到终端，也就是说我们需要将其存为变量才可以使用。因此完整代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">words_to_copy=$(zenity --entry)</span><br><span class="line"><span class="comment"># Use zenity to display a GUI information message.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$words_to_copy</span> | xclip -i </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$words_to_copy</span> | xclip -sel c</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;都多久了我也不太记得，网易云下竟然由于qt的某个问题不能使用fcitx输入中文了！WTF！不过我们可以曲线救国。&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
    
      <category term="zenity" scheme="https://blog.weearc.top/tags/zenity/"/>
    
      <category term="xclip" scheme="https://blog.weearc.top/tags/xclip/"/>
    
      <category term="去他妈的网易云" scheme="https://blog.weearc.top/tags/%E5%8E%BB%E4%BB%96%E5%A6%88%E7%9A%84%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>使用nodejs+shellscript实现github-webhook</title>
    <link href="https://blog.weearc.top/posts/41471.html"/>
    <id>https://blog.weearc.top/posts/41471.html</id>
    <published>2019-07-10T11:27:40.000Z</published>
    <updated>2019-07-10T19:33:29.313Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="webhook" scheme="https://blog.weearc.top/tags/webhook/"/>
    
      <category term="nodejs" scheme="https://blog.weearc.top/tags/nodejs/"/>
    
      <category term="自动化流程" scheme="https://blog.weearc.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>archlinux安装配置(3)</title>
    <link href="https://blog.weearc.top/posts/12422.html"/>
    <id>https://blog.weearc.top/posts/12422.html</id>
    <published>2019-07-08T15:22:05.000Z</published>
    <updated>2019-07-18T21:27:03.146Z</updated>
    
    <content type="html"><![CDATA[<p>距离第一篇博文时隔快两年的更新。由于本次配置文件有问题，KDE直接罢工。修补无果于是决定重装。</p><a id="more"></a><p>前文：</p><ul><li><a href="https://blog.weearc.top/posts/7521.html">基础系统安装</a></li><li><a href="https://blog.weearc.top/posts/60769.html">基础系统配置</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文将会涉及到的内容：</p><ul><li>相当个人级别的系统配置</li><li>可能非常不符合常理的做法</li><li>可能涉及到的错误</li></ul><p>如果是第一次或者还没安装的话可以先按照正经的步骤进行安装以避免误导。</p><h1 id="chroot下的变更"><a href="#chroot下的变更" class="headerlink" title="chroot下的变更"></a>chroot下的变更</h1><p>在正常的安装流程下，我增加安装了几个包：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S fish iw <span class="keyword">dialog </span>dhcp wpa_supplicant vim sudo <span class="keyword">screenfetch </span>htop</span><br></pre></td></tr></table></figure><p>将其分为几类：</p><ul><li>shell: fish(开箱即用的强大shell)</li><li>network: iw dialog wpa_supplicant dhcp(保证进入新系统有网)</li><li>editor: vim(个人非常喜欢的编辑器，更改sudoer会强制使用)</li><li>tools: htop sudo screenfetch(强大的进程管理器、提权工具、基础信息查看)</li></ul><p>这样的话进入新系统会节省一部分时间。</p><h1 id="新系统下的更改"><a href="#新系统下的更改" class="headerlink" title="新系统下的更改"></a>新系统下的更改</h1><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>由于我是重新安装系统，因此<code>/home</code>还在，因此没必要按照常规的在新建用户时候添加<code>-m</code>选项：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">useradd username</span></span><br></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">passwd username</span></span><br></pre></td></tr></table></figure><p>这样的话就完成了用户建立（并且使用旧的<code>/home</code>）。</p><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>因为之前配置完了大部分的内容，因此进入系统的第二件事是先联网。这里使用的是<code>netctl</code>,稍后再更换为<code>NetworkManager</code>。</p><p>因为是wifi链接，所以执行：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">wifi-menu</span></span><br></pre></td></tr></table></figure><p>然后连接到自己需要的网络。由于个人的路由器是限制设备ip的，因此需要在设备上填入固定IP才能正常联网。虽然上一步执行后失败，但是此时<code>netctl</code>已经有了需要的配置文件。形如：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/netctl/wlp2s0-wifi</span></span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">Description='Automatically generated profile by wifi-menu'</span><br><span class="line">Interface=wlp2s0</span><br><span class="line">Connection=wireless</span><br><span class="line">Security=wpa</span><br><span class="line">ESSID= <span class="comment">#WiFi名称</span></span><br><span class="line">IP=static</span><br><span class="line">Address=() <span class="comment">#指定的IP</span></span><br><span class="line">Gateway= <span class="comment">#网关，不知道怎么确定的就填写192.168.1.0一般没问题</span></span><br><span class="line">Key= <span class="comment">#密码</span></span><br></pre></td></tr></table></figure><p>当然这个是修改过的，然后执行：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netctl <span class="literal">start</span> wlp2s0-wifi</span><br></pre></td></tr></table></figure><p>来连接到这个Wifi，并使用：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netctl <span class="keyword">status</span> wlp2s0-wifi</span><br></pre></td></tr></table></figure><p>查看连接状况。</p><p>这样的话应该是有网络了。</p><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>按照个人喜好，我比较习惯把包管理的颜色打开，便于区分包。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/pacman.conf</span></span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line"><span class="comment"># Misc options部分</span></span><br><span class="line"><span class="comment">#UseSyslog</span></span><br><span class="line">Color <span class="comment">#取消注释</span></span><br><span class="line"><span class="comment">#TotalDownload</span></span><br><span class="line">CheckSpace</span><br><span class="line">VerbosePkgLists <span class="comment">#取消注释，更新时可看到变动信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 32位的东西有时候不可避免，为了不必要的麻烦需要打开</span></span><br><span class="line">[multilib]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加ArchlinuxCN仓库</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = TrustedOnly</span><br><span class="line">Server = http://mirrors.cqu.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><p>之后需要执行：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman</span> -Syy  <span class="comment">#更新本地包管理的数据库</span></span><br><span class="line">pacman -S archlinuxcn-keyring <span class="comment">#添加archlinuxCN的签名，主要是为了安全，大概</span></span><br></pre></td></tr></table></figure><h2 id="桌面环境安装"><a href="#桌面环境安装" class="headerlink" title="桌面环境安装"></a>桌面环境安装</h2><p>一般来讲选KDE还是选gnome这个确实看眼缘。由于gnome上个版本的内存泄露太邪门了，虽然目前已经修好但是我还是用KDE吧。</p><p>安装KDE的话一般可能会推荐安装整个Plasma套件，但是好多东西其实用不到，因此也没必要装。我还是决定从最基础的plasma desktop 开始像搭积木一样配置好。</p><p>先安装最基础的桌面环境：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -S plasma-desktop</span></span><br></pre></td></tr></table></figure><p>然后我们装一下驱动，我是intel核显加上A卡独显，不怎么麻烦，并且A卡先不打算用，入门级性能弱的要死也没办法用：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman</span> -S xf86-video-intel</span><br></pre></td></tr></table></figure><p>一般这样的话 I 卡就可以正常工作了。然后安装桌面管理器<code>SDDM</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S sddm</span><br><span class="line">systemctl <span class="built_in">enable</span> sddm <span class="comment">#添加sddm开机启动</span></span><br></pre></td></tr></table></figure><p>因为我们进入桌面环境以后还需要进行配置，因此终端以及文件管理器是必须的：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -S konsole dolphin</span></span><br></pre></td></tr></table></figure><p>然后重启进入KDE。</p><h2 id="剩余桌面环境配置"><a href="#剩余桌面环境配置" class="headerlink" title="剩余桌面环境配置"></a>剩余桌面环境配置</h2><p>进入桌面环境以后就都属于比较常规的配置了，依照个人喜好进行配置就好。</p><h3 id="仍然是系统组件部分"><a href="#仍然是系统组件部分" class="headerlink" title="仍然是系统组件部分"></a>仍然是系统组件部分</h3><p>一般来讲的话我们的桌面目前已经可以使用了，但是为了一些更加方便的调整我们需要安装一些KDE设置中心的插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Ss kcm</span><br></pre></td></tr></table></figure><p>不出意外的话应该得到如下结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">extra/kcmutils 5.60.0-1 (kf5) </span><br><span class="line">    Utilities <span class="keyword">for</span> interacting with KCModules</span><br><span class="line">extra/sddm-kcm 5.16.3-1 (plasma) </span><br><span class="line">    KDE Config Module <span class="keyword">for</span> SDDM</span><br><span class="line">extra/telepathy-kde-accounts-kcm 19.04.3-1 (kde-applications kdenetwork telepathy-kde)</span><br><span class="line">    KCM Module <span class="keyword">for</span> configuring Telepathy Instant Messaging Accounts</span><br><span class="line">community/kcm-fcitx 0.5.5-2 </span><br><span class="line">    KDE Config Module <span class="keyword">for</span> Fcitx</span><br><span class="line">community/kcm-wacomtablet 1:3.1.1-1</span><br><span class="line">    KDE GUI <span class="keyword">for</span> the Wacom Linux Drivers</span><br><span class="line">archlinuxcn/kcm-colorful-git 1.0.1.r0.g2cb0524-1 </span><br><span class="line">    Make your KDE plasma colorful</span><br><span class="line">archlinuxcn/kcm-fcitx5-git r240.62e087f-2</span><br><span class="line">    KDE Config Module <span class="keyword">for</span> Fcitx5</span><br><span class="line">archlinuxcn/nx-firewall-git 0.1.r70.gdf134bd-1 </span><br><span class="line">    Firewall KCM: Plasma 5 Firewall KCM.</span><br><span class="line">archlinuxcn/systemd-kcm 1.2.1-4 </span><br><span class="line">    Systemd control module <span class="keyword">for</span> KDE</span><br></pre></td></tr></table></figure><p>挑选我们喜欢的组件安装即可。</p><p>另外，由于对于显示部分以及触控板都有额外组件可以用，参照ArchLinux的wiki来一个个安装就可以了，比如相当常用的两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kscreen   libinput</span><br></pre></td></tr></table></figure><p>这部分完全是各取所需，另外比如<code>axel</code>等命令行工具也是可以根据需求安装的。</p><h3 id="美化部分"><a href="#美化部分" class="headerlink" title="美化部分"></a>美化部分</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;距离第一篇博文时隔快两年的更新。由于本次配置文件有问题，KDE直接罢工。修补无果于是决定重装。&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="linux" scheme="https://blog.weearc.top/tags/linux/"/>
    
      <category term="完全配置" scheme="https://blog.weearc.top/tags/%E5%AE%8C%E5%85%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>使用pandoc撰写论文</title>
    <link href="https://blog.weearc.top/posts/1448.html"/>
    <id>https://blog.weearc.top/posts/1448.html</id>
    <published>2019-05-02T12:45:10.000Z</published>
    <updated>2019-08-05T23:39:23.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>谁又说不可以呢？</p><a id="more"></a><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>一般论文写作等会有如下痛点，包含：</p><ul><li>数学公式</li><li>图片处理</li><li>交叉引用、脚注、尾注</li><li>参考文献的文献库处理</li></ul><p>当然大名鼎鼎的Microsoft Office当然能处理这些问题，但是与其说是能处理，不如说是处理的不当就会变得麻烦起来。在这些方面处理的最好的应该是LaTeX，但是由于其语法学习曲线非常陡峭，那么支持部分LaTeX特性的Markdown将是比较好的选择，处理得当时将包含如下特性：</p><ul><li>基于自然语言的数学公式处理</li><li>HTML支持，意味着markdown的写作可以很灵活多变</li><li>插件扩展的的流程图、甘特图、美人鱼图支持</li><li>交叉引用、脚注、尾注、文献自动插入</li><li>目录自动生成</li></ul><p>那么本文将简要的介绍下如何使用markdown来进行基本的写作。</p><p>注：本文内容相对较多，但是请相信看完之后收获会是巨大的。</p><h1 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h1><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。[^2][@noauthor_markdown__nodate]</p></blockquote><p>看到这里很懵是不是？但是如果换种说法：DOC格式和markdown本是同根生，是不是就容易多了？DOC所有关键信息等均使用XML格式，而这个格式和markdown其实本质类似。区别是：</p><p>（图片）</p><p>哪个易读性更好一看便知。用markdown你能做什么？</p><ul><li>记笔记</li><li>写网页</li><li>其他</li></ul><h3 id="markdown编辑器推荐"><a href="#markdown编辑器推荐" class="headerlink" title="markdown编辑器推荐"></a>markdown编辑器推荐</h3><h4 id="Typora（全平台）"><a href="#Typora（全平台）" class="headerlink" title="Typora（全平台）"></a>Typora（全平台）</h4><p>所见即所得，只有用过的才知道多好用。功能最全。但是不能进行扩展。其实已有的功能已经非常够用了。</p><h4 id="Mu（Mac-OS）"><a href="#Mu（Mac-OS）" class="headerlink" title="Mu（Mac OS）"></a>Mu（Mac OS）</h4><p>同样所见即所得，但是功能性比Typora弱。</p><h4 id="Atom-或者-Visual-Studio-Code（全平台）"><a href="#Atom-或者-Visual-Studio-Code（全平台）" class="headerlink" title="Atom 或者 Visual Studio Code（全平台）"></a>Atom 或者 Visual Studio Code（全平台）</h4><p>伪装成IDE的文本编辑器，一般程序员以及编程爱好者无人不知，有巨量的插件扩展。能玩游戏看B站听歌聊QQ微信微博。摸鱼神器。</p><h2 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h2><blockquote><p>Pandoc是由John MacFarlane开发的标记语言转换工具，可实现不同标记语言间的格式转换，堪称该领域中的“瑞士军刀”。Pandoc使用Haskell语言编写，以命令行形式实现与用户的交互，可支持多种操作系统。[^3][@noauthor_pandoc_2017]</p></blockquote><p>那么它能处理的格式到底有多少种：</p><p>（图片）</p><p>图片上一个节点代表它能处理的一种格式。</p><h2 id="富文本"><a href="#富文本" class="headerlink" title="富文本"></a>富文本</h2><blockquote><p>富文本格式（Rich Text Format, 一般简称为RTF）是由微软公司开发的跨平台文档格式。一般的格式设置，比如字体和段落设置，页面设置等等信息都可以存在RTF格式中。[^1][@noauthor___nodate]</p></blockquote><p>这是狭义上的富文本，那么广义上的富文本是什么呢？就是所谓的当你编辑时所见即所得。没有谁希望编辑一个文件时还需要像二十年前一样还需要修修改源代码的吧？因此富文本及富文本编辑器的发明是非常重要的革新。但是这是不是意味着纯文本会消失呢？并不。富文本有着富文本的易用，纯文本有着纯文本的轻便。至少来讲，我可不希望在写作前写作后还需要花费大量时间插入参考资料或者调整文本的排版字体大小还是怎样。尤其在写作中如果遇到需要处理的图片，大部分人应该是相当头痛的——既需要照顾排版又不不希望切断思路。那么对于大多数只用到了Microsoft Office Word以及OneNote基础功能的人来说无论使用什么来编辑文档其实都差不了多少。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="Markdown基础"><a href="#Markdown基础" class="headerlink" title="Markdown基础"></a>Markdown基础</h2><p>请不要把markdown视为非常可怕的东西。其实它非常容易掌握，而且对于使用者很友好——因为你在写作时的思路不会被打断，所有格式使用的语法非常简洁并全部可以通过一些文本实现。</p><p>在使用之前，为了方便书写请确保你的输入法是处于半角状态（搜狗上是月牙和圆点，月牙为半角；微软拼音在设置里调整），使用半角输入会将你的输入速度无论是在是用什么都会提高一个等级。</p><h3 id="标题类"><a href="#标题类" class="headerlink" title="标题类"></a>标题类</h3><p>Markdown的标题很容易表示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这时二级标题</span><br><span class="line">### 这是三级标题</span><br></pre></td></tr></table></figure><p>每多一级标题就可以增加一个“#”。具体支持到哪级目录需要看渲染工具的支持，理论上无限。</p><p><strong>注意：为了使格式生效请在“#”后记得加个空格</strong></p><h3 id="标注类"><a href="#标注类" class="headerlink" title="标注类"></a>标注类</h3><h4 id="文本上的标注"><a href="#文本上的标注" class="headerlink" title="文本上的标注"></a>文本上的标注</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"><span class="strong">***加粗的斜体**</span>*</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当然你也可以使用下划线替换“*”，效果是一样的。</p><h4 id="文内引用"><a href="#文内引用" class="headerlink" title="文内引用"></a>文内引用</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代码：</span><br><span class="line">​<span class="code">```你的代码语言</span></span><br><span class="line"><span class="code">echo helloworld;</span></span><br><span class="line"><span class="code">​</span></span><br></pre></td></tr></table></figure><p>脚注：<br>这是一段实例文字。[^1]<br>[^1]: 这是实例文字的脚注，在生成的Word文档中会自动放置</p><p>尾注：<br>这是一段实例文字。[@example P33 Weearc]<br>Reference:<br>(自动生成，不需要动它)</p><p>下标：<br>~下标~</p><p>段落引用：</p><blockquote><p>你要引用的段落</p></blockquote><p>说明：引用完成时请多加一个回车（换行符），引用时尖括号后需要空格<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以上是Markdown的基础语法部分，和普通六级专八词汇相比应该是简单的不是一星半点吧。</span><br><span class="line"></span><br><span class="line">### 链接类</span><br><span class="line"></span><br><span class="line">#### 图片</span><br><span class="line"></span><br><span class="line">```markdown</span><br><span class="line">![图片的说明](图片位置)</span><br></pre></td></tr></table></figure></p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">链接的说明文字</span>](<span class="link">链接</span>)</span><br></pre></td></tr></table></figure><h2 id="markdown进阶"><a href="#markdown进阶" class="headerlink" title="markdown进阶"></a>markdown进阶</h2><h3 id="表格类"><a href="#表格类" class="headerlink" title="表格类"></a>表格类</h3><h5 id="基本表格（不含单元格合并）"><a href="#基本表格（不含单元格合并）" class="headerlink" title="基本表格（不含单元格合并）"></a>基本表格（不含单元格合并）</h5><p>基本的一个三乘三表格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|title1|title2|title3|</span><br><span class="line">|:-----|:----:|-----:|</span><br><span class="line">|左侧对齐|居中|右侧对齐|</span><br><span class="line">|x|y|z|</span><br></pre></td></tr></table></figure><p>生成效果如下：</p><table><thead><tr><th style="text-align:left">title1</th><th style="text-align:center">title2</th><th style="text-align:right">title3</th></tr></thead><tbody><tr><td style="text-align:left">左侧对齐</td><td style="text-align:center">居中</td><td style="text-align:right">右侧对齐</td></tr><tr><td style="text-align:left">x</td><td style="text-align:center">y</td><td style="text-align:right">z</td></tr></tbody></table><h5 id="HTML表格（包含单元格合并的）"><a href="#HTML表格（包含单元格合并的）" class="headerlink" title="HTML表格（包含单元格合并的）"></a>HTML表格（包含单元格合并的）</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列一<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>合并行<span class="tag">&lt;/<span class="name">td</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列一<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>合并列<span class="tag">&lt;/<span class="name">td</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span>行二列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span>行三列二<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><table><br>    <tr><br>        <td>列一</td><br>        <td>列二</td><br>   </tr><br>   <tr><br>        <td colspan="2">合并行</td><br>   </tr><br>   <tr><br>        <td>列一</td><br>        <td>列二</td><br>   </tr><br>    <tr><br>        <td rowspan="2">合并列</td><br>        <td>行二列二</td><br>    </tr><br>    <tr><br>        <td>行三列二</td><br>    </tr><br></table><h3 id="公式类"><a href="#公式类" class="headerlink" title="公式类"></a>公式类</h3><p>此节主要包含数学公式，使用LaTeX数学公式语法。</p><h5 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">x^n</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>生成为：$x^n$</p><h5 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">C^2_3</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>选择数： $C^2_3$</p><h5 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h5><p>一个不包含tag的多项式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">T(n)=\begin&#123;cases&#125;</span><br><span class="line">\Theta(1)\quad n=1\\</span><br><span class="line">T(n-q)+\Theta(n) \quad n&gt;1</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>那么生成的公式如下：</p><p>$T(n)=\begin{cases}<br>\Theta(1)\quad n=1\<br>T(n-q)+\Theta(n) \quad n&gt;1<br>\end{cases}$</p><h5 id="矩阵及行列式"><a href="#矩阵及行列式" class="headerlink" title="矩阵及行列式"></a>矩阵及行列式</h5><p>一个包含tag的矩阵[@noauthor_markdown_nodate-1]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"> \begin&#123;bmatrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;bmatrix&#125; \tag&#123;1&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>$$<br>\begin{bmatrix}<br>   1 &amp; 2 &amp; 3 \<br>   4 &amp; 5 &amp; 6 \<br>   7 &amp; 8 &amp; 9 \<br>  \end{bmatrix} \tag{1}<br>$$</p><h5 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">J(\theta) = \frac&#123;1&#125;&#123;2m&#125;\sum_&#123;i=0&#125;^m(y^i - h_\theta(x^i))^2</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>生成的均方差公式为：</p><p>$J(\theta) = \frac{1}{2m}\sum_{i=0}^m(y^i - h_\theta(x^i))^2$</p><h5 id="还有很多…"><a href="#还有很多…" class="headerlink" title="还有很多…"></a>还有很多…</h5><p>LaTeX的数学公式异常灵活，其余语法可以自行查阅。</p><h3 id="信息类"><a href="#信息类" class="headerlink" title="信息类"></a>信息类</h3><h4 id="YAML样式的信息"><a href="#YAML样式的信息" class="headerlink" title="YAML样式的信息"></a>YAML样式的信息</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 这是一个标题</span><br><span class="line">time: 2019</span><br><span class="line">TOC: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>那么将生成自动目录以及包含时间信息的文章标题部分。</p><h4 id="XML样式信息"><a href="#XML样式信息" class="headerlink" title="XML样式信息"></a>XML样式信息</h4><p>如果你更熟悉XML，直接上吧骚年！</p><h3 id="导图类"><a href="#导图类" class="headerlink" title="导图类"></a>导图类</h3><p>使用markdown可以通过公式方式扩展来写流程图等。[@noauthor_typora__nodate]</p><h4 id="甘特图-时序图"><a href="#甘特图-时序图" class="headerlink" title="甘特图(时序图)"></a>甘特图(时序图)</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```mermaid</span></span><br><span class="line"><span class="code">  sequenceDiagram</span></span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line"><span class="code">​</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```mermaid</span><br><span class="line"></span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line"></span><br><span class="line">  <span class="attribute">sequenceDiagram</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">    participant 张三</span><br><span class="line"></span><br><span class="line">    participant 李四</span><br><span class="line"></span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line"></span><br><span class="line">    loop 健康检查</span><br><span class="line"></span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line"></span><br><span class="line">    <span class="attribute">end</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line"></span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line"></span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line"></span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><h4 id="美人鱼图"><a href="#美人鱼图" class="headerlink" title="美人鱼图"></a>美人鱼图</h4><p>一个示例的美人鱼图：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">client1--&gt;|read / write|SVN((SVN server))</span></span><br><span class="line"><span class="code">client2--&gt;|read only|SVN</span></span><br><span class="line"><span class="code">client3--&gt;|read / write|SVN</span></span><br><span class="line"><span class="code">client4--&gt;|read only|SVN</span></span><br><span class="line"><span class="code">client5(...)--&gt;SVN</span></span><br><span class="line"><span class="code">SVN---|store the data|sharedrive</span></span><br><span class="line"><span class="code">​</span></span><br></pre></td></tr></table></figure><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```mermaid</span><br><span class="line">graph TD</span><br><span class="line">client1--&gt;|<span class="type">read</span> / write|<span class="type">SVN</span>((SVN server))</span><br><span class="line">client2--&gt;|<span class="type">read</span> only|<span class="type">SVN</span></span><br><span class="line">client3--&gt;|<span class="type">read</span> / write|<span class="type">SVN</span></span><br><span class="line">client4--&gt;|<span class="type">read</span> only|<span class="type">SVN</span></span><br><span class="line">client5(...)--&gt;SVN</span><br><span class="line">SVN---|<span class="type">store</span> the data|<span class="type">sharedrive</span></span><br></pre></td></tr></table></figure><p>此处参考</p><h1 id="与文献管理工具互动"><a href="#与文献管理工具互动" class="headerlink" title="与文献管理工具互动"></a>与文献管理工具互动</h1><p>为什么不推荐使用word自带的文献管理器，因为Zotero以及Mandelay等文献管理器更加强大而且易用，包含比如PDF阅读、文献检索、文献关联设置、关键词等。</p><p>这里只对zotero文献管理器与markdown论文撰写的互动进行说明。</p><h2 id="Zotero"><a href="#Zotero" class="headerlink" title="Zotero"></a>Zotero</h2><p>首先到Zotero官网下载软件本体进行安装，然后按照提示安装浏览器插件。使用如下图：</p><p>（gif）</p><p>之后你可以在Zotero导出参考文献。导出时请选择Bibtex格式。需要生成参考文献时直接将导出的文件用文本编辑器打开并进行如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#一个实例的bib文件内容</span><br><span class="line">@misc&#123;noauthor_britains_nodate,</span><br><span class="line">        title = &#123;Britain’s imperial fantasies have given us &#123;Brexit&#125; &#123;\textbar&#125; &#123;Gary&#125; &#123;Younge&#125; &#123;\textbar&#125; &#123;Opinion&#125; &#123;\textbar&#125; &#123;The&#125; &#123;Guardian&#125;&#125;,</span><br><span class="line">        url = &#123;https://www.theguardian.com/commentisfree/2018/feb/03/imperial-fantasies-brexit-theresa-may&#125;,</span><br><span class="line">        urldate = &#123;2019-04-29&#125;</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里引用了参考[@noauthor<span class="emphasis">_britains_</span>nodate]</span><br></pre></td></tr></table></figure><p>即将包含“@misc”行行首大括号后内容前加“@”用中括号“[]”包裹放在需要引用的位置。生成文件时会自动在文末添加参考文献。[@noauthor_markdown_nodate]</p><h1 id="使用pandoc生成（最后一步了）"><a href="#使用pandoc生成（最后一步了）" class="headerlink" title="使用pandoc生成（最后一步了）"></a>使用pandoc生成（最后一步了）</h1><h2 id="pandoc安装"><a href="#pandoc安装" class="headerlink" title="pandoc安装"></a>pandoc安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Windows用户可以再官网下载EXE文件进行安装，并安装Python3使用pip安装pandoc的其他扩展。</p><h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>Mac用户可以使用brew来安装pandoc，并使用pip来添加扩展</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>重点说一下Linux，以证明使用Linux同样可以撰写论文。</p><p>大多数Linux发行版的仓库内包含pandoc，并默认有pip。使用pip可安装扩展。</p><h4 id="对于Arch-Linux"><a href="#对于Arch-Linux" class="headerlink" title="对于Arch Linux"></a>对于Arch Linux</h4><p>Arch Linux仓库中为pandoc以及LaTeX全部扩展进行了打包，直接安装，舒适便捷。</p><h2 id="生成方式"><a href="#生成方式" class="headerlink" title="生成方式"></a>生成方式</h2><p>在此文中，我们需要使用的插件为：pandoc-citeproc。</p><p>那么使用如下指令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc --filter pandoc-citeproc --bibliography=你的文献库.bib --csl=chinese-gb7714-2005-numeric.csl  你的markdown文件.md -o  你的生成文件.docx</span><br></pre></td></tr></table></figure><p>其中“–csl”选项为需要生成参考文献的具体格式标准。</p><p>如果你单单只使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc  markdown文件.md -o  生成的文件</span><br></pre></td></tr></table></figure><p>将只进行最基础的文件渲染，比如转换为PDF格式。</p><h1 id="参考文献（示例）"><a href="#参考文献（示例）" class="headerlink" title="参考文献（示例）"></a>参考文献（示例）</h1><p>[^1]: <a href="https://baike.baidu.com/item/%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/1017816?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/1017816?fr=aladdin</a> 富文本格式<br>[^2]: <a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/markdown/3245829?fr=aladdin</a> markdown<br>[^3]: <a href="https://zh.wikipedia.org/wiki/Pandoc" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Pandoc</a> Pandoc</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;谁又说不可以呢？&lt;/p&gt;
    
    </summary>
    
      <category term="实用工具" scheme="https://blog.weearc.top/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="markdown" scheme="https://blog.weearc.top/tags/markdown/"/>
    
      <category term="pandoc" scheme="https://blog.weearc.top/tags/pandoc/"/>
    
      <category term="zotero" scheme="https://blog.weearc.top/tags/zotero/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题迁移and折腾记</title>
    <link href="https://blog.weearc.top/posts/6009.html"/>
    <id>https://blog.weearc.top/posts/6009.html</id>
    <published>2019-04-06T07:25:05.000Z</published>
    <updated>2019-08-06T22:36:12.890Z</updated>
    
    <content type="html"><![CDATA[<p>老实说，其实为什么突然又开始折腾折腾主题了呢…….因为<strong><em>用NexT的人实在太多了</em></strong>。而我又不想让别人打开发现“和某个某个人的很像”。那样就失去了折腾的必要。因此我决定切换主题。另：本文在调整的相对安逸之前会持续更新。</p><a id="more"></a><p>这个目标主题<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">Maupassant</a>，也是早就看上的，但是考虑到next实在太方便了才没能有勇气换过去。直到最近假期才敢小小的折腾一下。在这里感谢一下将这个主题移植到<a href="https://hexo.io" target="_blank" rel="noopener">hexo</a>博客系统的大大。如果有机会的话我要尝试把它移植到<a href="https://gohugo.io" target="_blank" rel="noopener">HUGO</a>上看看。稍微小小的看了一下，虽然用的人很多。但是因为结构不算复杂，而且pug格式也方便和纯HTML进行转换，因此可以随时随地添加自己喜欢的插件，把博客改造成自己中意的样子。接下来尽可能简单的并详细的介绍下改造以及部署流程。</p><h1 id="主体部分"><a href="#主体部分" class="headerlink" title="主体部分"></a>主体部分</h1><h2 id="hexo部署"><a href="#hexo部署" class="headerlink" title="hexo部署"></a>hexo部署</h2><p>这个我想既然会看这篇文章的话至少说明回去读<a href="https://hexo.io/docs/" target="_blank" rel="noopener">hexo的文档</a>吧！但是以防万一还是从基础开始。</p><p>首先配置好nodejs环境，这个绝对不会再写了，无论是哪个平台教程都多得很。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add hexo-cli</span><br></pre></td></tr></table></figure><p>这样就部署完成了hexo本体。像我一样做过系统迁移的人，可能需要直接在博客工程文件文件夹内执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>然后参考文档建立初始站点，此时应该是使用了landscape主题。那么接下来填写好hexo的_config.yml相关内容。这部分的各个参数请直接参考hexo官方介绍。因为几乎都是自然语言，因此并不难处理。</p><h2 id="Maupassant主题部署"><a href="#Maupassant主题部署" class="headerlink" title="Maupassant主题部署"></a>Maupassant主题部署</h2><p>和大多数hexo引擎的主题采用swig格式的模版不同，Maupassant使用的是pug格式的模版，这个之前也说过了。这种格式并没有比起原生HTML来的更有什么优势。但是可以单独罗列各个部分组件可以更方便的互相拼凑。</p><p>按照README，执行一下命令进行部署（我权当此时你仍在工程文件的根目录下）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">$ yarn add hexo-renderer-pug</span><br><span class="line">$ yarn add hexo-renderer-sass</span><br></pre></td></tr></table></figure><p>此时hexo应该有能力渲染pug模版的页面了。</p><p>接下来仍然是根据自己需求修改_config.yml文件。这部分也没什么好说的。</p><h1 id="开始魔改"><a href="#开始魔改" class="headerlink" title="开始魔改"></a>开始魔改</h1><p>为什么说是魔改，因为都是只涉及到前端所需要的代码，相对容易修改和调试，只要稍花点心思就可以调整成自己想要的样子。</p><h2 id="修改永久链接-amp-添加评论"><a href="#修改永久链接-amp-添加评论" class="headerlink" title="修改永久链接&amp;添加评论"></a>修改永久链接&amp;添加评论</h2><p>首先是修改评论系统。之前已知使用Disqus!作为评论系统的，但是由于众所周知的原因，这货并没想象的那么棒，那么需要一个相对折中的方案。最开始想选择更为流行的Gitment，但是作者服务器到期了，因此更换为GitTalk。如果只是简单的添加评论系统的话并不能称得上是魔改。如果各位仔细观察的话会发现hexo的文章链接形式都是<strong>时间+文章名</strong>，这样就难免出现比如中文标题的文章不能初始化评论的问题。</p><p>因此这时候需要用到这款插件：hexo-abbrlink。主要作用是将原本非常长的文章链接修改成比较短的、数字加字母的随机生成的链接。</p><p>执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add hexo-abbrlink</span><br></pre></td></tr></table></figure><p>添加该插件。然后修改站点的_config.yml：</p><p>添加内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#abbrlink</span></span><br><span class="line"><span class="attr">abbrink:</span></span><br><span class="line"><span class="attr">  alg:</span> <span class="string">crc32</span></span><br><span class="line"><span class="attr">  rep:</span> <span class="string">dec</span></span><br></pre></td></tr></table></figure><p>并修改永久链接样式：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>这时候重新生成饮下会发现所有文章链接变成了相对短的链接。而且这款插件会在生成新post时候自动添加选项。非常方便。如果不放心的话可以修改post模版文件。</p><h3 id="修改文章文件名"><a href="#修改文章文件名" class="headerlink" title="修改文章文件名"></a>修改文章文件名</h3><p>为什么要单列出来这个，因为我们有了addrlink这个好东西。但是无论是用什么来管理文章的话，如果全部是带有下划线或者短杠的文件名的话并不利于管理。因此修改站点配置文件_config.yml：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br></pre></td></tr></table></figure><h2 id="添加进度条效果"><a href="#添加进度条效果" class="headerlink" title="添加进度条效果"></a>添加进度条效果</h2><p>这个其实应该是不算难的。因为只涉及到修改CSS部分以及引入pace.js。</p><blockquote><p> 注：以下全部都涉及到主题模版的修改，请全部在主题文件夹进行</p></blockquote><p>修改head.pug：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> //- 插入进度条</span><br><span class="line"> script(src='//cdn.bootcss.com/pace/1.0.2/pace.min.js')</span><br><span class="line"> link(href='//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css', rel='stylesheet')</span><br><span class="line"> style.</span><br><span class="line">   .pace .pace-progress &#123;</span><br><span class="line">   background: #1abc9c;</span><br><span class="line">   height: 3px;</span><br><span class="line">   &#125;</span><br><span class="line">   .pace .pace-progress-inner &#123;</span><br><span class="line">   box-shadow: 0 0 10px #1abc9c, 0 0 5px     #1abc9c;</span><br><span class="line">   &#125;</span><br><span class="line">   .pace .pace-activity &#123;</span><br><span class="line">   border-top-color: #1abc9c; </span><br><span class="line">   border-left-color: #1abc9c; </span><br><span class="line">   &#125;</span><br><span class="line">//- 插入进度掉end</span><br></pre></td></tr></table></figure><p>如果实在是无法手写pug的话可以先考虑写成HTML再用转换工具进行转换。</p><h2 id="添加点击的烟花效果"><a href="#添加点击的烟花效果" class="headerlink" title="添加点击的烟花效果"></a>添加点击的烟花效果</h2><p>同样修改head.pug，添加如下行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//- 烟花点击效果</span><br><span class="line">    if theme.fireworks</span><br><span class="line">      canvas.fireworks(style='position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;')</span><br><span class="line">        script(type='text/javascript', src='//cdn.bootcss.com/animejs/2.2.0/anime.min.js')</span><br><span class="line">        script(type='text/javascript', src='/js/fireworks.js')</span><br><span class="line">//- 烟花点击效果end</span><br></pre></td></tr></table></figure><p>在source/js/下添加fireworks.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>,</span><br><span class="line">        a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">        n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a; <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill() &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span> &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125;</span><br><span class="line">    anime.timeline().add(&#123; <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.x &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.y &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule &#125;).add(&#123; <span class="attr">targets</span>: a, <span class="attr">radius</span>: anime.random(<span class="number">80</span>, <span class="number">160</span>), <span class="attr">lineWidth</span>: <span class="number">0</span>, <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule, <span class="attr">offset</span>: <span class="number">0</span> &#125;) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> n = <span class="keyword">this</span>,</span><br><span class="line">            i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; e.apply(n, i) &#125;, t) &#125; &#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123; <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        numberOfParticules = <span class="number">30</span>,</span><br><span class="line">        pointerX = <span class="number">0</span>,</span><br><span class="line">        pointerY = <span class="number">0</span>,</span><br><span class="line">        tap = <span class="string">"mousedown"</span>,</span><br><span class="line">        colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>],</span><br><span class="line">        setCanvasSize = debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>) &#125;, <span class="number">500</span>),</span><br><span class="line">        render = anime(&#123; <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height) &#125; &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>) &#125;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123; pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>,</span><br><span class="line">        a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">        n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a; <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill() &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a = &#123;&#125;; <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span> &#125;, a &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125;</span><br><span class="line">    anime.timeline().add(&#123; <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.x &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">return</span> e.endPos.y &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule &#125;).add(&#123; <span class="attr">targets</span>: a, <span class="attr">radius</span>: anime.random(<span class="number">80</span>, <span class="number">160</span>), <span class="attr">lineWidth</span>: <span class="number">0</span>, <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule, <span class="attr">offset</span>: <span class="number">0</span> &#125;) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123; <span class="keyword">var</span> a; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> n = <span class="keyword">this</span>,</span><br><span class="line">            i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; e.apply(n, i) &#125;, t) &#125; &#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        numberOfParticules = <span class="number">30</span>,</span><br><span class="line">        pointerX = <span class="number">0</span>,</span><br><span class="line">        pointerY = <span class="number">0</span>,</span><br><span class="line">        tap = <span class="string">"mousedown"</span>,</span><br><span class="line">        colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>],</span><br><span class="line">        setCanvasSize = debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>) &#125;, <span class="number">500</span>),</span><br><span class="line">        render = anime(&#123; <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height) &#125; &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个部分可以自己按照洗好做一定的修改，会有不一样的效果。</p><h2 id="添加不蒜子站点浏览数"><a href="#添加不蒜子站点浏览数" class="headerlink" title="添加不蒜子站点浏览数"></a>添加不蒜子站点浏览数</h2><p>修改footer.pug，并添加如下行：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">script(async='', src='https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js')</span><br><span class="line">  span<span class="meta">#busuanzi_container_site_pv</span></span><br><span class="line">    i.fa.fa-eye</span><br><span class="line">    <span class="string">| 访问量</span></span><br><span class="line">    span<span class="meta">#busuanzi_value_site_pv</span></span><br><span class="line">    <span class="string">| 次 |  </span></span><br><span class="line">  span<span class="meta">#busuanzi_container_site_uv</span></span><br><span class="line">    i.fa.fa-user-md</span><br><span class="line">    <span class="string">| 访客数</span></span><br><span class="line">    span<span class="meta">#busuanzi_value_site_uv</span></span><br><span class="line">    <span class="string">| 人</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure><p>由于pug对空格敏感，因此空格多少可以相对容易的调整。</p><h2 id="添加clipboard-js"><a href="#添加clipboard-js" class="headerlink" title="添加clipboard.js"></a>添加clipboard.js</h2><p>(待完成)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老实说，其实为什么突然又开始折腾折腾主题了呢…….因为&lt;strong&gt;&lt;em&gt;用NexT的人实在太多了&lt;/em&gt;&lt;/strong&gt;。而我又不想让别人打开发现“和某个某个人的很像”。那样就失去了折腾的必要。因此我决定切换主题。另：本文在调整的相对安逸之前会持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://blog.weearc.top/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.weearc.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>新年折腾记---从Manjaro迁移到Arch</title>
    <link href="https://blog.weearc.top/posts/30549.html"/>
    <id>https://blog.weearc.top/posts/30549.html</id>
    <published>2019-02-06T09:48:04.000Z</published>
    <updated>2019-07-08T20:12:30.143Z</updated>
    
    <content type="html"><![CDATA[<p>新的一年，热爱折腾的我当然是从折腾开始新的一年了….</p><a id="more"></a><p>在经过了各位arch大佬和Gentoo大佬一年的洗礼…我终于决定从Manjaro切换到Arch Linux了（没十足的把握千万别学我，Manjaro其实是个非常好的发行版，其实我也没啥把握就是了….）。</p><p>准备迁移过程中考虑了两个问题：</p><ol><li>我那快1800个软件包要怎么办</li><li>最初选择manjaro，主要是看中了manjaro对于内核切换的便利，以及方便的附加驱动的安装</li></ol><p>有关第一个问题，可以通过备份一遍软件列表来解决，但是有关问题二，就要比较头痛了，习惯了方便的一键切换再反过来熟悉一下这种方式未免有点“仿古”的感觉…</p><p>那么正常来做迁移，首先需要备份一下软件列表，根据<a href="https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Install_packages_from_a_list" target="_blank" rel="noopener">archwiki</a>，我们需要用pacman导出一份列表，这里注意一下arch和manjaro的关系：manjaro的源，可以理解为大于arch的，也就是说对于arch的仓库，manjaro的一众自己的工具等都是“多余的”，但是介于我从aur也安了一部分包来看，aur和自己打包安装的那部分也要考虑进去。</p><p>因此在原有系统中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Qqen选项备份的是除了aur和自己打包安装的以外的包</span></span><br><span class="line">pacman -Qqen &gt; listQqen.txt </span><br><span class="line"><span class="comment">#Qqem选项备份的是aur中的和自己打包安装的包，可以理解为Qqen的补集</span></span><br><span class="line">pacman -Qqem &gt; listQqem.txt</span><br></pre></td></tr></table></figure><p>这两个列表保存在主目录就好，之后会用到。</p><p>然后还是基础系统的安装，直接base和base-devel两个包组外加iw、wpa_supplicant两个包解决，然后走一遍常规的过程。</p><p>这个时候我们再考虑一下，对于manjaro是在源里的软件，对于arch应该是如同aur里的，因为我也使用了相当多archcn的包，因此记得添加archcn源。</p><p>然后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取arch中的存在的包</span></span><br><span class="line">pacman -S --needed $(comm -12 &lt;(pacman -Slq | sort) &lt;(sort listQqen.txt))</span><br><span class="line"><span class="comment">#获取aur里的包</span></span><br><span class="line">yaourt  -S --needed $(comm -12 &lt;(pacman -Slq | sort) &lt;(sort Qqem.txt))</span><br></pre></td></tr></table></figure><p>这时候剩下的包就是manjaro专有的了，如果你愿意的话也可以和我一样直接clone <a href="https://gitlab.manjaro.org/explore/groups" target="_blank" rel="noopener">manjaro</a>的那些包的源代码然后自己编译安装，这之后记得把相关的服务启动了，然后就大功告成了。重启一下看看是不是熟悉的界面又回来了。</p><p>后记：</p><p>貌似很多用arch的用户还在有着对manjaro的鄙视链啊…..但是有一点不得不说，就是该承认的非常用户友好的特性还是承认吧，都是linux用户互怼没啥好处。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新的一年，热爱折腾的我当然是从折腾开始新的一年了….&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="linux" scheme="https://blog.weearc.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>怀念，甚想念，无法想念其一</title>
    <link href="https://blog.weearc.top/posts/32312.html"/>
    <id>https://blog.weearc.top/posts/32312.html</id>
    <published>2019-02-04T15:41:25.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<p>春节第一篇2333，顺便还是要吐槽一下，rime真心难调教，实在是太难受了，换回搜狗了。</p><a id="more"></a><p>第一篇按照习惯我也不会谈技术反正就我那点知识也没有什么好拿出来讲的。因此今天还是打算随意写一写，毕竟写的开心就完事了。</p><p>然后呢…不知道大家有没有接到过类似的短信：</p><blockquote><p>温馨提示:为守护三亚的蓝天白云，三亚全市严禁露天焚烧秸杆垃圾，三亚主城区及学校、医院、住宅小区等重点区域严禁燃放烟花爆竹，主城区公共场所严禁露天烧烤和祭祀烧纸，寺庙道观严禁燃烧高香。违者将予以处罚。请自觉遵守，共建生态文明三亚。—三亚市人民政府</p></blockquote><p>嘛，倒是一下子透露了我过年的地点，不过呢，倒是也接到重庆市政府类似的短信。保护环境嘛，没办法的事。可是仔细想一想，好像没像小时候那样过年有些时日了。</p><p>回想小时候，每年必定是过年的前几天开始，采买、打扫、准备过年需要用到的一些小玩意儿这些一样没少过。也在过年前几天把家里的窗帘全部卸下然后清洗，再一个个装回去。也曾学着用五洁粉然后对着白色人造石的窗台一顿猛擦直到全部都变亮变白位置……虽然看着麻烦实际也确实麻烦，但是却是在多少年以后的今天令人感觉还能感受到年味的那些回忆。等到春节当天，中午出门去祖父母家，和兄长姐姐一起玩，去放点小鞭儿，冰天雪地的把自己裹成肉丸子到楼下的大平台上去“作妖儿”，往垃圾道里扔二踢脚什么的也是没少干。回来吃年夜饭，年年都是那几个菜色不变样却也是吃不腻，挺奇怪的。而后回家包饺子，看看电视。</p><p>那个时候赵本山老师还是春晚的红人，小品也不像现在这么尬，动不动就煽情动不动就歌颂。过去春晚创造了不少梗，歌手们也都是真实的实力派，每一样节目都让人觉得不会看腻，就连后半夜的节目都非常有意思。如果现在春晚都为了挽救收视率而接着一些东风并且请一些实力派的歌手也好演员也好回到那个舞台，就算看到那那些熟悉的面孔我也是觉得没有必要再看下去了，尬得要死的东西我为什么不做点自己觉得有意义的事情而非要和春晚死磕呢？</p><p>我确实是相当恋旧，也知道所有东西不可能一成不变，不过还是觉得以前那种有过年气氛的过年只能活在记忆中实在是太可惜了。家里人都分散开了，今年也没能回去看祖母，祖父已经不在人世，很多事情不停地在变。越是想抓住想将那个那些个美好的时光据为己有，越是在发现它在眼前不断地消散的同时感觉心如刀绞。过去已经回不去了，一般都会在这个时间说“应该勇敢的面对未来”吧？但是老实说越是长大就越觉得一些事情不可思议，越觉得害怕面对未来，越想仅仅活在回忆中哪怕知道那些已经是梦，已经不可能在实现了。那么就没有办法了，总不能停下，未规划好的将来也需要考虑——不过不是出于个人意愿，而是出于“对自己负责”的责任。背负了那么多期望以及责任，既然已经背负起来了就不可能轻易地在将那些卸下去。责任就是责任，烙印一般的东西。</p><p>新的一年，愿各位身体健康，家庭和睦，工作顺利，学习进步。如果看完了我这么多牢骚话还没厌烦的话可以期待一下下一篇，不是牢骚也不是随笔，既然是技术博客那么技术类的不能少。新的一年希望自己能把坑填完，开个新坑，把日语复习一下最重要的是挂科的那几科一定要考过，真的不想再重修遭受那个罪了orz。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;春节第一篇2333，顺便还是要吐槽一下，rime真心难调教，实在是太难受了，换回搜狗了。&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://blog.weearc.top/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="https://blog.weearc.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>搭建私人图床并使用</title>
    <link href="https://blog.weearc.top/posts/61150.html"/>
    <id>https://blog.weearc.top/posts/61150.html</id>
    <published>2019-02-02T15:27:37.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<p>其实还是挺好用的？但是，由于图床挂掉，此文内容基本已废，将就看倒还可以。</p><a id="more"></a><p><img src="http://picb.weearc.top/images/2019/02/02/0bd162d9f2d3572c94bb080b8b13632763d0c388.jpg" alt="0bd162d9f2d3572c94bb080b8b13632763d0c388.jpg"></p><p>如图所见！锵锵锵，自建了一个新图床。至于为什么这么做，主要还是因为腾讯云更改了收费及免费的条款，并且已有的vps不好好利用的话实在是资源浪费，所以决定自己建立一个算了。</p><h2 id="VPS准备"><a href="#VPS准备" class="headerlink" title="VPS准备"></a>VPS准备</h2><p>因为是要用作图库的VPS所以建议还是选择一个靠谱一些的服务商比较好，国内阿里云以及腾讯云都可以（毕竟学生优惠www）。如果可以的话建议选择storge instance之类的类型，特点是价格便宜并且硬盘空间很大。构架建议选择KVM，极度不推荐openVZ的机器。系统选择任意linux发行版都可以，既然都有能力弄主机，就别说连基础linux的操作都不会。</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>由于我们要使用的图床程序是<a href="https://chevereto.com/" target="_blank" rel="noopener">chevereto</a> ,按照<a href="https://chevereto.com/docs/requirements" target="_blank" rel="noopener">官方文档</a>的说明，使用LNMP是比较合适的。<a href="http://picb.weearc.top/image/Wah" target="_blank" rel="noopener"><img src="http://picb.weearc.top/images/2019/02/03/261b794faf0d9cee7a8b90c41d544ab7.png" alt="261b794faf0d9cee7a8b90c41d544ab7.png"></a></p><p>这里选择<a href="https://lnmp.org/download.html" target="_blank" rel="noopener">LNMP一键包</a>（其实也是我懒了）。LNMP那么容易配置就不细讲述了。主要需要注意的是<a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">phpMyAdmin</a>的一些坑。</p><p><a href="http://picb.weearc.top/image/gdo" target="_blank" rel="noopener"><img src="http://picb.weearc.top/images/2019/02/03/e865198482f4b22ae431bdc369ab3e79.md.png" alt="e865198482f4b22ae431bdc369ab3e79.md.png"></a></p><p>这个地方如果未选择相匹配的MySQL版本会导致无法远程连接到phpMyAdmin。因此请在选择版本时多加注意。<strong><em>另外安装完成时记得把/home/wwwroot/default/下的几个文件备份并清除。</em></strong></p><h2 id="安装chevereto"><a href="#安装chevereto" class="headerlink" title="安装chevereto"></a>安装chevereto</h2><p>这里我使用的是脚本安装方式，仍然是将脚本放到网站根目录即可。</p><blockquote><p>注意：记得检查脚本的所有者以及权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -lash </span><br><span class="line">chmod a+x index.php</span><br></pre></td></tr></table></figure><blockquote><p>如果正常的话你会得到index.php的所有者和组为<strong>www</strong>，权限为775或者777。</p></blockquote><p>所有步骤跟着向导就好，没有需要特殊注意的地方。</p><p>但是有一个地方需要注意以下，在新建mysql账户时请选择本机域（大概是这个，是localhost）这个地方以前在部署owncloud时就踩过，到现在才弄得比较明白。至此站点部署完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实还是挺好用的？但是，由于图床挂掉，此文内容基本已废，将就看倒还可以。&lt;/p&gt;
    
    </summary>
    
      <category term="博客配套" scheme="https://blog.weearc.top/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E5%A5%97/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>编译安装gcc6.1</title>
    <link href="https://blog.weearc.top/posts/51180.html"/>
    <id>https://blog.weearc.top/posts/51180.html</id>
    <published>2019-01-23T10:12:53.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<p>俗话说得好，一回生二回熟，但是时间长了也怕忘。离开了Gentoo那么久也懒得手动编译，但是偶尔也要复习一下为好。</p><a id="more"></a><h2 id="源码获取"><a href="#源码获取" class="headerlink" title="源码获取"></a>源码获取</h2><p>这个应该是最简单的了，只要你能找到个镜像站，里面镜像列表都差不多有GNU，里面有诸多项目的源代码，gcc源码也不例外。怎么获取，请自己看着办。</p><h2 id="展开源码"><a href="#展开源码" class="headerlink" title="展开源码"></a>展开源码</h2><p>正常操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf gcc6.1.tar.xz</span><br></pre></td></tr></table></figure><h2 id="定位到源码目录"><a href="#定位到源码目录" class="headerlink" title="定位到源码目录"></a>定位到源码目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> gcc6.1/</span><br></pre></td></tr></table></figure><p>建立编译的工作目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">makedir build</span><br></pre></td></tr></table></figure><p>建立工作目录的好处是可以避免编译过程中的中间文件污染源码（大概）。</p><h2 id="查看编译选项"><a href="#查看编译选项" class="headerlink" title="查看编译选项"></a>查看编译选项</h2><p>先简单观察一下Archlinux的gcc编译选项</p><blockquote><p>gcc 8.2.1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用内建 specs。</span><br><span class="line">COLLECT_GCC=gcc</span><br><span class="line">COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.1/lto-wrapper</span><br><span class="line">目标：x86_64-pc-linux-gnu</span><br><span class="line">配置为：/build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --<span class="built_in">enable</span>-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-threads=posix --<span class="built_in">enable</span>-libmpx --with-system-zlib --with-isl --<span class="built_in">enable</span>-__cxa_atexit --<span class="built_in">disable</span>-libunwind-exceptions --<span class="built_in">enable</span>-clocale=gnu --<span class="built_in">disable</span>-libstdcxx-pch --<span class="built_in">disable</span>-libssp --<span class="built_in">enable</span>-gnu-unique-object --<span class="built_in">enable</span>-linker-build-id --<span class="built_in">enable</span>-lto --<span class="built_in">enable</span>-plugin --<span class="built_in">enable</span>-install-libiberty --with-linker-hash-style=gnu --<span class="built_in">enable</span>-gnu-indirect-function --<span class="built_in">enable</span>-multilib --<span class="built_in">disable</span>-werror --<span class="built_in">enable</span>-checking=release --<span class="built_in">enable</span>-default-pie --<span class="built_in">enable</span>-default-ssp --<span class="built_in">enable</span>-cet=auto</span><br><span class="line">线程模型：posix</span><br><span class="line">gcc 版本 8.2.1 20181127 (GCC)</span><br></pre></td></tr></table></figure><blockquote><p>gcc 7.4.1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用内建 specs。</span><br><span class="line">COLLECT_GCC=gcc-7</span><br><span class="line">COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/7.4.1/lto-wrapper</span><br><span class="line">目标：x86_64-pc-linux-gnu</span><br><span class="line">配置为：/build/gcc7/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --<span class="built_in">enable</span>-languages=c,c++,lto --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-threads=posix --<span class="built_in">enable</span>-libmpx --with-system-zlib --with-isl --<span class="built_in">enable</span>-__cxa_atexit --<span class="built_in">disable</span>-libunwind-exceptions --<span class="built_in">enable</span>-clocale=gnu --<span class="built_in">disable</span>-libstdcxx-pch --<span class="built_in">disable</span>-libssp --<span class="built_in">enable</span>-gnu-unique-object --<span class="built_in">enable</span>-linker-build-id --<span class="built_in">enable</span>-lto --<span class="built_in">enable</span>-plugin --<span class="built_in">enable</span>-install-libiberty --with-linker-hash-style=gnu --<span class="built_in">enable</span>-gnu-indirect-function --<span class="built_in">disable</span>-werror --<span class="built_in">enable</span>-checking=release --<span class="built_in">enable</span>-default-pie --<span class="built_in">enable</span>-default-ssp --program-suffix=-7 --<span class="built_in">enable</span>-version-specific-runtime-libs</span><br><span class="line">线程模型：posix</span><br><span class="line">gcc 版本 7.4.1 20181207 (GCC)</span><br></pre></td></tr></table></figure><p>前面部分是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/</span><br></pre></td></tr></table></figure><p>比较有用的部分只有 –prefix 选项。大致都可以看懂：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--prefix=一级目录 --libdir=二级目录1 --libexecdir=二级目录2 --mandir=二级目录3 --infodir=二级目录4 --with-bugurl=URL</span><br></pre></td></tr></table></figure><p>对于已经有了内置GCC的发行版，如果照搬选项则不是明智之举，因此按照个人需求将此处选项改为只定义一级目录即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--prefix=<span class="variable">$HOME</span>/GCC-6.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;俗话说得好，一回生二回熟，但是时间长了也怕忘。离开了Gentoo那么久也懒得手动编译，但是偶尔也要复习一下为好。&lt;/p&gt;
    
    </summary>
    
      <category term="archlinux" scheme="https://blog.weearc.top/categories/archlinux/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="linux" scheme="https://blog.weearc.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>生活好了，但是我想回到以前</title>
    <link href="https://blog.weearc.top/posts/21989.html"/>
    <id>https://blog.weearc.top/posts/21989.html</id>
    <published>2019-01-07T12:39:40.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<h4 id="睡前聊一聊"><a href="#睡前聊一聊" class="headerlink" title="睡前聊一聊"></a>睡前聊一聊</h4><p>上次像这样写文章大概是很久以前的事情了，那我为何突然想起来这些？用我自己的话来讲，现在我才一点点感觉到，越是接触新技术、新产品，愈是变得更孤独。当然了，学技术可以当做一个例外，但是，如果可以不与这些新玩意儿接触，从某种角度上讲确实不想接触。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;睡前聊一聊&quot;&gt;&lt;a href=&quot;#睡前聊一聊&quot; class=&quot;headerlink&quot; title=&quot;睡前聊一聊&quot;&gt;&lt;/a&gt;睡前聊一聊&lt;/h4&gt;&lt;p&gt;上次像这样写文章大概是很久以前的事情了，那我为何突然想起来这些？用我自己的话来讲，现在我才一点点感觉到，越是接触新技
      
    
    </summary>
    
      <category term="杂谈" scheme="https://blog.weearc.top/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="https://blog.weearc.top/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>android课设-蓝牙助手</title>
    <link href="https://blog.weearc.top/posts/37370.html"/>
    <id>https://blog.weearc.top/posts/37370.html</id>
    <published>2018-12-13T12:41:19.000Z</published>
    <updated>2019-07-08T20:12:30.130Z</updated>
    
    <content type="html"><![CDATA[<p>课设制作思路非常简单，就是制作一个蓝牙助手<br><a id="more"></a></p><h1 id="Bluetooth-status-helper课程设计"><a href="#Bluetooth-status-helper课程设计" class="headerlink" title="Bluetooth status helper课程设计"></a>Bluetooth status helper课程设计</h1><h2 id="设计缘由"><a href="#设计缘由" class="headerlink" title="设计缘由"></a>设计缘由</h2><p>众所周知目前安卓机器都可以很简单的获取蓝牙状态。但是由于一些原因我所使用的HTC U Ultra在更新到了Android Oreo以后失去了查看蓝牙状态的功能。因此在本设计中打算借助外部方式实现这个功能</p><h2 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h2><p>由于在使用Shizuku Manager时以及使用Brevent时发现可以通过扩展开发的方式调用部分系统API，这些API在一定程度上根据厂商的设计方式不同会无法直接调用或是被屏蔽掉。但是HTC在安卓5.0时代已经在系统中大量（完全）保留了原生Android的API，因此只要需要寻找这些接口的调用方式即可使用“被屏蔽”的功能。<br>在手机实际使用过程中发现缺失的功能如下：</p><ul><li>更改蓝牙可被发现状态</li><li>更改蓝牙可被发现状态的时长</li><li>(可选)查看的蓝牙列表</li></ul><h2 id="编写过程"><a href="#编写过程" class="headerlink" title="编写过程"></a>编写过程</h2><h3 id="蓝牙权限的获取"><a href="#蓝牙权限的获取" class="headerlink" title="蓝牙权限的获取"></a>蓝牙权限的获取</h3><p>蓝牙权限的获取应该是整个项目最核心的部分。只有实现了能够检测蓝牙开启状态并请求蓝牙权限其余功能才能使用。<br>在阅读<a href="https://developer.android.com/guide/topics/connectivity/bluetooth" target="_blank" rel="noopener">官方文档</a>时发现，在Android Oreo中，想要获取蓝牙权限，应该由四个权限组成：<br>即两个位置权限，两个蓝牙权限。即：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--AndroidManifest.xml--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加蓝牙权限-开始 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span><span class="comment">&lt;!--蓝牙权限--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span><span class="comment">&lt;!--Android位置权限&gt;</span></span><br><span class="line"><span class="comment">&lt;!--蓝牙权限添加-结束--&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>由于安卓新的安全机制，获取硬件的控制权限一般是视为危险行为（获取的权限为关键权限），因此需要动态调用权限申请以及权限的注册。</p></blockquote><h3 id="初始化蓝牙权限"><a href="#初始化蓝牙权限" class="headerlink" title="初始化蓝牙权限"></a>初始化蓝牙权限</h3><p>这一段直接上代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">setTitle(<span class="string">"蓝牙助手"</span>);</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (savedInstanceState == <span class="keyword">null</span> )&#123;</span><br><span class="line">                bltAdapter = ((BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE)).getAdapter();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//查看设备是否支持蓝牙功能</span></span><br><span class="line">                <span class="keyword">if</span> (bltAdapter != <span class="keyword">null</span> )&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//查看蓝牙是否开启</span></span><br><span class="line">                    <span class="keyword">if</span> (bltAdapter.isEnabled())&#123;</span><br><span class="line">                        <span class="comment">//若已经开启蓝牙则弹出一个提示已经开启</span></span><br><span class="line">                        String notification = <span class="string">"蓝牙已经开启"</span>;</span><br><span class="line">                        additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,notification,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;<span class="keyword">else</span>   &#123;</span><br><span class="line">                        <span class="comment">//若未开启则弹出一个窗口请求开启权限</span></span><br><span class="line">                        Intent enablebtIntent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">                        startActivityForResult(enablebtIntent, Constants.REQUEST_ENABLE_BT);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//当设备不支持蓝牙功能的时候点击按钮退出程序</span></span><br><span class="line">                    AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">                    builder.setTitle(<span class="string">"注意"</span>);</span><br><span class="line">                    builder.setMessage(<span class="string">"您的设备很可能不支持蓝牙功能"</span>);</span><br><span class="line">                    builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            finish();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    builder.show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>关键点解释：</p><ol><li>传感器一般是通过相应的Adapter来获取使用权，因此先注册BluetoothAdapter，并且方式为getAdapter()，获取系统的BluetoothService；</li><li>判断是否开启了蓝牙，如果未开启立即申请权限；</li></ol><h3 id="重写OnActivityResult"><a href="#重写OnActivityResult" class="headerlink" title="重写OnActivityResult()"></a>重写OnActivityResult()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode,Intent data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode,resultCode, data);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> Constants.REQUEST_ENABLE_BT:</span><br><span class="line">                <span class="keyword">if</span> (resultCode == RESULT_OK)&#123;</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                    AlertDialog.Builder builder_welcome = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">                    builder_welcome.setTitle(<span class="string">""</span>);</span><br><span class="line">                    builder_welcome.setMessage(<span class="string">"感谢使用蓝牙助手！\n 这款工具面向部分ROM没有提供查看蓝牙状态功能的机型\n 如：HTC，LG\n 如果您的手机ROM拥有类似功能，您仍可尝试使用。"</span>);</span><br><span class="line">                    builder_welcome.setPositiveButton(<span class="string">"我知道了"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    builder_welcome.show();</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙已开启"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙助手需要蓝牙权限才可以正常运行"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:<span class="keyword">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这么写或者说这么改写的主要原因是蓝牙部分相当于使用了一个新的activity进行控制。</p><h4 id="与之匹配的contants-java"><a href="#与之匹配的contants-java" class="headerlink" title="与之匹配的contants.java"></a>与之匹配的contants.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Constants</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_ENABLE_BT = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一段主要还是根据重写的onActivityResult()设定默认的request Code。</p><h3 id="部分功能模块编写"><a href="#部分功能模块编写" class="headerlink" title="部分功能模块编写"></a>部分功能模块编写</h3><h4 id="蓝牙开关"><a href="#蓝牙开关" class="headerlink" title="蓝牙开关"></a>蓝牙开关</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mswitch.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (isChecked)&#123;</span><br><span class="line">                    Intent enablebtIntent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">                    startActivityForResult(enablebtIntent, Constants.REQUEST_ENABLE_BT);</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙开启"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙开启"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    bltAdapter.disable();</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"蓝牙关闭"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    additional_inform=<span class="string">"蓝牙关闭"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h4><h5 id="模块主代码"><a href="#模块主代码" class="headerlink" title="模块主代码"></a>模块主代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">goTO_log.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent log = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,log_watcher.class);</span><br><span class="line">                Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">                bundle.putString(<span class="string">"information"</span>,information);</span><br><span class="line">                bundle.putString(<span class="string">"time"</span>,time);</span><br><span class="line">                log.putExtra(<span class="string">"bundle"</span>,bundle);</span><br><span class="line">                startActivity(log);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h5 id="查看Activity部分代码"><a href="#查看Activity部分代码" class="headerlink" title="查看Activity部分代码"></a>查看Activity部分代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">log_watcher</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    TextView log;</span><br><span class="line">    TextView log_time;</span><br><span class="line">    Button btn;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_log_watcher);&#123;</span><br><span class="line">            setTitle(<span class="string">"LOG"</span>);</span><br><span class="line">            Bundle bundle = getIntent().getBundleExtra(<span class="string">"bundle"</span>);</span><br><span class="line">            <span class="keyword">final</span> String[] information = &#123;bundle.getString(<span class="string">"information"</span>)&#125;;</span><br><span class="line">            <span class="keyword">final</span> String[] time = &#123;bundle.getString(<span class="string">"time"</span>)&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            log = (TextView) <span class="keyword">this</span>.findViewById(R.id.logcat);</span><br><span class="line">            log_time = (TextView) <span class="keyword">this</span>.findViewById(R.id.logcat_time);</span><br><span class="line">            btn = (Button) <span class="keyword">this</span>.findViewById(R.id.log_clean);</span><br><span class="line"></span><br><span class="line">            btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    time[<span class="number">0</span>]=<span class="string">"\0"</span>;</span><br><span class="line">                    information[<span class="number">0</span>] =<span class="string">"\0"</span>;</span><br><span class="line"></span><br><span class="line">                    log.setText(<span class="string">"\0"</span>);</span><br><span class="line">                    log_time.setText(<span class="string">"\0"</span>);</span><br><span class="line">                    Toast.makeText(log_watcher.<span class="keyword">this</span>,<span class="string">"日志已清除"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            log.setText(information[<span class="number">0</span>]);</span><br><span class="line">            log_time.setText(time[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="传递log"><a href="#传递log" class="headerlink" title="传递log"></a>传递log</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">logcat</span><span class="params">(String information, String additional_inform)</span></span>&#123;</span><br><span class="line">        information=information+additional_inform+<span class="string">'\n'</span>;</span><br><span class="line">        additional_inform=<span class="string">"\0"</span>;</span><br><span class="line">        <span class="comment">//log.setText(information);</span></span><br><span class="line">        get_log_time();</span><br><span class="line">        <span class="keyword">return</span> information;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">get_log_time</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss"</span>);</span><br><span class="line">        java.util.Date date=<span class="keyword">new</span> java.util.Date();</span><br><span class="line">        time=time+<span class="string">"\n"</span>+sdf.format(date);</span><br><span class="line">        <span class="comment">//log_time.setText(time+"\n");</span></span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="设定可被发现时间"><a href="#设定可被发现时间" class="headerlink" title="设定可被发现时间"></a>设定可被发现时间</h4><p>如果认真研究过蓝牙的文档的话，不难发现蓝牙默认最长可被发现时间为300秒，并且在高版本Android上不能使用旧方法进行时间的延展，另外输入值的“null”以及“0”最终获取值并不相同，因此具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">cs_btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                String _timeout = editText.getText().toString();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(TextUtils.isEmpty(editText.getText()) )&#123;<span class="comment">//判断输入是否为空</span></span><br><span class="line"></span><br><span class="line">                    Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                    dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, <span class="number">300</span>);</span><br><span class="line">                    startActivity(dis_intent);</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备参照默认最大时间:300秒设置可被发现"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                    additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                    information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    timeout =Integer.parseInt(_timeout);</span><br><span class="line">                    <span class="comment">//若输入值不为空，采用安卓本身方法进行广播</span></span><br><span class="line">                    <span class="keyword">if</span> (timeout &lt;= <span class="number">300</span> &amp;&amp; timeout != <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                        Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                        dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, timeout);</span><br><span class="line">                        startActivity(dis_intent);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备目前已经可被发现，时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">if</span> (timeout &gt; <span class="number">300</span>)&#123;</span><br><span class="line">                        <span class="comment">//若时间长于300秒，采用反射方式调用系统蓝牙可被发现的开关以达到延时目的</span></span><br><span class="line">                        setDiscoverableTimeout(timeout);</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"设备目前已经可被发现，时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">if</span> (timeout == <span class="number">0</span>)&#123;</span><br><span class="line">                        Intent dis_intent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">                        dis_intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, <span class="number">120</span>);</span><br><span class="line">                        startActivity(dis_intent);</span><br><span class="line">                        timeout=<span class="number">120</span>;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"输入值为0。设备目前已经可被发现，默认时间为"</span>+timeout+<span class="string">"秒"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                        additional_inform=<span class="string">"设备可被发现，时间"</span>+timeout+<span class="string">"秒"</span>;</span><br><span class="line">                        information=logcat(information,additional_inform);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h5 id="时间高于300秒时方法重写"><a href="#时间高于300秒时方法重写" class="headerlink" title="时间高于300秒时方法重写"></a>时间高于300秒时方法重写</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDiscoverableTimeout</span><span class="params">(<span class="keyword">int</span> timeout)</span> </span>&#123;</span><br><span class="line">    BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Method setDiscoverableTimeout = BluetoothAdapter.class.getMethod(<span class="string">"setDiscoverableTimeout"</span>, <span class="keyword">int</span>.class);</span><br><span class="line">        setDiscoverableTimeout.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Method setScanMode =BluetoothAdapter.class.getMethod(<span class="string">"setScanMode"</span>, <span class="keyword">int</span>.class,<span class="keyword">int</span>.class);</span><br><span class="line">        setScanMode.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        setDiscoverableTimeout.invoke(adapter, timeout);</span><br><span class="line">        setScanMode.invoke(adapter, BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE,timeout);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>另外一定要注意：一定要抛异常，否则编译时会报错</p></blockquote><h4 id="蓝牙扫描"><a href="#蓝牙扫描" class="headerlink" title="蓝牙扫描"></a>蓝牙扫描</h4><p>另外说起蓝牙，应该难点就是在广播及扫描部分，但是由于本人理解并不深刻因此可能会出现问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">scan_btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isEnabled())&#123;</span><br><span class="line">                   bltAdapter.enable();</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isDiscovering()) &#123;</span><br><span class="line">                   bltAdapter.cancelDiscovery();</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;<span class="comment">//利用睡眠阻隔系统重启扫描服务，并处理异常</span></span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">                   bltAdapter.startDiscovery();</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   bltAdapter.startDiscovery();</span><br><span class="line">               &#125;</span><br><span class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"正在进行扫描..."</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">               Intent intent = <span class="keyword">new</span> Intent(bltAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">               startActivity(intent);</span><br><span class="line">               <span class="comment">//扫描到了任一蓝牙设备</span></span><br><span class="line">               <span class="keyword">if</span>(BluetoothDevice.ACTION_FOUND.equals(intent.getAction()))</span><br><span class="line">               &#123;</span><br><span class="line">                   Log.v(TAG, <span class="string">"### BT BluetoothDevice.ACTION_FOUND ##"</span>);</span><br><span class="line">                   BluetoothDevice btDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);</span><br><span class="line">                   <span class="keyword">if</span>(btDevice != <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">                       Log.v(TAG , <span class="string">"Name : "</span> + btDevice.getName() + <span class="string">" Address: "</span> + btDevice.getAddress());</span><br><span class="line">                       Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"Name:"</span>+btDevice.getName()+<span class="string">"Address:"</span>+btDevice.getAddress(),Toast.LENGTH_LONG).show();</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>(BluetoothDevice.ACTION_BOND_STATE_CHANGED.equals(intent.getAction()))</span><br><span class="line">                   &#123;</span><br><span class="line">                       Log.v(TAG, <span class="string">"### BT ACTION_BOND_STATE_CHANGED ##"</span>);</span><br><span class="line">                       <span class="keyword">int</span> cur_bond_state = intent.getIntExtra(BluetoothDevice.EXTRA_BOND_STATE, BluetoothDevice.BOND_NONE);</span><br><span class="line">                       <span class="keyword">int</span> previous_bond_state = intent.getIntExtra(BluetoothDevice.EXTRA_PREVIOUS_BOND_STATE, BluetoothDevice.BOND_NONE);</span><br><span class="line">                       Log.v(TAG, <span class="string">"### cur_bond_state ##"</span> + cur_bond_state + <span class="string">" ~~ previous_bond_state"</span> + previous_bond_state);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               additional_inform=<span class="string">"设备进行扫描"</span>;</span><br><span class="line">               information=logcat(information,additional_inform);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h4 id="取消扫描"><a href="#取消扫描" class="headerlink" title="取消扫描"></a>取消扫描</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mCancel.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (bltAdapter.isDiscovering()) &#123;</span><br><span class="line">                   bltAdapter.cancelDiscovery();</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;<span class="comment">//利用睡眠阻隔系统重启扫描服务，并处理异常</span></span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"已取消"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h4 id="双击返回键退出"><a href="#双击返回键退出" class="headerlink" title="双击返回键退出"></a>双击返回键退出</h4><p>这一段也是对返回键的执行进行重写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> secondTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (secondTime - firstTime &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"再按一次退出程序"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            firstTime = secondTime;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>至于其他部分比如关于，非常简单没必要来说。</p><h3 id="RES部分"><a href="#RES部分" class="headerlink" title="RES部分"></a>RES部分</h3><p>这部分最具有说服力应该只有这一段代码，方法是在res部分新建style.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    android:shape="rectangle"&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#3dafeb"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"150dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"5dp"</span> <span class="attr">android:dashWidth</span>=<span class="string">"5dp"</span> <span class="attr">android:color</span>=<span class="string">"#77d5cf"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"10dp"</span> <span class="attr">android:color</span>=<span class="string">"#84ebe5"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="顺便附上主activity的layout"><a href="#顺便附上主activity的layout" class="headerlink" title="顺便附上主activity的layout"></a>顺便附上主activity的layout</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:accessibilityHeading</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"142dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/changeStatus"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"138dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"51dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"148dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"change status"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.484"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Switch</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/_switch"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"309dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"38dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"44dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:showText</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"蓝牙"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textOff</span>=<span class="string">"蓝牙关闭"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textOn</span>=<span class="string">"蓝牙开启"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:checked</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/_scan"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/buttonStyle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"159dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"160dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"132dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/circled_button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fontFamily</span>=<span class="string">"sans-serif"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"SCAN"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:typeface</span>=<span class="string">"monospace"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/goTO_log"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"78dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"34dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"72dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"log"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@+id/changeStatus"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editText"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"128dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"54dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"208dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/mhelp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"42dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"39dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"216dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/question_button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"\?"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">"@+id/editText"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/mCancel"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"160dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/round_botton_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"×"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.033"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">"@+id/changeStatus"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;课设制作思路非常简单，就是制作一个蓝牙助手&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://blog.weearc.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://blog.weearc.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>php入门到入土1</title>
    <link href="https://blog.weearc.top/posts/33109.html"/>
    <id>https://blog.weearc.top/posts/33109.html</id>
    <published>2018-11-28T08:42:32.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<p>入土是不可能入土的<br><a id="more"></a></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>首先先安装PHP，php-fpm以及nginx。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S php php-fpm nginx</span><br></pre></td></tr></table></figure></p><p>安装完成以后，记得配置好vscode对应的相关插件</p><blockquote><p>注意一点，arch系的nginx配置虽然与其他发行版大同小异，但是初始可写目录不同。即初始化的目录虽然在/usr/share/nginx/html，但是实际上可写可读目录为/srv/nginx</p></blockquote><h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><p>安装完必要工具，修改配置文件。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#位置/etc/nginx</span></span><br><span class="line"><span class="attribute">user</span> http http;</span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">event</span> &#123;</span><br><span class="line">        <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        <span class="attribute">include</span>             mime.type;</span><br><span class="line">        <span class="attribute">default_type</span>    application/octet-stream;</span><br><span class="line">        <span class="attribute">sendfile</span>            <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">keepalive_timeout</span>   <span class="number">65</span>;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">                <span class="attribute">listen</span>          <span class="number">80</span>;</span><br><span class="line">                <span class="attribute">server_name</span>     localhost;</span><br><span class="line">                <span class="attribute">root</span>                   /srv/nginx;</span><br><span class="line">                <span class="attribute">location</span>    /   &#123;</span><br><span class="line">                        <span class="attribute">index</span>   index.html  index.htm   index.php;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="attribute">error_page</span>      <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">                <span class="attribute">location</span>    =   /50x.html   &#123;</span><br><span class="line">                        <span class="attribute">root</span>        /usr/share/nginx/html;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="attribute">loaction</span>    <span class="regexp">~   \.php$</span>  &#123;</span><br><span class="line">                        <span class="attribute">fastcgi_pass</span>    unix:/run/php-fpm/php-fpm.sock;</span><br><span class="line">                        <span class="attribute">fastcgi_index</span>   index.php;</span><br><span class="line">                        <span class="attribute">include</span>             fastcgi.conf;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;入土是不可能入土的&lt;br&gt;
    
    </summary>
    
      <category term="php" scheme="https://blog.weearc.top/categories/php/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="php" scheme="https://blog.weearc.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Firefox每夜构建食用指南</title>
    <link href="https://blog.weearc.top/posts/55829.html"/>
    <id>https://blog.weearc.top/posts/55829.html</id>
    <published>2018-08-25T08:04:16.000Z</published>
    <updated>2019-07-08T20:12:30.160Z</updated>
    
    <content type="html"><![CDATA[<p>可能和你想的不大一样，这是个不算完善的方法，但保证好用。</p><a id="more"></a><h1 id="Firefox下载及”安装“"><a href="#Firefox下载及”安装“" class="headerlink" title="Firefox下载及”安装“"></a>Firefox下载及”安装“</h1><p>首先说明一下，<a href="https://github.com/archlinuxcn/repo" target="_blank" rel="noopener">archlinuxCN repo</a>里面有每夜构建版本的Firefox，而且是四种语言版本:简体中文，正體中文，日本語，English(US)。但是这是我事后才知道的。话说回来，就算是使用了Mozilla官方的版本其实还是一个不错的选择。毕竟是预编译可执行文件，位置随意放置，比如我就放到了 <strong>opt</strong>下面。如果熟悉.desktop文件编写的话只要自己写个启动器就好，简单明了。这点还是要感谢一下Mozilla的打包方式，解压后的文件名统一就是Firefox。因此也可以做到多个Firefox版本共存。<br>由于一些不可见光的原因，国内用户在百度搜索Firefox浏览器的时候会被redirect到火狐浏览器那里<br></p><blockquote><p>好了你看到了，我把Firefox与火狐作了区分</p></blockquote><p>为什么？因为你要是仔细观察就会发现不光是安装程序和协议，就连官网本身都并不相同（不只是语言），国内官网是被阉割过的。因此想要下载Mozilla软件请一定要认准Mozilla的官方地址，根据其性质是以org域名。<a href="https://www.mozilla.org/zh-CN/firefox/" target="_blank" rel="noopener">传送门</a>。Mozilla有CDN加持，国内访问速度尚可。<br>接下来就是直接将页面拖到最低端，选择 <a href="https://www.mozilla.org/zh-CN/firefox/channel/desktop/" target="_blank" rel="noopener"><strong>Beta、Nightly、Developer Edition</strong></a>然后找到那个非常酷炫的nightly图标，点进去进行下载。<br>Mozilla会在你进行下载的时候对系统进行判断，Linux下载后会得到一个以tar.bz2作为扩展名的归档文件。直接移动到/opt目录下面，获取root权限并解压：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf firefox-nightly-版本号.0a1.tar.bz2</span><br></pre></td></tr></table></figure></p><p>我这里写版本号诸君都能看懂吧，不要傻乎乎地复制粘贴。解压后会自动生成目录Firefox，此时在家目录下建立Firefox-nightly.desktop文件并填入以下内容（遵循X11标准，部分是KDE标准，DBUS部分可以不用理会）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Comment[zh_CN]=</span><br><span class="line">Comment=</span><br><span class="line">Exec=/opt/firefox/firefox</span><br><span class="line">GenericName[zh_CN]=</span><br><span class="line">GenericName=</span><br><span class="line">Icon=/opt/firefox/browser/chrome/icons/default/default128.png</span><br><span class="line">MimeType=</span><br><span class="line">Name[zh_CN]=firefox nightly</span><br><span class="line">Name=firefox nightly</span><br><span class="line">Path=</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">TerminalOptions=</span><br><span class="line">Type=Application</span><br><span class="line">X-DBUS-ServiceName=</span><br><span class="line">X-DBUS-StartupType=</span><br><span class="line">X-KDE-RunOnDiscreteGpu=<span class="literal">false</span></span><br><span class="line">X-KDE-SubstituteUID=<span class="literal">false</span></span><br><span class="line">X-KDE-Username=</span><br></pre></td></tr></table></figure></p><p>这里需要注意一点就是我偷懒了，实际上的写法应该参考archlinuxCN的Firefox-nightly.desktop：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Firefox Nightly</span><br><span class="line">GenericName=Web Browser</span><br><span class="line">Comment[zh_CN]=浏览互联网</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly %u</span><br><span class="line">Icon=firefox-nightly</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br><span class="line">MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">StartupWMClass=FirefoxNightly</span><br><span class="line">Categories=Network;WebBrowser;</span><br><span class="line">Keywords=web;browser;internet;</span><br><span class="line">Actions=new-window;new-private-window;</span><br><span class="line">[Desktop Action new-window]</span><br><span class="line">Name=New Window</span><br><span class="line">Name[zh_CN]=新建窗口</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly --new-window %u</span><br><span class="line">[Desktop Action new-private-window]</span><br><span class="line">Name=New Private Window</span><br><span class="line">Name[en_US]=New Private Window</span><br><span class="line">Name[zh_CN]=新建隐私浏览窗口</span><br><span class="line">Exec=firefox-nightly --class=FirefoxNightly --private-window %u</span><br></pre></td></tr></table></figure></p><p>在这个写法中能够实现隐私窗口的调用，使得功能上更加完善。<br>至此Firefox-nightly安装完毕。你以为这就可以满足我了吗？才怪。</p><h1 id="自升级脚本编写"><a href="#自升级脚本编写" class="headerlink" title="自升级脚本编写"></a>自升级脚本编写</h1><h2 id="升级模块"><a href="#升级模块" class="headerlink" title="升级模块"></a>升级模块</h2><h3 id="下载模块"><a href="#下载模块" class="headerlink" title="下载模块"></a>下载模块</h3><p>很简单，如果通过Firefox下载浏览器新版本的话能够直接看到下载的链接，形如：<a href="https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-59.0a1.zh-CN.linux-x86_64.tar.bz2" target="_blank" rel="noopener">https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-59.0a1.zh-CN.linux-x86_64.tar.bz2</a> 。 那么之后就只需要替换版本号就可以了。但是也存在一个问题，就是如果版本号写死了，那么之后的升级操作通过执行脚本就显得很困难，而且最多只能保持在某一版本号这短暂的生命周期内。因此结合以前学习archlinux的PKGBUILD编写时某贴吧大佬的提示，将版本号全部使用 <strong>$pkgver</strong> 代替。根据bash的语法。此变量的声明应该在头部进行而且使用$声明的变量应该是有前部程序输出的。但是毕竟本人能力有限还不能够写出能直接被识别的变量名称（毕竟web地址特殊字符不少）。<br><br>因此，思路是首先编写版本号文件pkgver.txt，在这个文件中输入版本号，借由cat命令执行输出并对之后变量的引用进行输入。<br>因此,整个过程简化为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">_pkgver=$(cat pkgver.txt)</span><br><span class="line">wget https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br><span class="line">tar -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2 #解压时会自动覆盖</span><br><span class="line">rm -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz</span><br></pre></td></tr></table></figure></p><h3 id="权限判断模块"><a href="#权限判断模块" class="headerlink" title="权限判断模块"></a>权限判断模块</h3><p>上面我们讲了升级的基本操作：下载包，解压，删除。但是我们需要注意一点，我们在执行脚本时身份不是root，这样会容易造成麻烦。因此需要添加一个简单的身份验证模块,整个过程借由if语句:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if [[ $EUID -eq 0 ]]</span><br><span class="line">then    cd /opt</span><br><span class="line">    _pkgver=$(cat pkgver.txt)</span><br><span class="line">    wget https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br><span class="line">    tar -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2 #解压时会自动覆盖</span><br><span class="line">    rm -xvf firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz;else</span><br><span class="line">    echo &quot;Please run it use sudo or as root user!&quot;;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p>提示一点，千万不要忘记bash中if对空格敏感…还有就是分号不要忘记。</p><h2 id="版本号模块"><a href="#版本号模块" class="headerlink" title="版本号模块"></a>版本号模块</h2><p>正常来说的话，我们手动下载新构建的nightly时，Firefox会自动调用函数向上游发出请求来判断是否需要更新，但是我们自己的话就没有办法是用这个。因此我们需要手动构建一个。<br>上面已经可以知道我们有一个名为 <strong>pkgver.txt</strong> 的额外的文件用来检测版本号。然后我们也很容易发现如果尝试下载旧版本的包时候会返回404。那么，这样思路就很明确了：</p><ul><li>使用curl来获取http_code</li><li>使用tail，利用管道获取上面的返回值并剪切</li><li>使用一个循环来不断调用版本号的函数</li></ul><p>那么可以利用以下代码：<br>首先定义一个_link来存放链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_link=https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central-l10n/firefox-$_pkgver.0a1.zh-CN.linux-x86_64.tar.bz2</span><br></pre></td></tr></table></figure></p><p>然后使用curl来获取http_code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;</span><br></pre></td></tr></table></figure></p><p>此时应该可以正常获取到网页或者该文件信息了。<br>使用管道：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;</span><br></pre></td></tr></table></figure></p><p>定义到新的变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_httpcode=(curl -I -s --connect-timeout 5 $_link -w %&#123;http_code&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="夜间定时检测任务添加"><a href="#夜间定时检测任务添加" class="headerlink" title="夜间定时检测任务添加"></a>夜间定时检测任务添加</h2><p>TODO：<br></p><ul><li>[x] 基础模块编写</li><li>[x] 发行版判断并可切换下载器</li><li>[x] 代理功能</li><li>[] 后续脚本优化</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可能和你想的不大一样，这是个不算完善的方法，但保证好用。&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="https://blog.weearc.top/categories/tools/"/>
    
    
      <category term="archlinux" scheme="https://blog.weearc.top/tags/archlinux/"/>
    
      <category term="linux" scheme="https://blog.weearc.top/tags/linux/"/>
    
      <category term="firefox" scheme="https://blog.weearc.top/tags/firefox/"/>
    
      <category term="firefox-nightly" scheme="https://blog.weearc.top/tags/firefox-nightly/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.weearc.top/posts/16107.html"/>
    <id>https://blog.weearc.top/posts/16107.html</id>
    <published>2018-08-11T16:00:20.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World！"><a href="#Hello-World！" class="headerlink" title="Hello World！"></a>Hello World！</h1><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><details><summary>hello world 原文</summary><br><h1>Quick Start</h1><br><h2>Create a new post</h2><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a><br><h2>Run server</h2><br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a><br><h2>Generate static files</h2><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a><br><h2>Deploy to remote sites</h2><br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo deploy</span><br></pre></td></tr></table></figure><br><br>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br><br>PS:你可知道为了书写折叠区域的艰辛…结果发现就是如下一些代码结果我连next都升级了…配置文件全部需要重新搞。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">summary</span>&gt;</span><span class="comment">&lt;!--折叠区域的提示词--&gt;</span><span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--折叠的内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>这段原文当然是没有的啊混蛋！！<br></details><h1 id="hello-again"><a href="#hello-again" class="headerlink" title="hello, again"></a>hello, again</h1><h2 id="hello-hexo！"><a href="#hello-hexo！" class="headerlink" title="hello hexo！"></a>hello hexo！</h2><p>想了一想。还是打算把hello world.md搞回来。一来是一个项目（虽然称不上是项目）没有了hello world感觉很是让人失落；二来是想记录下自己创建博客的心路历程。参考了<a href="https://purefkh.xyz/about/" target="_blank" rel="noopener">这篇</a>以及<a href="http://aoaoao.me/2018/04/15/hello-world/#%E4%BF%9D%E7%95%99%E7%9A%84%E5%86%85%E5%AE%B9" target="_blank" rel="noopener">这篇</a>以后决定好好写一写这篇文章，改造一下hello world。</p><p>如果各位看的比较仔细的话会发现这篇文章的日期与我的第一篇文章创建日期刚好隔了一年时间。这一年时间，说长不长说短不短，只是一直感觉少了些什么。让人颇为失落。</p><p>因此这篇文章是一定要写了。</p><p>准确的说，我没有一个明确的建立博客的契机。当时只是在b站无意间发现了个视频，使用了比特萌出品的hexo便携版搭建博客，我最大的好奇是搭建到哪里去了。。。虽然后来才知道github给提供了gitpages服务，但是当时虽然用了蛮长时间github却什么也不知道。就这样，边看百度边摸索着把博客搭建了起来，学着适应了Windows7下面使用git bash.exe安装了VisualStudioCode作为markdown编辑器并且慢慢摸索着凭着一腔热血把<a href="https://blog.weearc.top/2017/08/12/archlinux安装配置/">Archlinux安装配置（一）</a>这篇文章写了出来、换掉主题并且部署到github上。整个过程非常舒适（我其实没有实质性书写任何一点点hexo配置文件当时）</p><p>后来出现了一个问题，OpenSUSE42.1在深深让我感受到绝望以后我便完全叛逃到了Windows10 1509。怪也怪当时对UEFI下Linux的配置方式基本不知道。然后出现了一系列问题导致博客书写不能，初期忙于各种事情于是博客的事情就一拖再拖。</p><blockquote><p>上面口水仗一般的简单讲了下我是怎么接触到hexo的</p></blockquote><h2 id="再见了我的高中生活～"><a href="#再见了我的高中生活～" class="headerlink" title="再见了我的高中生活～"></a>再见了我的高中生活～</h2><p>其实写了这么些再说这句话有点不是很合适了。不过这点确实是我开始决定开启博客书写的契机。</p><p>全部应该归功我的高中语文老师。与同年级其他班级的老师不大一样，我们班是有写积累本这个要求的。所谓积累本说白了就是一个本子，按照要求需要写一些观影感言什么的，这点与小学时的基本无异。区别是，有时候一些课内文言的翻译和重点词汇总结什么的也会被要求写在上面，另外有时会有一些话题类作文作为作业也是要求一并写在上面的。</p><p>不算自夸，如果阅读量不小的话，或者脑袋里稍微有点东西，观点类文章一千多字差不多半个小时就可以完成了。对于素质教育这点我们还是很有信心的，毕竟高中班上所有同学都是接受了了初中几乎纯素质教育升上高中的。<details><summary>这里稍微说一下我们的学校</summary>辽宁省实验中学北校。在我们入学时设有初中部高中部，而初中部的能力在当年是可以把全省其他初中吊着打的。尤其是比较讨厌的“第七监狱”，毕业生到高中以后的能力和我们初中培养出的根本没法比，现在的情况就让人唏嘘不已了。而高中部，设有一些班级专供中考失利没有考上学校本部：辽宁省实验中学 的人来就读，我便是其中一员</details>这样的话基本上所有写作任务都不是什么难事。作为观点比较犀利的写手，我们更是有由课代表设立的“梦呓之肆”这种活动。每间隔一段时间会定下一个主题然后一群人来对这个观点发表一些评论并记述下来。那个地方，是在完全封闭生活中的我们的畅所欲言的地方，那里有思想的激烈碰撞，有面对一个事件不再一边倒似得评论而是全部客观分析的假设种种…</p><p>那是个至今还令人十分怀念的地方。</p><p>高中的书写习惯轻易没有办法改过来。一切从我个人厚度大约8mm的A4大小的积累本全部能够写满可以看出一些端倪。那就借此机会继续下去吧，形式改变了，但是我的思想还在。只要我还有时间还有这颗心，我就会继续写下去。</p><details><summary>PS：喵～</summary><br>上面隐藏的部分说了我升级了next主题，这个以后会找时间来讲，但是现在就算了，板式比起旧版本还有很多不如意的地方。<br>TODOs:<br>    <li>next主题压缩优化</li><br>    <li>字体更换</li><br>    <li><s>music.js优化重构</s></li><br>    <li>部分样式表重构</li><br>    <li>图床迁移</li><br>    <li><s>配置文件更新</s></li><br>    <li><s>live2d模型配置迁移</s></li><br>    <li><s>music-aplayer迁移</s></li><br></details>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hello-World！&quot;&gt;&lt;a href=&quot;#Hello-World！&quot; class=&quot;headerlink&quot; title=&quot;Hello World！&quot;&gt;&lt;/a&gt;Hello World！&lt;/h1&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="https://blog.weearc.top/categories/%E6%9D%82%E8%B0%88/"/>
    
      <category term="hello hexo" scheme="https://blog.weearc.top/categories/%E6%9D%82%E8%B0%88/hello-hexo/"/>
    
    
      <category term="hello-word" scheme="https://blog.weearc.top/tags/hello-word/"/>
    
  </entry>
  
  <entry>
    <title>youtuber木下ゆうか篇（一）</title>
    <link href="https://blog.weearc.top/posts/30769.html"/>
    <id>https://blog.weearc.top/posts/30769.html</id>
    <published>2018-08-05T10:12:04.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<p>又一篇由于图床挂掉丧失乐趣的文章，但是不嫌弃的话，还是看看呗？<br><a id="more"></a><br>这张图可是做了很久，但是想拿去的话help yourself!（反正我也没有备份了）</p><p>今天来谈一谈木下佑香，还是和往常一样分为两部分好了，我们先谈一些美好的，然后再把美好的东西一点点撕开来看，这才有趣，对吗。</p><h1 id="youtuber木下ゆうか—are-you-still-youself"><a href="#youtuber木下ゆうか—are-you-still-youself" class="headerlink" title="youtuber木下ゆうか—are you still youself?"></a>youtuber木下ゆうか—are you still youself?</h1><h2 id="都市人复杂生活中的开心果"><a href="#都市人复杂生活中的开心果" class="headerlink" title="都市人复杂生活中的开心果"></a>都市人复杂生活中的开心果</h2><p>个人接触木下佑香比较晚，大概是2017年暑假那会儿。木下的视频给人最大的感觉就是欢快，一点不做作的小女生不但厨艺可以连胃口都不小简直是直戳我的萌点。声音可爱，长相好看而且和娇小体型形成强烈反差的进食量确实是让人欲罢不能。在繁重的都市人生活中。突然有一天跳出个这种小女生，那个人能狠下心来讨厌呢？况且平时生活的艰辛大家都懂，突然看到这个可以心无旁骛地吃东西，这个时候，这种欢乐和放松使人能够忘却很多烦恼。一边看她吐槽着食物，一边大口大口地咀嚼。光光是吃东西就能让人感到幸福，真的是太好了呢！</p><p>印象最深的是，每天就算非常累了，也会在床上一脸傻笑地看她的更新，看她做东西吃东西仿佛自己有了女儿并且在幸福地咀嚼着自己亲手做的事物一样。论食物种类，除却作为广告的那些，都是很基本的和食。也有很多韩餐和中华料理，当然还有很可怕的奶酪地狱就是了。不过其他的都是小事不是么，最重要的是，她是那种笑靥如花的人。只要看着她就好像自己很幸福了一样。明明实际上年龄并不算小，但是看起来确实很年轻，这可能就是所谓的童心保存得很完整吧！</p><h2 id="黑历史知晓不得已但是令人自我厌烦"><a href="#黑历史知晓不得已但是令人自我厌烦" class="headerlink" title="黑历史知晓不得已但是令人自我厌烦"></a>黑历史知晓不得已但是令人自我厌烦</h2><p>我，真的非常喜欢木下佑香。在镜头前的她没有一丝做作，没有那种让我看到第一眼就反感的不得了的感觉，甚至可以说是我最喜欢的Youtuber。</p><p>然后现在出现了一个问题。由“爱好和想出名声”的想法，组件变成了为了“保持着出名而不得不继续”的样子之时，整个就变味了。商业性质倒是没有办法，毕竟不是谁都可以无时无刻用爱发电。但是一旦被捅出来有催吐行为就等于自杀无疑。</p><p>出于人类本能都对这种极其伤害身体的行为表示拒绝，但是此时也会使人深陷矛盾：如果你进行观看就从某种角度上是认同了她的催吐行为，使得她会“变本加厉”；但若是不进行观看的话等于她人气的下降，这样可能是无形中会加重她的催吐行为，这样的情况下不但没有起到正面效果，反而会因为她的行为与自己的自我厌恶形成恶性循环：在看到木下的脸时不自觉的会感觉到很惭愧但又想观看，因此，倒不如最后不再看了。</p><h1 id="you-are-still-yourself-but-not-the-former-one"><a href="#you-are-still-yourself-but-not-the-former-one" class="headerlink" title="you are still yourself, but not the former one"></a>you are still yourself, but not the former one</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又一篇由于图床挂掉丧失乐趣的文章，但是不嫌弃的话，还是看看呗？&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="https://blog.weearc.top/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="随笔" scheme="https://blog.weearc.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="木下ゆうか" scheme="https://blog.weearc.top/tags/%E6%9C%A8%E4%B8%8B%E3%82%86%E3%81%86%E3%81%8B/"/>
    
      <category term="木下佑香" scheme="https://blog.weearc.top/tags/%E6%9C%A8%E4%B8%8B%E4%BD%91%E9%A6%99/"/>
    
  </entry>
  
  <entry>
    <title>結城友奈は勇者である</title>
    <link href="https://blog.weearc.top/posts/11193.html"/>
    <id>https://blog.weearc.top/posts/11193.html</id>
    <published>2018-07-09T16:52:22.000Z</published>
    <updated>2019-07-08T20:12:30.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="勇者部五箇条"><a href="#勇者部五箇条" class="headerlink" title="勇者部五箇条"></a><s>勇者部五箇条</s></h3><h3 id="勇者部六箇条"><a href="#勇者部六箇条" class="headerlink" title="勇者部六箇条"></a>勇者部六箇条</h3><blockquote><p></p><p style="color:rgb(120, 120, 120)">一、挨拶はきちんと<br><br>二、なるべく谛めない<br><br>三、よく寝て、よく食べる<br><br>四、悩んだら相谈<br><br>五、なせば大抵なんとかなる<br></p><a id="more"></a>.  .  .  .  .  .<br><p></p></blockquote><p></p><p style="color:rgb(120, 120, 120)">六、人を助けるが、自分も幸せになる。<br></p><p><h>つづく<h></h></h></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;勇者部五箇条&quot;&gt;&lt;a href=&quot;#勇者部五箇条&quot; class=&quot;headerlink&quot; title=&quot;勇者部五箇条&quot;&gt;&lt;/a&gt;&lt;s&gt;勇者部五箇条&lt;/s&gt;&lt;/h3&gt;&lt;h3 id=&quot;勇者部六箇条&quot;&gt;&lt;a href=&quot;#勇者部六箇条&quot; class=&quot;headerlink&quot; title=&quot;勇者部六箇条&quot;&gt;&lt;/a&gt;勇者部六箇条&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;color:rgb(120, 120, 120)&quot;&gt;一、挨拶はきちんと&lt;br&gt;&lt;br&gt;二、なるべく谛めない&lt;br&gt;&lt;br&gt;三、よく寝て、よく食べる&lt;br&gt;&lt;br&gt;四、悩んだら相谈&lt;br&gt;&lt;br&gt;五、なせば大抵なんとかなる&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://blog.weearc.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://blog.weearc.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="漫评" scheme="https://blog.weearc.top/tags/%E6%BC%AB%E8%AF%84/"/>
    
      <category term="结城友奈是勇者" scheme="https://blog.weearc.top/tags/%E7%BB%93%E5%9F%8E%E5%8F%8B%E5%A5%88%E6%98%AF%E5%8B%87%E8%80%85/"/>
    
      <category term="魔法少女" scheme="https://blog.weearc.top/tags/%E9%AD%94%E6%B3%95%E5%B0%91%E5%A5%B3/"/>
    
      <category term="泪腺崩坏" scheme="https://blog.weearc.top/tags/%E6%B3%AA%E8%85%BA%E5%B4%A9%E5%9D%8F/"/>
    
  </entry>
  
</feed>
